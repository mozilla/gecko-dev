<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>

<!--
  queryset - two with condition
-->

<window title="XUL Template Tests" width="500" height="600"
        onload="test_template();"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>

  <body xmlns="http://www.w3.org/1999/xhtml" style="height: 300px; overflow: auto;"/>

  <data id="output">
    <hbox step="-6" id="http://www.some-fictitious-zoo.com/birds/emu">
      <label value="Emu"/>
      <label value="Dromaius novaehollandiae"/>
    </hbox>
    <button step="6" id="http://www.some-fictitious-zoo.com/birds/emu" label="No Emus Currently"/>
    <hbox step="3" id="http://www.some-fictitious-zoo.com/birds/archaeopteryx">
      <label value="Archaeopteryx"/>
      <label value="Archaeopteryx lithographica"/>
    </hbox>
    <hbox step="-2" id="http://www.some-fictitious-zoo.com/birds/barnowl">
      <label value="Barn Owl"/>
      <label value="Tyto alba"/>
    </hbox>
    <button step="-5" id="http://www.some-fictitious-zoo.com/birds/raven" label="No Ravens Currently"/>
    <hbox step="5" id="http://www.some-fictitious-zoo.com/birds/raven">
      <label step="-7" value="Raven"/>
      <label step="7" value="Crow"/>
      <label value="Corvus corax"/>
    </hbox>
  </data>

<script src="templates_shared.js"/>

<script>
<![CDATA[
SimpleTest.waitForExplicitFinish();

var testid ="queryset - two with condition";
var queryType = "rdf";
var isTreeBuilder = false;
var needsOpen = false;
var notWorkingYet = false;
var notWorkingYetDynamic = false;
var expectedOutput = document.getElementById("output");

var changes = [
  // step 1
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'birds/archaeopteryx');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Archaeopteryx'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.InsertElementAt(newnode, '2', true);
  },
  // step 2
  function(targetds, root) {
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    var removednode = container.RemoveElementAt('3', true);
    targetds.Unassert(removednode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                      RDF.GetLiteral('Barn Owl'), true);
  },
  // step 3
  function(targetds, root) {
    targetds.Assert(RDF.GetResource(ZOO_NS + 'birds/archaeopteryx'),
                    RDF.GetResource(ZOO_NS + 'rdf#species'),
                    RDF.GetLiteral('Archaeopteryx lithographica'), true);
  },
  // step 4
  function(targetds, root) {
    targetds.Assert(RDF.GetResource(ZOO_NS + 'birds/archaeopteryx'),
                    RDF.GetResource(ZOO_NS + 'rdf#specimens'),
                    RDF.GetLiteral('5'), true);
  },
  // step 5
  function(targetds, root) {
    var subject = RDF.GetResource(ZOO_NS + 'birds/raven');
    var predicate = RDF.GetResource(ZOO_NS + 'rdf#specimens');
    var oldval = targetds.GetTarget(subject, predicate, true);
    targetds.Change(RDF.GetResource(ZOO_NS + 'birds/raven'),
                    RDF.GetResource(ZOO_NS + 'rdf#specimens'),
                    oldval, RDF.GetLiteral('2'));
  },
  // step 6
  function(targetds, root) {
    var subject = RDF.GetResource(ZOO_NS + 'birds/emu');
    var predicate = RDF.GetResource(ZOO_NS + 'rdf#specimens');
    var oldval = targetds.GetTarget(subject, predicate, true);
    targetds.Change(RDF.GetResource(ZOO_NS + 'birds/emu'),
                    RDF.GetResource(ZOO_NS + 'rdf#specimens'),
                    oldval, RDF.GetLiteral('0'));
  },
  // step 7
  function(targetds, root) {
    var subject = RDF.GetResource(ZOO_NS + 'birds/raven');
    var predicate = RDF.GetResource(ZOO_NS + 'rdf#name');
    var oldval = targetds.GetTarget(subject, predicate, true);
    targetds.Change(RDF.GetResource(ZOO_NS + 'birds/raven'),
                    RDF.GetResource(ZOO_NS + 'rdf#name'),
                    oldval, RDF.GetLiteral('Crow'));
  }
];
]]>
</script>

<vbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="root" datasources="rdf:null" ref="http://www.some-fictitious-zoo.com/birds">
<template>
<queryset>
<query>
<content uri="?uri"/>
<member container="?uri" child="?child"/>
<triple subject="?child" predicate="http://www.some-fictitious-zoo.com/rdf#name" object="?name"/>
<triple subject="?child" predicate="http://www.some-fictitious-zoo.com/rdf#specimens" object="?specimens"/>
</query>
<rule>
<conditions>
<where subject="?specimens" rel="equals" value="0"/>
</conditions>
<action>
<button uri="?child" label="No ?name^s Currently"/>
</action>
</rule>
</queryset>
<queryset>
<query>
<content uri="?uri"/>
<member container="?uri" child="?child"/>
<triple subject="?child" predicate="http://www.some-fictitious-zoo.com/rdf#name" object="?name"/>
<triple subject="?child" predicate="http://www.some-fictitious-zoo.com/rdf#species" object="?species"/>
</query>
<action>
<hbox uri="?child">
<label value="?name^?unknown"/>
<label value="?species^?specimens"/>
</hbox>
</action>
</queryset>
</template>
</vbox>

</window>
