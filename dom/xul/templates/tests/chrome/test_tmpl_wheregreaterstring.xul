<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>

<!--
  where - greater string
-->

<window title="XUL Template Tests" width="500" height="600"
        onload="test_template();"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>

  <body xmlns="http://www.w3.org/1999/xhtml" style="height: 300px; overflow: auto;"/>

  <data id="output">
    <label step="-4" id="http://www.some-fictitious-zoo.com/mammals/africanelephant" value="14"/>
    <label step="6" id="http://www.some-fictitious-zoo.com/mammals/koala" value="8"/>
    <label id="http://www.some-fictitious-zoo.com/mammals/llama" value="5"/>
    <label id="http://www.some-fictitious-zoo.com/mammals/polarbear" value="20"/>
    <label id="http://www.some-fictitious-zoo.com/mammals/gorilla" value="7"/>
    <label step="5" id="http://www.some-fictitious-zoo.com/mammals/africanelephant" value="14"/>
  </data>

<script src="templates_shared.js"/>

<script>
<![CDATA[
SimpleTest.waitForExplicitFinish();

var testid ="where - greater string";
var queryType = "rdf";
var isTreeBuilder = false;
var needsOpen = false;
var notWorkingYet = false;
var notWorkingYetDynamic = false;
var expectedOutput = document.getElementById("output");

var changes = [
  // step 1
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'mammals/arctichare');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Arctic Hare'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'mammals'));
    container.AppendElement(newnode);
  },
  // step 2
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'mammals/koala');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Koala'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'mammals'));
    container.InsertElementAt(newnode, '4', true);
  },
  // step 3
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'mammals/zebra');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Zebra'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'mammals'));
    container.InsertElementAt(newnode, '1', true);
  },
  // step 4
  function(targetds, root) {
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'mammals'));
    var removednode = container.RemoveElementAt('4', true);
    targetds.Unassert(removednode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                      RDF.GetLiteral('African Elephant'), true);
  },
  // step 5
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'mammals/africanelephant');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('African Elephant'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'mammals'));
    container.AppendElement(newnode);
  },
  // step 6
  function(targetds, root) {
    targetds.Assert(RDF.GetResource(ZOO_NS + 'mammals/koala'),
                    RDF.GetResource(ZOO_NS + 'rdf#specimensAsString'),
                    RDF.GetLiteral('8'), true);
  }
];
]]>
</script>

<vbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="root" datasources="rdf:null" ref="http://www.some-fictitious-zoo.com/mammals">
<template id="template">
<query id="query">
<content uri="?uri"/>
<member container="?uri" child="?animal"/>
<triple subject="?animal" predicate="http://www.some-fictitious-zoo.com/rdf#specimensAsString" object="?specimens"/>
</query>
<rule>
<conditions id="conditions">
<where subject="?specimens" rel="greater" value="4"/>
</conditions>
<action id="action">
<label uri="?animal" value="?specimens"/>
</action>
</rule>
</template>
</vbox>

</window>
