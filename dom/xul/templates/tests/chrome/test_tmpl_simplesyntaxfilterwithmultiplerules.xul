<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>

<!--
  simple syntax - filter with multiple rules
-->

<window title="XUL Template Tests" width="500" height="600"
        onload="test_template();"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>

  <body xmlns="http://www.w3.org/1999/xhtml" style="height: 300px; overflow: auto;"/>

  <data id="output">
    <button id="http://www.some-fictitious-zoo.com/birds/emu" label="Emu"/>
    <label step="-1" id="http://www.some-fictitious-zoo.com/birds/barnowl" value="Barn Owl"/>
    <button step="4,-5" id="http://www.some-fictitious-zoo.com/birds/barnowl" label="Spooky Bird"/>
    <label step="5" id="http://www.some-fictitious-zoo.com/birds/barnowl" value="Barn Owl"/>
    <button step="1,-3" id="http://www.some-fictitious-zoo.com/birds/barnowl" label="Spooky Bird"/>
    <button id="http://www.some-fictitious-zoo.com/birds/raven" label="Raven"/>
    <label step="2" id="http://www.some-fictitious-zoo.com/birds/syntheticbarnowl" value="Barn Owl"/>
  </data>

<script src="templates_shared.js"/>

<script>
<![CDATA[
SimpleTest.waitForExplicitFinish();

var testid ="simple syntax - filter with multiple rules";
var queryType = "rdf";
var isTreeBuilder = false;
var needsOpen = false;
var notWorkingYet = false;
var notWorkingYetDynamic = false;
var expectedOutput = document.getElementById("output");

var changes = [
  // step 1
  function(targetds, root) {
    var subject = RDF.GetResource(ZOO_NS + 'birds/barnowl');
    var predicate = RDF.GetResource(ZOO_NS + 'rdf#name');
    var oldval = targetds.GetTarget(subject, predicate, true);
    targetds.Change(RDF.GetResource(ZOO_NS + 'birds/barnowl'),
                    RDF.GetResource(ZOO_NS + 'rdf#name'),
                    oldval, RDF.GetLiteral('Spooky Bird'));
  },
  // step 2
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'birds/syntheticbarnowl');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Barn Owl'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.AppendElement(newnode);
  },
  // step 3
  function(targetds, root) {
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    var removednode = container.RemoveElementAt('2', true);
  },
  // step 4
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'birds/barnowl');
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.InsertElementAt(newnode, '2', true);
  },
  // step 5
  function(targetds, root) {
    var subject = RDF.GetResource(ZOO_NS + 'birds/barnowl');
    var predicate = RDF.GetResource(ZOO_NS + 'rdf#name');
    var oldval = targetds.GetTarget(subject, predicate, true);
    targetds.Change(RDF.GetResource(ZOO_NS + 'birds/barnowl'),
                    RDF.GetResource(ZOO_NS + 'rdf#name'),
                    oldval, RDF.GetLiteral('Barn Owl'));
  }
];
]]>
</script>

<vbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="root" datasources="rdf:null" ref="http://www.some-fictitious-zoo.com/birds">
<template>
<rule zoo:name="Barn Owl" xmlns:zoo="http://www.some-fictitious-zoo.com/rdf#">
<label uri="rdf:*" value="rdf:http://www.some-fictitious-zoo.com/rdf#name"/>
</rule>
<rule>
<button uri="rdf:*" label="rdf:http://www.some-fictitious-zoo.com/rdf#name"/>
</rule>
</template>
</vbox>

</window>
