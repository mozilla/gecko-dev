<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>

<!--
  menu element recursive
-->

<window title="XUL Template Tests" width="500" height="600"
        onload="test_template()"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>

  <body xmlns="http://www.w3.org/1999/xhtml" style="height: 300px; overflow: auto;"/>

  <data id="output">
    <menupopup>
      <menuitem id="http://www.some-fictitious-zoo.com/arachnids" label="Arachnids" container="true" empty="false"/>
      <menu step="-2" id="http://www.some-fictitious-zoo.com/birds" label="Birds" container="true" empty="false"/>
      <menu step="2" id="http://www.some-fictitious-zoo.com/birds" label="Birds" container="true" empty="false" open="true">
        <menupopup>
          <menuitem step="4" id="http://www.some-fictitious-zoo.com/birds/wren" label="Wren"/>
          <menuitem id="http://www.some-fictitious-zoo.com/birds/emu" label="Emu"/>
          <menuitem step="-5" id="http://www.some-fictitious-zoo.com/birds/barnowl" label="Barn Owl"/>
          <menuitem id="http://www.some-fictitious-zoo.com/birds/raven" label="Raven"/>
          <menuitem step="3" id="http://www.some-fictitious-zoo.com/birds/archaeopteryx" label="Archaeopteryx"/>
          <menuitem id="http://www.some-fictitious-zoo.com/birds/emperorpenguin" label="Emperor Penguin"/>
        </menupopup>
      </menu>
      <menuitem id="http://www.some-fictitious-zoo.com/crustaceans" label="Crustaceans" container="true" empty="true"/>
      <menuitem id="http://www.some-fictitious-zoo.com/fish" label="Fish" container="true" empty="false"/>
      <menuitem id="http://www.some-fictitious-zoo.com/mammals" label="Mammals" container="true" empty="false"/>
      <menuitem id="http://www.some-fictitious-zoo.com/reptiles" label="Reptiles" container="true" empty="false"/>
    </menupopup>
  </data>

<script src="templates_shared.js"/>

<script>
<![CDATA[
SimpleTest.waitForExplicitFinish();

var testid ="menu element recursive";
var queryType = "rdf";
var isTreeBuilder = false;
var needsOpen = true;
var notWorkingYet = false;
var notWorkingYetDynamic = false;
var expectedOutput = document.getElementById("output");

var changes = [
  // step 1
  function(targetds, root) {
    // nothing should change at this step as the submenu is not open
    var newnode = RDF.GetResource(ZOO_NS + 'birds/emperorpenguin');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Emperor Penguin'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.AppendElement(newnode);
  },
  // step 2
  function(targetds, root) {
    // open the submenu
    root.lastChild.firstChild.nextSibling.open = true;
  },
  // step 3
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'birds/archaeopteryx');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Archaeopteryx'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.InsertElementAt(newnode, '4', true);
    root.lastChild.firstChild.nextSibling.open = true;
  },
  // step 4
  function(targetds, root) {
    var newnode = RDF.GetResource(ZOO_NS + 'birds/wren');
    targetds.Assert(newnode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                    RDF.GetLiteral('Wren'), true);
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    container.InsertElementAt(newnode, '1', true);
    root.lastChild.firstChild.nextSibling.open = true;
  },
  // step 5
  function(targetds, root) {
    var container = ContainerUtils.MakeSeq(targetds,
                      RDF.GetResource(ZOO_NS + 'birds'));
    var removednode = container.RemoveElementAt('3', true);
    targetds.Unassert(removednode, RDF.GetResource(ZOO_NS + 'rdf#name'),
                      RDF.GetLiteral('Barn Owl'), true);
    root.lastChild.firstChild.nextSibling.open = true;
  }
];
]]>
</script>

<button xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" type="menu" id="root" datasources="rdf:null" ref="http://www.some-fictitious-zoo.com/all-animals">
<template>
<rule iscontainer="true" zoo:name="Birds" xmlns:zoo="http://www.some-fictitious-zoo.com/rdf#">
<menupopup>
<menu uri="rdf:*" label="rdf:http://www.some-fictitious-zoo.com/rdf#name"/>
</menupopup>
</rule>
<rule parent="button">
<menupopup>
<menuitem uri="rdf:*" label="rdf:http://www.some-fictitious-zoo.com/rdf#name"/>
</menupopup>
</rule>
<rule parent="menu">
<menupopup>
<menuitem uri="rdf:*" label="rdf:http://www.some-fictitious-zoo.com/rdf#name"/>
</menupopup>
</rule>
</template>
</button>

</window>
