/* -*- Mode: C++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 8 -*- */
/* vim: set sw=4 ts=8 et tw=80 ft=cpp : */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;

namespace mozilla {
namespace dom {

/* This protocol bridges async access to the database thread running on the parent process
 * and caches running on the child process.
 */
prio(normal upto urgent) sync protocol PStorage
{
  manager PContent;

parent:
  async __delete__();

  prio(urgent) sync Preload(nsCString scope, uint32_t alreadyLoadedCount)
    returns (nsString[] keys, nsString[] values, nsresult rv);

  async AsyncPreload(nsCString scope, bool priority);
  async AsyncGetUsage(nsCString scope);
  async AsyncAddItem(nsCString scope, nsString key, nsString value);
  async AsyncUpdateItem(nsCString scope, nsString key, nsString value);
  async AsyncRemoveItem(nsCString scope, nsString key);
  async AsyncClear(nsCString scope);
  async AsyncFlush();
  
child:
  async Observe(nsCString topic, nsCString scopePrefix);
  async ScopesHavingData(nsCString[] scopes);
  async LoadItem(nsCString scope, nsString key, nsString value);
  async LoadDone(nsCString scope, nsresult rv);
  async LoadUsage(nsCString scope, int64_t usage);
  async Error(nsresult rv);
};

}
}
