/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include "mozilla/dom/MediaIPCUtils.h";

include protocol PRemoteDecoderManager;
include PMediaDecoderParams;
include LayersSurfaces;
using mozilla::MediaDataDecoder::ConversionRequired from "PlatformDecoderModule.h";

namespace mozilla {

struct RemoteVideoDataIPDL
{
  MediaDataIPDL base;
  IntSize display;
  IntSize frameSize;
  SurfaceDescriptorBuffer sdBuffer;
  int32_t frameID;
};

// This protocol provides a way to use MediaDataDecoder across processes.
// The parent side currently is only implemented to work with
// RemoteDecoderModule.
// The child side runs in the content process, and the parent side runs
// in the RDD process. We run a separate IPDL thread for both sides.
async protocol PRemoteVideoDecoder
{
  manager PRemoteDecoderManager;
parent:
  async Init();

  async Input(MediaRawDataIPDL data);

  async Flush();
  async Drain();
  async Shutdown();

  async SetSeekThreshold(int64_t time);

  async __delete__();

child:
  async InitComplete(nsCString decoderDescription,
                     ConversionRequired conversion);
  async InitFailed(nsresult reason);

  async FlushComplete();

  // Each output includes a SurfaceDescriptorBuffer that represents the decoded
  // frame.
  async VideoOutput(RemoteVideoDataIPDL data);
  async InputExhausted();
  async DrainComplete();
  async Error(nsresult error);
};

} // namespace mozilla
