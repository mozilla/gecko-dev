/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PAsmJSCacheEntry;
include protocol PBackgroundIDBFactory;
include protocol PBackgroundIndexedDBUtils;
include protocol PBackgroundTest;
include protocol PBlob;
include protocol PBroadcastChannel;
include protocol PCache;
include protocol PCacheStorage;
include protocol PCacheStreamControl;
include protocol PFileDescriptorSet;
include protocol PFileSystemRequest;
include protocol PGamepadEventChannel;
include protocol PGamepadTestChannel;
include protocol PMessagePort;
include protocol PCameras;
include protocol PQuota;
include protocol PSendStream;
include protocol PServiceWorkerManager;
include protocol PUDPSocket;
include protocol PVsync;

include DOMTypes;
include PBackgroundSharedTypes;
include PBackgroundIDBSharedTypes;
include PFileSystemParams;
include ProtocolTypes;

include "mozilla/dom/cache/IPCUtils.h";

using mozilla::dom::cache::Namespace
  from "mozilla/dom/cache/Types.h";

using mozilla::dom::asmjscache::OpenMode
  from "mozilla/dom/asmjscache/AsmJSCache.h";

using mozilla::dom::asmjscache::WriteParams
  from "mozilla/dom/asmjscache/AsmJSCache.h";

namespace mozilla {
namespace ipc {

sync protocol PBackground
{
  manages PAsmJSCacheEntry;
  manages PBackgroundIDBFactory;
  manages PBackgroundIndexedDBUtils;
  manages PBackgroundTest;
  manages PBlob;
  manages PBroadcastChannel;
  manages PCache;
  manages PCacheStorage;
  manages PCacheStreamControl;
  manages PFileDescriptorSet;
  manages PFileSystemRequest;
  manages PGamepadEventChannel;
  manages PGamepadTestChannel;
  manages PMessagePort;
  manages PCameras;
  manages PQuota;
  manages PSendStream;
  manages PServiceWorkerManager;
  manages PUDPSocket;
  manages PVsync;

parent:
  // Only called at startup during mochitests to check the basic infrastructure.
  async PBackgroundTest(nsCString testArg);

  async PBackgroundIDBFactory(LoggingInfo loggingInfo);

  async PBackgroundIndexedDBUtils();

  // Use only for testing!
  async FlushPendingFileDeletions();

  async PVsync();

  async PCameras();

  async PUDPSocket(OptionalPrincipalInfo pInfo, nsCString filter);
  async PBroadcastChannel(PrincipalInfo pInfo, nsCString origin, nsString channel);

  async PServiceWorkerManager();

  async ShutdownServiceWorkerRegistrar();

  async PCacheStorage(Namespace aNamespace, PrincipalInfo aPrincipalInfo);

  async PMessagePort(nsID uuid, nsID destinationUuid, uint32_t sequenceId);

  async PSendStream();

  async MessagePortForceClose(nsID uuid, nsID destinationUuid, uint32_t sequenceId);

  async PAsmJSCacheEntry(OpenMode openMode,
                         WriteParams write,
                         PrincipalInfo principalInfo);

  async PQuota();

  async PFileSystemRequest(FileSystemParams params);

  async PGamepadEventChannel();

  async PGamepadTestChannel();

child:
  async PCache();
  async PCacheStreamControl();

both:
  async PBlob(BlobConstructorParams params);

  async PFileDescriptorSet(FileDescriptor fd);
};

} // namespace ipc
} // namespace mozilla
