# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

ifneq ($(dir $(PROGRAM)),./)
  GENERATED_DIRS = $(dir $(PROGRAM))
endif

ifeq (android,$(MOZ_WIDGET_TOOLKIT))
WRAP_LDFLAGS =
else
LIBS += \
  $(XPCOM_LIBS) \
  $(NSPR_LIBS) \
  $(NULL)
endif

ifeq (gonk,$(MOZ_WIDGET_TOOLKIT))
LIBS += \
  -lbinder \
  -lutils \
  $(NULL)
endif

LOCAL_INCLUDES += -I$(topsrcdir)/toolkit/xre
LOCAL_INCLUDES += -I$(topsrcdir)/xpcom/base

ifndef MOZ_WINCONSOLE
ifdef MOZ_DEBUG
MOZ_WINCONSOLE = 1
else
MOZ_WINCONSOLE = 0
endif
endif

# This switches $(INSTALL) to copy mode, like $(SYSINSTALL), so things that
# shouldn't get 755 perms need $(IFLAGS1) for either way of calling nsinstall.
NSDISTMODE = copy

include $(topsrcdir)/config/config.mk

ifdef _MSC_VER
# Always enter a Windows program through wmain, whether or not we're
# a console application.
WIN32_EXE_LDFLAGS += -ENTRY:wmainCRTStartup
endif

include $(topsrcdir)/config/rules.mk

LDFLAGS += $(MOZ_ALLOW_HEAP_EXECUTE_FLAGS)

ifeq ($(OS_ARCH),WINNT) #{

ifdef MOZ_CONTENT_SANDBOX
LIBS += ../../security/sandbox/$(LIB_PREFIX)sandbox_s.$(LIB_SUFFIX)
LIBS += $(NSPR_LIBS)
LOCAL_INCLUDES += \
  -I$(topsrcdir)/security/ \
  -I$(topsrcdir)/security/sandbox \
  -I$(topsrcdir)/security/sandbox/chromium \
  $(NULL)
endif

# Note the manifest file exists in the tree, so we use the explicit filename
# here.
EXTRA_DEPS += plugin-container.exe.manifest
#
# Control the default heap size.
# This is the heap returned by GetProcessHeap().
# As we use the CRT heap, the default size is too large and wastes VM.
#
# The default heap size is 1MB on Win32.
# The heap will grow if need be.
#
# Set it to 256k.  See bug 127069.
#
ifndef GNU_CC #{
LDFLAGS += /HEAP:0x40000
endif #}
endif #}

ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT)) #{

libs::
	$(NSINSTALL) -D $(DIST)/bin/$(PROGRAM).app
	rsync -a -C --exclude '*.in' $(srcdir)/macbuild/Contents $(DIST)/bin/$(PROGRAM).app 
	sed -e 's/%PROGRAM%/$(PROGRAM)/' $(srcdir)/macbuild/Contents/Info.plist.in > $(DIST)/bin/$(PROGRAM).app/Contents/Info.plist
	sed -e 's/%APP_NAME%/$(MOZ_APP_DISPLAYNAME)/' $(srcdir)/macbuild/Contents/Resources/English.lproj/InfoPlist.strings.in | \
	  iconv -f UTF-8 -t UTF-16 > $(DIST)/bin/$(PROGRAM).app/Contents/Resources/English.lproj/InfoPlist.strings
	$(NSINSTALL) -D $(DIST)/bin/$(PROGRAM).app/Contents/MacOS
	$(NSINSTALL) $(PROGRAM) $(DIST)/bin/$(PROGRAM).app/Contents/MacOS
	$(RM) $(DIST)/bin/$(PROGRAM)
endif #}
