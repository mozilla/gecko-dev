# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

STANDALONE_MAKEFILE := 1

NO_PKG_FILES = \
	xulrunner-config \
	regchrome* \
	regxpcom* \
	$(NULL)

# We want xpcshell, run-mozilla and install_app.py in the SDK but not in the binary package.
ifndef STAGE_SDK
NO_PKG_FILES += \
	xpcshell* \
	run-mozilla* \
	install_app.py \
	$(NULL)
endif

# If we're on mac, we don't want an end-user-facing DMG, we want a .tar.bz2
# which developers then use to package their application.

ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
MOZ_PKG_FORMAT = BZ2
_APPNAME = XUL.framework
_BINPATH = /$(_APPNAME)/Versions/Current
_RESPATH := $(_BINPATH)
endif

include $(topsrcdir)/config/rules.mk

INSTALL_SDK = 1

include $(topsrcdir)/toolkit/mozapps/installer/signing.mk
include $(topsrcdir)/toolkit/mozapps/installer/packager.mk

# Add pkg-config files to the install:: target

pkg_config_files = \
	libxul.pc \
	libxul-embedding.pc \
	mozilla-js.pc \
	mozilla-plugin.pc \
	$(NULL)

ifdef MOZ_NATIVE_NSPR
NSPR_NAME=nspr
NSPR_VERSION=$(shell $(NSPR_CONFIG) --version)
else
pkg_config_files += mozilla-nspr.pc
NSPR_NAME=mozilla-nspr
FULL_NSPR_CFLAGS=-I\$${includedir}
FULL_NSPR_LIBS=$(subst $(prefix),\$${sdkdir},$(shell $(DEPTH)/nsprpub/config/nspr-config --libs))
NSPR_VERSION=$(shell $(DEPTH)/nsprpub/config/nspr-config --version)
endif

MOZ_XUL_LINK = -lxpcomglue_s -lxul
ifdef JS_SHARED_LIBRARY
MOZ_JS_LINK = -lmozjs
else
MOZ_JS_LINK = $(MOZ_XUL_LINK)
endif

$(warning FULL_NSPR_CFLAGS=$(FULL_NSPR_CFLAGS))

ifndef MOZ_NATIVE_NSS
pkg_config_files += mozilla-nss.pc
endif

%.pc: $(srcdir)/%.pc.in $(GLOBAL_DEPS)
	cat $< | sed \
	-e "s|%prefix%|$(prefix)|" \
	-e "s|%includedir%|$(includedir)|" \
	-e "s|%idldir%|$(idldir)|" \
	-e "s|%sdkdir%|$(sdkdir)|" \
	-e "s|%MOZ_APP_NAME%|$(MOZ_APP_NAME)|" \
	-e "s|%MOZILLA_VERSION%|$(MOZ_APP_VERSION)|" \
	-e "s|%WCHAR_CFLAGS%|$(WCHAR_CFLAGS)|" \
	-e "s|%FULL_NSPR_LIBS%|$(FULL_NSPR_LIBS)|" \
	-e "s|%FULL_NSPR_CFLAGS%|$(FULL_NSPR_CFLAGS)|" \
	-e "s|%NSPR_NAME%|$(NSPR_NAME)|" \
	-e "s|%NSPR_VERSION%|$(NSPR_VERSION)|" \
	-e "s|%MOZ_XUL_LINK%|$(MOZ_XUL_LINK)|" \
	-e "s|%MOZ_JS_LINK%|$(MOZ_JS_LINK)|" > $@
	chmod 644 $@

install:: $(pkg_config_files)
	@echo pkg_config_file: $(pkg_config_files)
	$(SYSINSTALL) $(IFLAGS1) $^ $(DESTDIR)$(libdir)/pkgconfig

GARBAGE += $(pkg_config_files)

GARBAGE += debian/changelog

DEBDESTDIR=debian/$(MOZ_BUILD_APP)

GRE_BUILDID = $(shell $(PYTHON) $(topsrcdir)/config/printconfigsetting.py $(LIBXUL_DIST)/bin/platform.ini Build BuildID)
MOZ_DEB_TIMESTAMP = "$(shell date  +"%a, %d  %b %Y %T %z" )"

DEFINES += \
	-DGRE_MILESTONE=$(GRE_MILESTONE) \
	-DGRE_BUILDID=$(GRE_BUILDID) \
	-DMOZ_DEB_TIMESTAMP=$(MOZ_DEB_TIMESTAMP) \
	-DMOZ_APP_NAME=$(MOZ_APP_NAME) \
	-Dinstalldir=$(installdir) \
	$(NULL)

ifeq ($(OS_TARGET),Linux)
debian/changelog: $(srcdir)/debian/changelog.in  $(LIBXUL_DIST)/bin/platform.ini
	$(call py_action,preprocessor, \
        $(AUTOMATION_PPARGS) $(DEFINES) $(ACDEFINES) $^ -o $@)

debian/xulrunner.links: $(srcdir)/debian/xulrunner.links.in
	$(call py_action,preprocessor, \
        $(AUTOMATION_PPARGS) $(DEFINES) $(ACDEFINES) $^ -o $@)

debian/xulrunner.service: $(srcdir)/debian/xulrunner.service.in
	$(call py_action,preprocessor, \
        $(AUTOMATION_PPARGS) $(DEFINES) $(ACDEFINES) $^ -o $@)

debian/prerm: $(srcdir)/debian/prerm.in
	$(call py_action,preprocessor, \
        $(AUTOMATION_PPARGS) $(DEFINES) $(ACDEFINES) $^ -o $@)

debian/postinst: $(srcdir)/debian/postinst.in
	$(call py_action,preprocessor, \
        $(AUTOMATION_PPARGS) $(DEFINES) $(ACDEFINES) $^ -o $@)

package:
	$(MAKE) package -C $(DEPTH)

deb: package debian/changelog debian/xulrunner.service debian/xulrunner.links
	$(NSINSTALL)  $(topsrcdir)/$(MOZ_BUILD_APP)/installer/debian .
	rm -fr $(DEBDESTDIR)
	$(NSINSTALL) -D $(DEBDESTDIR)/$(installdir)
	cp -pRL $(DEPTH)/dist/$(MOZ_BUILD_APP)/* $(DEBDESTDIR)/$(installdir)
	$(NSINSTALL) -D $(DEBDESTDIR)/usr/share/dbus-1/services/
	cp debian/$(MOZ_BUILD_APP).service $(DEBDESTDIR)/usr/share/dbus-1/services/org.mozilla.$(MOZ_BUILD_APP).service
	dh_link; fakeroot dh_fixperms; fakeroot dh_installdeb; fakeroot dh_shlibdeps; fakeroot dh_gencontrol; fakeroot dh_md5sums; fakeroot dh_builddeb;
endif

DEB_BUILD_ARCH = $(shell dpkg-architecture -qDEB_BUILD_ARCH)
# package name comes from xulrunner/installer/debian/changelog.in
DEB_PKG_NAME  = $(MOZ_PKG_APPNAME)_$(GRE_MILESTONE)-$(GRE_BUILDID)_$(DEB_BUILD_ARCH).deb
# relative to $(DIST)
UPLOAD_EXTRA_FILES += ../xulrunner/$(DEB_PKG_NAME)
