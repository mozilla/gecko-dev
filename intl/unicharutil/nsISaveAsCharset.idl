/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"
#include "nsIEntityConverter.idl"

%{C++
#define NS_SAVEASCHARSET_CID { 0xcd233e0, 0x7a86, 0x11d3, { 0x91, 0x5c, 0x0, 0x60, 0x8, 0xa6, 0xed, 0xf6 } }
#define NS_SAVEASCHARSET_CONTRACTID "@mozilla.org/intl/saveascharset;1"
%}

/**
 * DO NOT USE! For compat with legacy extension code only.
 */
[scriptable, uuid(b3b8124f-0abb-460e-88ac-3cf1a0134b2d)]
interface nsISaveAsCharset : nsISupports
{
  // attributes
  const unsigned long mask_Fallback                = 0x000000FF; // mask for fallback (8bits)
  const unsigned long mask_Entity                  = 0x00000300; // mask for entity (2bits)
  const unsigned long mask_CharsetFallback         = 0x00000400; // mask for charset fallback (1bit)

  const unsigned long attr_FallbackNone = 0;                   // IGNORED
  const unsigned long attr_FallbackQuestionMark = 1;           // IGNORED
  const unsigned long attr_FallbackEscapeU = 2;                // IGNORED
  const unsigned long attr_FallbackDecimalNCR = 3;             // IGNORED
  const unsigned long attr_FallbackHexNCR = 4;                 // IGNORED

  const unsigned long attr_EntityNone = 0;                       // IGNORED
  const unsigned long attr_EntityBeforeCharsetConv = 0x00000100; // IGNORED
  const unsigned long attr_EntityAfterCharsetConv =  0x00000200; // IGNORED

  const unsigned long attr_CharsetFallback        =  0x00000400; // IGNORED


                                                               // default attribute for plain text
  const unsigned long attr_plainTextDefault = attr_FallbackNone + attr_EntityNone;               
  
                                                               // default attribute for html text
                                                               // generate entity before charset conversion, use decimal NCR
  const unsigned long attr_htmlTextDefault = attr_FallbackDecimalNCR + attr_EntityBeforeCharsetConv;

  readonly attribute AUTF8String charset;                      // charset used for the conversion

  void Init(in AUTF8String charset, in unsigned long ignored, in unsigned long alsoIgnored);

  ACString Convert(in AString inString);
};
