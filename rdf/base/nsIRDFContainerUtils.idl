/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"
#include "nsIRDFContainer.idl"
#include "nsIRDFResource.idl"


// Container utilities
[scriptable, uuid(D4214E91-FB94-11D2-BDD8-00104BDE6048)]
interface nsIRDFContainerUtils : nsISupports {
    /**
     * Returns 'true' if the property is an RDF ordinal property.
     */
    boolean IsOrdinalProperty(in nsIRDFResource aProperty);

    /**
     * Convert the specified index to an ordinal property.
     */
    nsIRDFResource IndexToOrdinalResource(in long aIndex);

    /**
     * Convert the specified ordinal property into an index
     */
    long OrdinalResourceToIndex(in nsIRDFResource aOrdinal);

    /**
     * Return 'true' if the specified resource is a container
     */
    boolean IsContainer(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a container and it is empty
     */
    boolean IsEmpty(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a bag
     */
    boolean IsBag(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a sequence
     */
    boolean IsSeq(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is an alternation
     */
    boolean IsAlt(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty bag in the specified data source.
     */
    nsIRDFContainer MakeBag(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty sequence in the specified data source.
     */
    nsIRDFContainer MakeSeq(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty alternation in the specified data source.
     */
    nsIRDFContainer MakeAlt(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Retrieve the index of element in the container. Returns -1 if
     * the element is not in the container.
     */
    long indexOf(in nsIRDFDataSource aDataSource, in nsIRDFResource aContainer, in nsIRDFNode aElement);
};

%{C++
extern nsresult
NS_NewRDFContainerUtils(nsIRDFContainerUtils** aResult);
%}
