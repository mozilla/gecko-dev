<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<!--
 * Test bug 431188 to make sure the Clear list button is enabled after doing a
 * search and finding results.
-->

<window title="Download Manager Test"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="test();">

  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
  <script type="application/javascript"
          src="utils.js"/>

  <script type="application/javascript">
  <![CDATA[

function test()
{
  var dmui = getDMUI();
  if (!dmui) {
    todo(false, "skip test for toolkit download manager UI");
    return;
  }

  let dm = Cc["@mozilla.org/download-manager;1"].
           getService(Ci.nsIDownloadManager);
  let db = dm.DBConnection;

  // Empty any old downloads
  db.executeSimpleSQL("DELETE FROM moz_downloads");

  // Make a file name for the downloads
  let file = Cc["@mozilla.org/file/directory_service;1"].
             getService(Ci.nsIProperties).get("TmpD", Ci.nsIFile);
  file.append("cleanUp");
  let filePath = Cc["@mozilla.org/network/io-service;1"].
                 getService(Ci.nsIIOService).newFileURI(file).spec;

  let stmt = db.createStatement(
    "INSERT INTO moz_downloads (target, source, state, endTime) " +
    "VALUES (?1, ?2, ?3, ?4)");

  // Add a bunch of downloads that don't match the search
  let sites = [];
  for (let i = 0; i < 50; i++)
    sites.push("i-hate.clear-list-" + i);

  // Add one download that matches the search
  let searchTerm = "one-download.match-search";
  sites.push(searchTerm);

  try {
    for each (let site in sites) {
      stmt.bindByIndex(0, filePath);
      stmt.bindByIndex(1, "http://" + site + "/file");
      stmt.bindByIndex(2, dm.DOWNLOAD_FINISHED);
      // Make the one that matches slightly older so it appears last
      stmt.bindByIndex(3, 1112223334445556 - (site == searchTerm));

      // Add it!
      stmt.execute();
    }
  }
  finally {
    stmt.reset();
    stmt.finalize();
  }

  // Close the UI if necessary
  let wm = Cc["@mozilla.org/appshell/window-mediator;1"].
           getService(Ci.nsIWindowMediator);
  let win = wm.getMostRecentWindow("Download:Manager");
  if (win) win.close();

  let obs = Cc["@mozilla.org/observer-service;1"].
            getService(Ci.nsIObserverService);
  const DLMGR_UI_DONE = "download-manager-ui-done";

  let testPhase = 0;
  let testObs = {
    observe: function(aSubject, aTopic, aData) {
      if (aTopic != DLMGR_UI_DONE)
        return;

      let win = aSubject.QueryInterface(Ci.nsIDOMWindow);
      win.focus();
      let $ = function(aId) win.document.getElementById(aId);
      let downloadView = $("downloadView");
      let searchbox = $("searchbox");
      let clearList = $("clearListButton");

      // The list must have built, so figure out what test to do
      switch (testPhase++) {
        case 0:
        case 2:
          // Search for the one download
          searchbox.value = searchTerm;
          searchbox.doCommand();

          break;
        case 1:
          // Search came back with 1 item
          is(downloadView.itemCount, 1, "Search found the item to delete");
          is(clearList.disabled, false, "Clear list is enabled for search matching 1 item");

          // Clear the list that has the single matched item
          clearList.doCommand();

          break;
        case 3:
          // There's nothing that matches the search
          is(downloadView.itemCount, 0, "Clear list killed the one matching download");
          is(clearList.disabled, true, "Clear list is disabled for no items");

          // We're done!
          win.close();
          obs.removeObserver(testObs, DLMGR_UI_DONE);
          SimpleTest.finish();

          break;
      }
    }
  };
  obs.addObserver(testObs, DLMGR_UI_DONE, false);

  // Show the Download Manager UI
  dmui.show();

  SimpleTest.waitForExplicitFinish();
}

  ]]>
  </script>

  <body xmlns="http://www.w3.org/1999/xhtml">
    <p id="display"></p>
    <div id="content" style="display:none;"></div>
    <pre id="test"></pre>
  </body>
</window>
