/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIStringEnumerator;

/**
 * The XUL store is used to store information related to a XUL document/application.
 * Typically it is used to store the persisted state for the document, such as
 * window location, toolbars that are open and nodes that are open and closed in a tree.
 *
 * The data is serialized to [profile directory]/xulstore.json
 */
[scriptable, uuid(987c4b35-c426-4dd7-ad49-3c9fa4c65d20)]

interface nsIXULStore: nsISupports
{
  /**
   * Sets a value in the store.
   *
   * @param doc - document URI
   * @param id - identifier of the node
   * @param attr - attribute to store
   * @param value - value of the attribute
   */
  void setValue(in AString doc, in AString id, in AString attr, in AString value);

  /**
   * Returns true if the store contains a value for attr.
   *
   * @param doc - URI of the document
   * @param id - identifier of the node
   * @param attr - attribute
   */
  bool hasValue(in AString doc, in AString id, in AString attr);

  /**
   * Retrieves a value in the store, or an empty string if it does not exist.
   *
   * @param doc - document URI
   * @param id - identifier of the node
   * @param attr - attribute to retrieve
   *
   * @returns the value of the attribute
   */
  AString getValue(in AString doc, in AString id, in AString attr);

  /**
   * Removes a value in the store.
   *
   * @param doc - document URI
   * @param id - identifier of the node
   * @param attr - attribute to remove
   */
  void removeValue(in AString doc, in AString id, in AString attr);

  /**
   * Iterates over all of the ids associated with a given document uri that
   * have stored data.
   *
   * @param doc - document URI
   */
  nsIStringEnumerator getIDsEnumerator(in AString doc);

  /**
   * Iterates over all of the attributes associated with a given document uri
   * and id that have stored data.
   *
   * @param doc - document URI
   * @param id - identifier of the node
   */
  nsIStringEnumerator getAttributeEnumerator(in AString doc, in AString id);
};
