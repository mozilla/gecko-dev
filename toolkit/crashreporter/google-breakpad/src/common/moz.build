# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['OS_ARCH'] in ('Darwin', 'Linux'):
    DIRS += ['dwarf']

UNIFIED_SOURCES += [
    'convert_UTF.c',
    'logging.cc',
    'module.cc',
    'pathname_stripper.cc',
    'string_conversion.cc',
    'unique_string.cc',
]

if CONFIG['OS_TARGET'] != 'WINNT':
    UNIFIED_SOURCES += [
        'arm_ex_reader.cc',
        'arm_ex_to_module.cc',
        'dwarf/bytereader.cc',
        'dwarf/dwarf2diehandler.cc',
        'dwarf/dwarf2reader.cc',
        'dwarf_cfi_to_module.cc',
        'dwarf_cu_to_module.cc',
        'dwarf_line_to_module.cc',
        'language.cc',
        'md5.cc',
    ]

if CONFIG['OS_ARCH'] == 'Linux':
    UNIFIED_SOURCES += [
        'linux/dump_symbols.cc',
        'linux/elf_symbols_to_module.cc',
    ]

if CONFIG['OS_TARGET'] == 'Android':
    pass
else:
    if CONFIG['OS_TARGET'] != 'WINNT':
        UNIFIED_SOURCES += [
            'stabs_reader.cc',
            'stabs_to_module.cc',
        ]

if CONFIG['OS_TARGET'] != 'WINNT' and CONFIG['MOZ_CRASHREPORTER']:
    HOST_SOURCES += [ 'convert_UTF.c' ]
    HostLibrary('host_breakpad_common_s')
    HOST_SOURCES += [
        'arm_ex_reader.cc',
        'arm_ex_to_module.cc',
        'dwarf_cfi_to_module.cc',
        'dwarf_cu_to_module.cc',
        'dwarf_line_to_module.cc',
        'language.cc',
        'logging.cc',
        'md5.cc',
        'module.cc',
        'pathname_stripper.cc',
        'stabs_reader.cc',
        'stabs_to_module.cc',
        'string_conversion.cc',
        'unique_string.cc',
    ]

if CONFIG['OS_ARCH'] == 'Darwin':
    UNIFIED_SOURCES += [
        'mac/dump_syms.mm',
    ]

if CONFIG['OS_TARGET'] == 'Android':
    # We don't support unifying assembly files.
    SOURCES += [
        'android/breakpad_getcontext.S',
    ]

Library('breakpad_common_s')

FINAL_LIBRARY = 'xul'

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gonk':
    DEFINES['ELFSIZE'] = 32

if CONFIG['OS_TARGET'] == 'Android':
    DEFINES['NO_STABS_SUPPORT'] = True

DEFINES['BP_LOGGING_INCLUDE'] = '"BreakpadLogging.h"'

include('/toolkit/crashreporter/crashreporter.mozbuild')

LOCAL_INCLUDES += [
    '..',
    '../../../breakpad-logging',
]
