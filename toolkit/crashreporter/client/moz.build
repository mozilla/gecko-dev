# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['OS_TARGET'] != 'Android':
    Program('crashreporter')

    UNIFIED_SOURCES += [
        'crashreporter.cpp',
    ]

LOCAL_INCLUDES += [
    '../google-breakpad/src',
]

if CONFIG['OS_ARCH'] == 'WINNT':
    UNIFIED_SOURCES += [
        'crashreporter_win.cpp',
    ]
    DEFINES['UNICODE'] = True
    DEFINES['_UNICODE'] = True
    USE_LIBS += [
        'google_breakpad_libxul_staticruntime_s',
    ]
    OS_LIBS += [
        'comctl32',
        'shell32',
        'wininet',
        'shlwapi',
    ]
    USE_STATIC_LIBS = True
elif CONFIG['OS_ARCH'] == 'Darwin':
    UNIFIED_SOURCES += [
        'crashreporter_osx.mm',
        'crashreporter_unix_common.cpp',
    ]
    LOCAL_INCLUDES += [
        '../google-breakpad/src/common/mac',
    ]
    OS_LIBS += ['-framework Cocoa']
    USE_LIBS += [
        'breakpad_common_s',
        'breakpad_logging',
        'breakpad_mac_common_s',
    ]
elif CONFIG['OS_ARCH'] == 'SunOS':
    SOURCES += [
        'crashreporter_linux.cpp',
        'crashreporter_unix.cpp',
    ]
    USE_LIBS += [
        'breakpad_solaris_common_s',
    ]

if CONFIG['MOZ_ENABLE_GTK']:
    UNIFIED_SOURCES += [
        'crashreporter_gtk_common.cpp',
        'crashreporter_linux.cpp',
        'crashreporter_unix_common.cpp'
    ]
    USE_LIBS += [
        'breakpad_linux_common_s',
    ]
    OS_LIBS += CONFIG['TK_LIBS']
    OS_LIBS += CONFIG['MOZ_GTHREAD_LIBS']

RCINCLUDE = 'crashreporter.rc'

# Don't use the STL wrappers in the crashreporter clients; they don't
# link with -lmozalloc, and it really doesn't matter here anyway.
DISABLE_STL_WRAPPING = True

include('/toolkit/crashreporter/crashreporter.mozbuild')
