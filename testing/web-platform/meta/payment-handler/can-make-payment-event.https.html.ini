[can-make-payment-event.https.html]
  [If a payment handler is not installed, then the payment method is not supported.]
    expected: FAIL

  [If CanMakePaymentEvent.respondWith(false) is called, then the payment method is not supported.]
    expected: FAIL

  [If CanMakePaymentEvent.respondWith(Promise.resolve(false)) is called, then the payment method is not supported.]
    expected: FAIL

  [If CanMakePaymentEvent.respondWith(true) is called, then the payment method is supported.]
    expected: FAIL

  [If CanMakePaymentEvent.respondWith(Promise.resolve(true)) is called, then the payment method is supported.]
    expected: FAIL

  [If CanMakePaymentEvent.respondWith(Promise.reject(error)) is called, then the payment method is not supported.]
    expected: FAIL

  [If an app supports "basic-card" in general and that's what merchant requests as well, then capability filtering should make the app available for use. CanMakePaymentEvent should not be fired for "basic-card".]
    expected:
      if not e10s: FAIL

  [If an app has less specific "basic-card" capabilites than merchant's request, capability filtering should not make the app available for use. CanMakePaymentEvent should not be fired for "basic-card". ]
    expected: FAIL

  [If an app has the exact "basic-card" capabilities that a merchant requested, capability filtering should make the app available for use. CanMakePaymentEvent should not be fired for "basic-card".]
    expected: FAIL

  [If an app has more specific "basic-card" capabilities than merchant's request, capability filtering should make the app available for use. CanMakePaymentEvent should not be fired for "basic-card".]
    expected: FAIL

