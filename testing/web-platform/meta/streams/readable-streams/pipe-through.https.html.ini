[pipe-through.https.html]
  type: testharness
  disabled: @True
  [ReadableStream.prototype.pipeThrough should work generically on its this and its arguments]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when its first argument is not convertible to an object]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when "this" has no pipeTo method]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should rethrow errors from accessing pipeTo, readable, or writable]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should work with missing readable, writable, or options]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should work generically on its this and its arguments]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when its first argument is not convertible to an object]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when "this" has no pipeTo method]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should rethrow errors from accessing pipeTo, readable, or writable]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should work with missing readable, writable, or options]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should work generically on its this and its arguments]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when its first argument is not convertible to an object]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should throw when "this" has no pipeTo method]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should rethrow errors from accessing pipeTo, readable, or writable]
    expected: FAIL

  [ReadableStream.prototype.pipeThrough should work with missing readable, writable, or options]
    expected: FAIL

