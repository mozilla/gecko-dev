#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Run selftests
PYTHON_UNIT_TESTS := \
  selftest.py
  $(NULL)

include $(topsrcdir)/config/rules.mk

# Harness files from the srcdir
TEST_HARNESS_FILES := \
  runxpcshelltests.py \
  remotexpcshelltests.py \
  runtestsb2g.py \
  head.js \
  node-spdy \
  moz-spdy \
  node-http2 \
  moz-http2 \
  $(NULL)

# Extra files needed from $(topsrcdir)/build
EXTRA_BUILD_FILES := \
  automationutils.py \
  manifestparser.py \
  $(NULL)

MOZDEVICE_FILES := \
  devicemanager.py \
  devicemanagerADB.py \
  devicemanagerSUT.py \
  Zeroconf.py \
  $(NULL)

# Components / typelibs that don't get packaged with
# the build, but that we need for the test harness.
TEST_HARNESS_COMPONENTS := \
  httpd.js \
  httpd.manifest \
  $(NULL)

MOZINFO_FILES := \
  mozinfo.py

# Rules for staging the necessary harness bits for a test package
PKG_STAGE = $(DIST)/test-stage

libs::
	$(INSTALL) $(srcdir)/xpcshell_b2g.ini $(DEPTH)/_tests/xpcshell
	$(INSTALL) $(srcdir)/xpcshell_android.ini $(DEPTH)/_tests/xpcshell
	cp $(DEPTH)/_tests/xpcshell/xpcshell.ini $(DEPTH)/_tests/xpcshell/all-test-dirs.list

stage-package:
	$(NSINSTALL) -D $(PKG_STAGE)/xpcshell/tests
	@(cd $(topsrcdir)/testing/mozbase/mozinfo/mozinfo && tar $(TAR_CREATE_FLAGS) - $(MOZINFO_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@(cd $(srcdir) && tar $(TAR_CREATE_FLAGS) - $(TEST_HARNESS_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@(cd $(topsrcdir)/build && tar $(TAR_CREATE_FLAGS) - $(EXTRA_BUILD_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@cp $(DEPTH)/mozinfo.json $(PKG_STAGE)/xpcshell
	@cp $(DEPTH)/build/automation.py $(PKG_STAGE)/xpcshell
	@(cd $(topsrcdir)/testing/mozbase/mozdevice/mozdevice && tar $(TAR_CREATE_FLAGS) - $(MOZDEVICE_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	(cd $(DEPTH)/_tests/xpcshell/ && tar $(TAR_CREATE_FLAGS) - *) | (cd $(PKG_STAGE)/xpcshell/tests && tar -xf -)
	@(cd $(DIST)/bin/components && tar $(TAR_CREATE_FLAGS) - $(TEST_HARNESS_COMPONENTS)) | (cd $(PKG_STAGE)/bin/components && tar -xf -)
