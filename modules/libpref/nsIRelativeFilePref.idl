/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"
interface nsIFile;

/**
 * The nsIRelativeFilePref interface is a wrapper for an nsIFile and
 * and a directory service key. When used as a pref value, it stores a
 * relative path to the file from the location pointed to by the directory
 * service key. The path has the same syntax across all platforms.
 *
 * @see nsIPrefBranch::getComplexValue
 * @see nsIPrefBranch::setComplexValue
 * 
 */

[scriptable, uuid(2f977d4e-5485-11d4-87e2-0010a4e75ef2)]
interface nsIRelativeFilePref : nsISupports
{
  /**
   * file
   *
   * The file whose location is stored or retrieved.
   */
  attribute nsIFile file;

  /**
   * relativeToKey
   *
   * A directory service key for the directory
   * from which the file path is relative.
   */
  attribute ACString relativeToKey;

};

%{C++

#define NS_RELATIVEFILEPREF_CID                        \
  { /* {2f977d4f-5485-11d4-87e2-0010a4e75ef2} */       \
    0x2f977d4f,                                        \
    0x5485,                                            \
    0x11d4,                                            \
    { 0x87, 0xe2, 0x00, 0x10, 0xa4, 0xe7, 0x5e, 0xf2 } \
  }

#define NS_RELATIVEFILEPREF_CONTRACTID "@mozilla.org/pref-relativefile;1"

#include "nsComponentManagerUtils.h"

inline nsresult
NS_NewRelativeFilePref(nsIFile* aFile, const nsACString& relativeToKey, nsIRelativeFilePref** result)
{
    nsresult rv;
    nsCOMPtr<nsIRelativeFilePref> local(do_CreateInstance(NS_RELATIVEFILEPREF_CONTRACTID, &rv));
    if (NS_FAILED(rv)) return rv;
    
    (void)local->SetFile(aFile);
    (void)local->SetRelativeToKey(relativeToKey);

    *result = local;
    NS_ADDREF(*result);
    return NS_OK;
}

%}
