<?xml version="1.0"?>
<!--
    Snapshot from http://planet.mozilla.org/atom.xml
-->
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
    <title>Planet Mozilla</title>
    <updated>2016-01-26T19:01:54Z</updated>
    <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
    <author>
        <name>Planet Mozilla Module Team</name>
        <email>planet@mozilla.org</email>
    </author>
    <id>http://planet.mozilla.org/atom.xml</id>
    <link href="http://planet.mozilla.org/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="http://planet.mozilla.org/" rel="alternate"/>

    <entry xml:lang="en-US">
        <id>https://quality.mozilla.org/?p=49454</id>
        <link href="https://quality.mozilla.org/2016/01/firefox-45-0-beta-3-testday-february-5th/" rel="alternate" type="text/html"/>
        <title>Firefox 45.0 Beta 3 Testday, February 5th</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Hello Mozillians, We are happy to announce that Friday, February 5th, we are organizing Firefox 45.0 Beta 3 Testday. We will be focusing our testing on the following features: Search Refactoring, Synced Tabs Menu, Text to Speech and Grouped Tabs Migration. Check out the … <a class="go" href="https://quality.mozilla.org/2016/01/firefox-45-0-beta-3-testday-february-5th/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello Mozillians,</p>
            <p>We are happy to announce that <strong>Friday, February 5th</strong>, we are organizing <strong>Firefox 45.0 Beta 3 Testday</strong>. We will be focusing our testing on the following features: <em>Search Refactoring, Synced Tabs Menu, Text to Speech and Grouped Tabs Migration</em>. Check out the detailed instructions via <a href="https://public.etherpad-mozilla.org/p/testday-20160205" target="_blank">this etherpad</a>.</p>
            <p>No previous testing experience is required, so feel free to join us on <strong><a href="http://widget01.mibbit.com/?server=irc.mozilla.org&amp;channel=%23qa">#qa IRC channel</a></strong> where our moderators will offer you guidance and answer your questions.</p>
            <p>Join us and help us make Firefox better! See you on <strong>Friday</strong>!</p></div>
        </content>
        <updated>2016-01-26T14:40:55Z</updated>
        <category term="Community"/>
        <category term="Firefox Team"/>
        <category term="QMO News"/>
        <author>
            <name>vasilica.mihasca</name>
        </author>
        <source>
            <id>https://quality.mozilla.org</id>
            <link href="https://quality.mozilla.org/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://quality.mozilla.org" rel="alternate" type="text/html"/>
            <subtitle>Driving quality across Mozilla with data, metrics and a strong community focus</subtitle>
            <title>Mozilla Quality Assurance</title>
            <updated>2016-01-26T14:46:40Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://dlawrence.wordpress.com/?p=29</id>
        <link href="https://dlawrence.wordpress.com/2016/01/26/happy-bmo-push-day-4/" rel="alternate" type="text/html"/>
        <title>Happy BMO Push Day!</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">the following changes have been pushed to bugzilla.mozilla.org: [1240575] Update form.reps.budget [1226028] API for batching MozReview requests discuss these changes on mozilla.tools.bmo.<img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=dlawrence.wordpress.com&amp;blog=58816&amp;post=29&amp;subd=dlawrence&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>the following changes have been pushed to bugzilla.mozilla.org:</p>
            <ul>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1240575" target="_blank">1240575</a>] Update form.reps.budget</li>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1226028" target="_blank">1226028</a>] API for batching MozReview requests</li>
            </ul>
            <p>discuss these changes on <a href="https://lists.mozilla.org/listinfo/tools-bmo" target="_blank">mozilla.tools.bmo</a>.</p><br/>  <a href="http://feeds.wordpress.com/1.0/gocomments/dlawrence.wordpress.com/29/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/dlawrence.wordpress.com/29/"/></a> <img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=dlawrence.wordpress.com&amp;blog=58816&amp;post=29&amp;subd=dlawrence&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-26T14:27:50Z</updated>
        <category term="Uncategorized"/>
        <author>
            <name>dlawrence</name>
        </author>
        <source>
            <id>https://dlawrence.wordpress.com</id>
            <logo>https://s2.wp.com/i/buttonw-com.png</logo>
            <link href="https://dlawrence.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://dlawrence.wordpress.com" rel="alternate" type="text/html"/>
            <link href="https://dlawrence.wordpress.com/osd.xml" rel="search" title="Dave's Ramblings" type="application/opensearchdescription+xml"/>
            <link href="https://dlawrence.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
            <subtitle>Thoughts somehow related to web, linux, mobile and other things I am interested in</subtitle>
            <title>Dave's Ramblings</title>
            <updated>2016-01-26T14:31:40Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/tanvi/?p=198</id>
        <link href="https://blog.mozilla.org/tanvi/2016/01/26/updated-firefox-security-indicators/" rel="alternate" type="text/html"/>
        <title>Updated Firefox Security Indicators</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This article has been coauthored by Aislinn Grigas, Senior Interaction Designer, Firefox Desktop Cross posting with Mozilla’s Security Blog November 3, 2015 Over the past few months, Mozilla has been improving the user experience of our privacy and security features in Firefox. One specific initiative has focused on the feedback shown in our address bar… <a class="more-link" href="https://blog.mozilla.org/tanvi/2016/01/26/updated-firefox-security-indicators/" title="Read the rest of &#x201C;Updated Firefox Security Indicators&#x201D;">Read more</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>This article has been coauthored by Aislinn Grigas, Senior Interaction Designer, Firefox Desktop</em><br/>
            <em>Cross posting with <a href="https://blog.mozilla.org/security/2015/11/03/updated-firefox-security-indicators-2/">Mozilla’s Security Blog</a></em></p>
            <p>November 3, 2015</p>
            <p>Over the past few months, Mozilla has been improving the user experience of our privacy and security features in Firefox. One specific initiative has focused on the feedback shown in our address bar around a site’s security. The major changes are highlighted below along with the rationale behind each change.</p>
            <p><a href="https://blog.mozilla.org/security/files/2015/10/combo-graph21.png"><img alt="" class="alignnone wp-image-2045 size-full" height="914" src="https://blog.mozilla.org/security/files/2015/10/combo-graph21.png" width="1518"/></a></p>
            <h3>Change to DV Certificate treatment in the address bar</h3>
            <p>Color and iconography is commonly used today to communicate to users when a site is secure. The most widely used patterns are coloring a lock icon and parts of the address bar green. This treatment has a straightforward rationale given green = good in most cultures. Firefox has historically used two different color treatments for the lock icon – a gray lock for <a href="https://en.wikipedia.org/wiki/Domain-validated_certificate">Domain-validated (DV) certificates</a> and a green lock for <a href="https://en.wikipedia.org/wiki/Extended_Validation_Certificate">Extended Validation (EV) certificates</a>. The average user is likely not going to understand this color distinction between EV and DV certificates. The overarching message we want users to take from both certificate states is that their connection to the site is secure. We’re therefore updating the color of the lock when a DV certificate is used to match that of an EV certificate.</p>
            <p>Although the same green icon will be used, the UI for a site using EV certificates will continue to differ from a site using a DV certificate. Specifically, EV certificates are used when <a href="https://en.wikipedia.org/wiki/Certificate_authority">Certificate Authorities (CA)</a> verify the owner of a domain. Hence, we will continue to include the organization name verified by the CA in the address bar.</p>
            <h3>Changes to Mixed Content Blocker UI on HTTPS sites</h3>
            <p>A second change we’re introducing addresses what happens when a page served over a secure connection contains <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent">Mixed Content</a>. Firefox’s Mixed Content Blocker proactively blocks <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent#Mixed_active_content">Mixed Active Content</a> by default. Users historically saw a <a href="https://people.mozilla.org/~tvyas/FigureA.jpg">shield icon</a> when Mixed Active Content was blocked and were given the option to disable the protection.</p>
            <p>Since the Mixed Content state is closely tied to site security, the information should be communicated in one place instead of having two separate icons. Moreover, we have seen that the <a href="https://telemetry.mozilla.org/new-pipeline/dist.html#!cumulative=0&amp;end_date=2015-09-17&amp;keys=__none__!__none__!__none__&amp;max_channel_version=beta%252F41&amp;measure=MIXED_CONTENT_UNBLOCK_COUNTER&amp;min_channel_version=null&amp;product=Firefox&amp;sanitize=1&amp;sort_keys=submissions&amp;start_date=2015-08-11&amp;table=0&amp;trim=1&amp;use_submission_date=0">number of times users override mixed content protection</a> is slim, and hence the need for dedicated mixed content iconography is diminishing. Firefox is also using the shield icon for another feature in <a href="https://support.mozilla.org/en-US/kb/private-browsing-use-firefox-without-history">Private Browsing Mode</a> and we want to avoid making the iconography ambiguous.</p>
            <p>The updated design that ships with Firefox 42 combines the lock icon with a warning sign which represents Mixed Content. When Firefox blocks Mixed Active Content, we retain the green lock since the HTTP content is blocked and hence the site remains secure.</p>
            <p>For users who want to learn more about a site’s security state, we have added an informational panel to further explain differences in page security. This panel appears anytime a user clicks on the lock icon in the address bar.</p>
            <p>Previously users could <a href="https://people.mozilla.org/~tvyas/FigureB.jpg">click on the shield icon</a> in the rare case they needed to override mixed content protection. With this new UI, users can still do this by clicking the arrow icon to expose more information about the site security, along with a disable protection button.</p>
            <div class="wp-caption alignnone" id="attachment_2034" style="width: 557px;"><a href="https://blog.mozilla.org/security/files/2015/10/mixed-active-content-click-and-subpanel.png"><img alt="mixed active content click and subpanel" class="wp-image-2034 " height="176" src="https://blog.mozilla.org/security/files/2015/10/mixed-active-content-click-and-subpanel.png" width="547"/></a><p class="wp-caption-text">Users can click the lock with warning icon and proceed to disable Mixed Content Protection.</p></div>
            <h3/>
            <h3>Loading Mixed Passive Content on HTTPS sites</h3>
            <p>There is a second category of Mixed Content called <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent#Mixed_passivedisplay_content">Mixed Passive Content</a>. Firefox does not block Mixed Passive Content by default. However, when it is loaded on an HTTPS page, we let the user know with iconography and text. In previous versions of Firefox, we used a gray warning sign to reflect this case.</p>
            <p>We have updated this iconography in Firefox 42 to a gray lock with a yellow warning sign. We degrade the lock from green to gray to emphasize that the site is no longer completely secure. In addition, we use a vibrant color for the warning icon to amplify that there is something wrong with the security state of the page.</p>
            <p><a href="https://blog.mozilla.org/security/files/2015/10/mixed-passive-click1.png"><img alt="" class="alignnone wp-image-2042 " height="100" src="https://blog.mozilla.org/security/files/2015/10/mixed-passive-click1-600x221.png" width="268"/></a></p>
            <p>We also use this iconography when the certificate or TLS connection used by the website relies on deprecated cryptographic algorithms.</p>
            <p>The above changes will be rolled out in Firefox 42. Overall, the design improvements make it simpler for our users to understand whether or not their interactions with a site are secure.</p>
            <h3>Firefox Mobile</h3>
            <p>We have made similar changes to the site security indicators in Firefox for Android, which you can learn more about <a href="https://support.mozilla.org/en-US/kb/mixed-content-blocker-firefox-android#w_how-do-i-know-if-a-page-has-mixed-content">here</a>.</p></div>
        </content>
        <updated>2016-01-26T05:58:29Z</updated>
        <category term="Browser Security"/>
        <author>
            <name>Tanvi Vyas</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/tanvi</id>
            <link href="https://blog.mozilla.org/tanvi/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/tanvi" rel="alternate" type="text/html"/>
            <subtitle>Security Engineering  - @TanviHacks</subtitle>
            <title>Tanvi's Blog</title>
            <updated>2016-01-26T06:16:19Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://blog.mozilla.org/?p=9166</id>
        <link href="https://blog.mozilla.org/blog/2016/01/25/firefox-can-now-get-push-notifications-from-your-favorite-sites/" rel="alternate" type="text/html"/>
        <title>Firefox Can Now Get Push Notifications From Your Favorite Sites</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Firefox for Windows, Mac and Linux now lets you choose to receive push notifications from websites if you give them permission. This is similar to Web notifications, except now you can receive notifications for websites even when they’re not loaded … <a class="go" href="https://blog.mozilla.org/blog/2016/01/25/firefox-can-now-get-push-notifications-from-your-favorite-sites/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Firefox for Windows, Mac and Linux now lets you choose to receive push notifications from websites if you give them permission. This is similar to Web notifications, except now you can receive notifications for websites even when they’re not loaded in a tab. This is super useful for websites like email, weather, social networks and shopping, which you might check frequently for updates.</p>
            <p>You can manage your notifications in the Control Center by clicking the <img alt="'I' Icon" class="alignnone wp-image-9170" height="10" src="https://blog.mozilla.org/wp-content/uploads/2016/01/IIcon.png" width="10"/> icon on the left side of the address bar.</p>
            <p><b>Push Notifications for Web Developers</b><br/>
                To make this functionality possible, Mozilla helped establish the Web Push W3C standard that’s gaining momentum across the Web. We also continue to explore the new design pattern known as<a href="https://blog.mozilla.org/futurereleases/2015/11/17/extending-the-webs-capabilities-in-firefox-and-beyond/"> Progressive Web Apps</a>. If you’re a developer who wants to implement push notifications on your site, you can learn more in this<a href="https://hacks.mozilla.org/2016/01/web-push-arrives-in-firefox-44/"> Hacks blog post</a>.</p>
            <p><b>More information:</b></p>
            <ul>
                <li>Download<a href="https://www.mozilla.org/firefox/new/"> Firefox for Windows, Mac, Linux</a></li>
                <li>Release Notes for<a href="https://www.mozilla.org/firefox/44.0/releasenotes/"> Firefox for Windows, Mac, Linux</a></li>
                <li>Download<a href="https://play.google.com/store/apps/details?id=org.mozilla.firefox&amp;referrer=utm_source%3Dmozilla%26utm_medium"> Firefox for Android</a></li>
                <li>Release Notes for<a href="https://www.mozilla.org/firefox/android/44.0/releasenotes/"> Firefox for Android</a></li>
            </ul></div>
        </content>
        <updated>2016-01-26T01:56:50Z</updated>
        <category term="Firefox"/>
        <author>
            <name>Mozilla</name>
        </author>
        <source>
            <id>https://blog.mozilla.org</id>
            <link href="https://blog.mozilla.org/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org" rel="alternate" type="text/html"/>
            <subtitle>News, notes and ramblings from the Mozilla project</subtitle>
            <title>The Mozilla Blog</title>
            <updated>2016-01-26T16:01:47Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://benoitgirard.wordpress.com/?p=651</id>
        <link href="https://benoitgirard.wordpress.com/2016/01/25/using-recordreplay-to-investigate-intermittent-oranges/" rel="alternate" type="text/html"/>
        <title>Using RecordReplay to investigate intermittent oranges</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This is a quick write up to summarize my, and Jeff’s, experience, using RR to debug a fairly rare intermittent reftest failure. There’s still a lot of be learned about how to use RR effectively so I’m hoping sharing this will help others. Finding the root of the bad pixel First given a offending pixel […]<img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=benoitgirard.wordpress.com&amp;blog=12112851&amp;post=651&amp;subd=benoitgirard&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This is a quick write up to summarize my, and Jeff’s, experience, using RR to debug a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1226748">fairly rare intermittent reftest failure</a>. There’s still a lot of be learned about how to use RR effectively so I’m hoping sharing this will help others.</p>
            <h3>Finding the root of the bad pixel</h3>
            <p>First given a offending pixel I was able to set a breakpoint on it using <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Hacking_Tips#rr_with_reftest">these instructions</a>. Next using <a href="https://github.com/jrmuizel/rr-dataflow">rr-dataflow</a> I was able to step from the offending bad pixel to the display item responsible for this pixel. Let me emphasize this for a second since it’s incredibly impressive. rr + rr-dataflow allows you to go from a buffer, through an intermediate surface, to the compositor on another thread, through another intermediate surface, back to the main thread and eventually back to the relevant display item. All of this was automated except for when the two pixels are blended together which is logically ambiguous. The speed at which rr was able to reverse continue through this execution was very impressive!</p>
            <p>Here’s the trace of this part: <a href="https://gist.github.com/bgirard/e707e9b97556b500d9ae">rr-trace-reftest-pixel-origin</a></p>
            <h3>Understanding the decoding step</h3>
            <p>From here I started comparing a replay of a failing test and a non failing step and it was clear that the DisplayList was different. In one we have a nsDisplayBackgroundColor in the other we don’t.  From here I was able to step through the decoder and compare the sequence. This was very useful in ruling out possible theories. It was easy to step forward and backwards in the good and bad replay debugging sessions to test out various theories about race conditions and understanding at which part of the decode process the image was rejected. It turned out that we sent two decodes, one for the metadata that is used to sized the frame tree and the other one for the image data itself.</p>
            <h3>Comparing the frame tree</h3>
            <p>In hindsight, it would have been more effective to start debugging this test by looking at the frame tree (and I imagine for other tests looking at the display list and layer tree) first would have been a quicker start. It works even better if you have a good and a bad trace to compare the difference in the frame tree. From here, I found that the difference in the layer tree came from a change hint that wasn’t guaranteed to come in before the draw.</p>
            <p>The problem is now well understood: When we do a sync decode on reftest draw, if there’s an image error we wont flush the style hints since we’re already too deep in the painting pipeline.</p>
            <h3>Take away</h3>
            <ul>
                <li>Finding the root cause of a bad pixel is very easy, and fast, to do using rr-dataflow.</li>
                <li>However it might be better to look for obvious frame tree/display list/layer tree difference(s) first.</li>
                <li>Debugging a replay is a lot simpler then debugging against non-determinist re-runs and a lot less frustrating too.</li>
                <li>rr is really useful for race conditions, especially rare ones.</li>
            </ul><br/>  <a href="http://feeds.wordpress.com/1.0/gocomments/benoitgirard.wordpress.com/651/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/benoitgirard.wordpress.com/651/"/></a> <img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=benoitgirard.wordpress.com&amp;blog=12112851&amp;post=651&amp;subd=benoitgirard&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-25T22:16:01Z</updated>
        <category term="Graphics"/>
        <category term="Mozilla"/>
        <author>
            <name>benoitgirard</name>
        </author>
        <source>
            <id>https://benoitgirard.wordpress.com</id>
            <logo>https://s2.wp.com/i/buttonw-com.png</logo>
            <link href="https://benoitgirard.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://benoitgirard.wordpress.com" rel="alternate" type="text/html"/>
            <link href="https://benoitgirard.wordpress.com/osd.xml" rel="search" title="Benoit Girard's Blog" type="application/opensearchdescription+xml"/>
            <link href="https://benoitgirard.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
            <subtitle>My Programming Experiences</subtitle>
            <title>Benoit Girard's Blog</title>
            <updated>2016-01-25T22:30:59Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://blog.servo.org/2016/01/25/twis-48/</id>
        <link href="http://blog.servo.org/2016/01/25/twis-48/" rel="alternate" type="text/html"/>
        <title>These Weeks In Servo 48</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In the <a href="https://github.com/pulls?page=1&amp;q=is%3Apr+is%3Amerged+closed%3A2016-01-11..2016-01-25+user%3Aservo">last two weeks</a>, we landed 130 PRs in the Servo organization’s repositories.</p>

            <p>After months of work by vlad and many others, Windows support <a href="https://github.com/servo/servo/pull/9385">landed</a>! Thanks to everyone who contributed fixes, tests, reviews, and even encouragement (or impatience!) to help us make this happen.</p>

            <h3 id="notable-additions">Notable Additions</h3>

            <ul>
                <li>nikki <a href="https://github.com/servo/servo/pull/9391">added</a> tests and support for checking the Fetch redirect count</li>
                <li>glennw <a href="https://github.com/servo/servo/pull/9359">implemented</a> horizontal scrolling with arrow keys</li>
                <li>simon <a href="https://github.com/servo/servo/pull/9333">created</a> a script that parses all of the CSS properties parsed by Servo</li>
                <li>ms2ger <a href="https://github.com/servo/servo/pull/9293">removed</a> the legacy reftest framework</li>
                <li>fernando <a href="https://github.com/servo/crowbot/pull/33">made</a> crowbot able to rejoin IRC after it accidentally floods the channel</li>
                <li>jack <a href="https://github.com/servo/saltfs/pull/193">added</a> testing the <code>geckolib</code> target to our CI</li>
                <li>antrik <a href="https://github.com/servo/ipc-channel/pull/25">fixed</a> transfer corruption in ipc-channel on 32-bit</li>
                <li>valentin <a href="https://github.com/servo/rust-url/pull/119">added</a> and simon <a href="https://github.com/servo/rust-url/pull/152">extended</a> IDNA support in rust-url, which is required for both web and Gecko compatibility</li>
            </ul>

            <h3 id="new-contributors">New Contributors</h3>

            <ul>
                <li><a href="https://github.com/Chandler">Chandler Abraham</a></li>
                <li><a href="https://github.com/DarinM223">Darin Minamoto</a></li>
                <li><a href="https://github.com/coder543">Josh Leverette</a></li>
                <li><a href="https://github.com/shssoichiro">Joshua Holmer</a></li>
                <li><a href="https://github.com/therealkbhat">Kishor Bhat</a></li>
                <li><a href="https://github.com/MonsieurLanza">Lanza</a></li>
                <li><a href="https://github.com/mattkuo">Matthew Kuo</a></li>
                <li><a href="https://github.com/waterlink">Oleksii Fedorov</a></li>
                <li><a href="https://github.com/stspyder">St.Spyder</a></li>
                <li><a href="https://github.com/vvuk">Vladimir Vukicevic</a></li>
                <li><a href="https://github.com/apopiak">apopiak</a></li>
                <li><a href="https://github.com/askalski">askalski</a></li>
            </ul>

            <h3 id="screenshot">Screenshot</h3>

            <p>Screencast of this post being upvoted on reddit… from Windows!</p>

            <p><img alt="(screencast)" src="http://blog.servo.org/images/upvote-windows.gif" title="Screencast of upvoting on Reddit on Windows."/></p>

            <h3 id="meetings">Meetings</h3>

            <p>We had a <a href="https://github.com/servo/servo/wiki/Meeting-2016-01-11">meeting</a> on some CI-related woes, documenting tags and mentoring, and dependencies for the style subsystem.</p></div>
        </summary>
        <updated>2016-01-25T20:30:00Z</updated>
        <source>
            <id>http://blog.servo.org/</id>
            <author>
                <name>The Servo Blog</name>
            </author>
            <link href="http://blog.servo.org/" rel="alternate" type="text/html"/>
            <link href="http://blog.servo.org/feed.xml" rel="self" type="application/rss+xml"/>
            <title>Servo Blog</title>
            <updated>2016-01-26T02:01:45Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/mozilla-weekly-project-meeting-20160125/</id>
        <link href="https://air.mozilla.org/mozilla-weekly-project-meeting-20160125/" rel="alternate" type="text/html"/>
        <title>Mozilla Weekly Project Meeting, 25 Jan 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Mozilla Weekly Project Meeting" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/e9/4f/e94fbd7f8df916c75a60e63a85b9168c.png" width="160"/>
            The Monday Project Meeting
        </p></div>
        </summary>
        <updated>2016-01-25T19:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/community/?p=2292</id>
        <link href="http://blog.mozilla.org/community/2016/01/25/firefox-44-new-contributors/" rel="alternate" type="text/html"/>
        <title>Firefox 44 new contributors</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">With the release of Firefox 44, we are pleased to welcome the 28 developers who contributed their first code change to Firefox in this release, 23 of whom were brand new volunteers! Please join us in thanking each of these … <a class="go" href="http://blog.mozilla.org/community/2016/01/25/firefox-44-new-contributors/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>With the release of Firefox 44, we are pleased to welcome the <strong>28 developers</strong> who contributed their first code change to Firefox in this release, <strong>23</strong> of whom were brand new volunteers! Please join us in thanking each of these diligent and enthusiastic individuals, and take a look at their contributions:</p>
            <ul>
                <li>mkm: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208124">1208124</a></li>
                <li>Aditya Motwani: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1209087">1209087</a></li>
                <li>Aniket Vyas: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1197309">1197309</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1197315">1197315</a></li>
                <li>Chirath R: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1216941">1216941</a></li>
                <li>Christiane Ruetten: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1209091">1209091</a></li>
                <li>Fernando Campo: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1199815">1199815</a></li>
                <li>Grisha Pushkov: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=994555">994555</a></li>
                <li>Guang-De Lin: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1150305">1150305</a></li>
                <li>Hassen ben tanfous: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1074804">1074804</a></li>
                <li>Helen V. Holmes: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1205046">1205046</a></li>
                <li>Henrik Tjäder: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1161698">1161698</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1209912">1209912</a></li>
                <li>Johann Hofmann: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1192432">1192432</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1198405">1198405</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1204072">1204072</a></li>
                <li>Kapeel Sable: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1212171">1212171</a></li>
                <li>Manav Batra: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1202618">1202618</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1212280">1212280</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1214626">1214626</a></li>
                <li>Manuel Casas Barrado: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1172662">1172662</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1193674">1193674</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1200693">1200693</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1203298">1203298</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1205684">1205684</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1212331">1212331</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1212338">1212338</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1214582">1214582</a></li>
                <li>Matt Howell: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208626">1208626</a></li>
                <li>Matthew Turnbull: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1213620">1213620</a></li>
                <li>Olivier Yiptong: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1210936">1210936</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1210940">1210940</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1213078">1213078</a></li>
                <li>Piotr Tworek: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1209446">1209446</a></li>
                <li>Rocik: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1070719">1070719</a></li>
                <li>Roland Sako: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1207733">1207733</a></li>
                <li>Ronald Claveau: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1207266">1207266</a></li>
                <li>Sanchit Nevgi: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1205181">1205181</a></li>
                <li>Shaif Chowdhury: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1185606">1185606</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208121">1208121</a></li>
                <li>Shubham Jain: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208470">1208470</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208705">1208705</a></li>
                <li>Stanislas Daniel Claude Dolcini: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1147197">1147197</a></li>
                <li>Stephanie Ouillon: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1178533">1178533</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1201626">1201626</a></li>
                <li>Tim Huang: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1181489">1181489</a></li>
                <li>simplyblue24: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1218204">1218204</a></li>
            </ul></div>
        </content>
        <updated>2016-01-25T16:21:33Z</updated>
        <category term="Spotlight"/>
        <author>
            <name>Josh Matthews</name>
        </author>
        <source>
            <id>http://blog.mozilla.org/community</id>
            <link href="http://blog.mozilla.org/community/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://blog.mozilla.org/community" rel="alternate" type="text/html"/>
            <subtitle>News and notes from and for the Mozilla community.</subtitle>
            <title>about:community</title>
            <updated>2016-01-25T16:31:42Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>tag:literaci.es,2014:Post/digital-skills-curriculum</id>
        <link href="http://literaci.es/digital-skills-curriculum" rel="alternate" type="text/html"/>
        <title xml:lang="en-US">3 things to consider when designing a digital skills framework</title>
        <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><img alt="Learning to credential" src="http://bryanmmathers.com/wp-content/uploads/2016/01/learning-to-credential.png"/></p>

            <p>The image above was created by <a href="http://bryanmmathers.com/learning-to-credential" rel="nofollow">Bryan Mathers</a> for our <a href="https://goo.gl/QqwUKP" rel="nofollow">presentation</a> at <a href="http://bettshow.com" rel="nofollow">BETT</a> last week. It shows the way that, in broad brushstrokes, learning design <em>should</em> happen. Before microcredentials such as <a href="http://openbadges.org" rel="nofollow">Open Badges</a> this was a difficult thing to do as both the credential and the assessment are usually given to educators. The flow tends to go <em>backwards</em> from credentials instead of forwards from what we want people to learn.</p>

            <p>But what if you really <em>were</em> starting from scratch? How could you design a digital skills framework that contains knowledge, skills, and behaviours worth learning? Having written my <a href="http://neverendingthesis.com" rel="nofollow">thesis</a> on digital literacies and led Mozilla’s <a href="https://teach.mozilla.org/activities/web-literacy/" rel="nofollow">Web Literacy Map</a> for a couple of years, I’ve got some suggestions. </p>
            <h3>
                <a class="head_anchor" href="http://literaci.es/feed#1-define-your-audience" name="1-define-your-audience" rel="nofollow"> </a>1. Define your audience</h3>
            <p>One of the most important things to define is who your audience is for your digital skills framework. Is it for learners to read? Who are they? How old are they? Are you excluding anyone on purpose? Why / why not?</p>

            <p>You might want to do some research and work around <a href="https://en.wikipedia.org/wiki/Persona_(user_experience)" rel="nofollow">user personas</a> as part of a user-centred design approach. This ensures you’re designing for real people instead of figments of your imagination (or, worse still, in line with your prejudices).</p>

            <p>It’s also good practice to make the language used in the skills framework as precise as possible. Jargon is technical language used for the sake of it. There may be times when it’s impossible not to use a word (e.g. ’<a href="https://en.wikipedia.org/wiki/Meme" rel="nofollow">meme</a>’). If you do this then link to a definition or include a glossary. It’s also useful to check the ‘reading level’ of your framework and, if you really want a challenge, try using <a href="http://splasho.com/upgoer5/" rel="nofollow">Up-Goer Five</a> language.</p>
            <h3>
                <a class="head_anchor" href="http://literaci.es/feed#2-focus-on-verbs" name="2-focus-on-verbs" rel="nofollow"> </a>2. Focus on verbs</h3>
            <p>It’s extremely easy, when creating a framework for learning, to fall into the 'knowledge trap’. Our aim when creating the raw materials from which someone can build a curriculum is to focus on <em>action</em>. Knowledge should make a difference in practice.</p>

            <p>One straightforward way to ensure that you’re focusing on action rather than head knowledge is to use <strong>verbs</strong> when constructing your digital skills framework. If you’re familiar with <a href="https://en.wikipedia.org/wiki/Bloom%27s_taxonomy" rel="nofollow">Bloom’s Taxonomy</a>, then you may find <a href="http://byrdseed.com/differentiator/" rel="nofollow">The Differentiator</a> useful. This pairs verbs with the various levels of Bloom’s.</p>
            <h3>
                <a class="head_anchor" href="http://literaci.es/feed#3-add-version-numbers" name="3-add-version-numbers" rel="nofollow"> </a>3. Add version numbers</h3>
            <p>A framework needs to be a living, breathing thing. It should be subject to revision and updated often. For this reason, you should add version numbers to your documentation. Ideally, the latest version should be at a canonical URL and you should archive previous versions to static URLs. </p>

            <p>I would also advise releasing the first version of your framework not as 'version 1.0’ but as 'v0.1’. This shows that you’re willing for others to provide input, that there will be further versions, and that you know you haven’t got it right first time (and forevermore). </p>

            <hr/>

            <p><strong>Questions? Comments?</strong> Ask me on Twitter (<a href="http://twitter.com/dajbelshaw" rel="nofollow">@dajbelshaw</a>). I also consult around this kind of thing, so hit me up on <a href="http://literaci.es/hello@dynamicskillset.com" rel="nofollow">hello@dynamicskillset.com</a></p></div>
        </content>
        <updated>2016-01-25T14:46:34Z</updated>
        <published>2016-01-25T14:46:34Z</published>
        <source>
            <id>tag:literaci.es,2014:/feed</id>
            <author>
                <name>Doug Belshaw</name>
                <email>mail@dougbelshaw.com</email>
                <uri>http://literaci.es</uri>
            </author>
            <link href="http://literaci.es" rel="alternate" type="text/html"/>
            <link href="http://literaci.es/feed" rel="self" type="application/atom+xml"/>
            <title xml:lang="en-US">Literacies</title>
            <updated>2016-01-25T14:46:34Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://fundraising.mozilla.org/?p=800</id>
        <link href="https://fundraising.mozilla.org/why-did-you-decide-to-donate-today/" rel="alternate" type="text/html"/>
        <title>Why did you decide to donate today?</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This year, we asked some of our donors why they decided to donate to our end of year fundraising campaign. The Survey The Audience The survey was shown to a random sample of donors whose browser language was set to … <a class="go" href="https://fundraising.mozilla.org/why-did-you-decide-to-donate-today/">Continue reading</a></div>
        </summary>
        <updated>2016-01-25T13:31:34Z</updated>
        <category term="metrics"/>
        <category term="mozilla"/>
        <author>
            <name>Adam Lofting</name>
        </author>
        <source>
            <id>https://fundraising.mozilla.org</id>
            <link href="https://fundraising.mozilla.org/category/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://fundraising.mozilla.org" rel="alternate" type="text/html"/>
            <subtitle>We work in the open, we fundraise in the open. This site shows you how we work, shares what we know, and challenges you to help us do it better.</subtitle>
            <title>Mozilla: View Source Fundraising » mozilla</title>
            <updated>2016-01-25T13:31:34Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-us">
        <id>http://www.agmweb.ca/robbie-burns</id>
        <link href="http://www.agmweb.ca/2016-01-25-robbie-burns/" rel="alternate" type="text/html"/>
        <title xml:lang="en-us">Robbie Burns</title>
        <content type="xhtml" xml:lang="en-us"><div xmlns="http://www.w3.org/1999/xhtml"><p>Tonight is Robbie Burns night, in honour of that great Scottish poet. But tonight had me thinking about another night in my past.</p>

            <p>It was about 5 years ago, maybe less, I struggle to remember now. I was in the UK visiting family and my Dad was sick. Cancer and it's treatment is tough, you have good weeks, you have bad weeks and you have really fucking bad weeks. This was a good week and for some reason I was in the UK.</p>

            <p>Myself, my brother and my sister-in-law went down to see him that night. It was Robbie Burns night and that meant an excuse for haggis, really, truly terrible scotch, Scottish dancing and all that. There are many times when I look back at time with my Dad in those last few years. This was definitely one of those times. He was my Dad at his best, cracking jokes and having fun. Living life to the absolute fullest, while you still have that chance.</p>

            <p>We had a great night. That ended way too soon.</p>

            <p>Not long after that the cancer came back and that was that.</p>

            <p>But suddenly tonight, in a bar in Portland I had these memories of my Dad in a waistcoat cracking jokes and having fun on Robbie Burns night. No-one else in the bar seemed to know what night it was. You'd think Robbie Burns night might get a little bit more appreciation, but hey.</p>

            <p>In the many years I've been running this blog I've never written about my Dad passing away. Here's the first time. I miss him.</p>

            <p>Hey Robbie Burns? Thanks for making me remember that night.</p></div>
        </content>
        <updated>2016-01-25T08:00:00Z</updated>
        <source>
            <id>http://www.agmweb.ca/blog/andy</id>
            <author>
                <name>Andy McKay</name>
                <email>andy@clearwind.ca</email>
            </author>
            <link href="http://www.agmweb.ca/blog/andy" rel="alternate" type="text/html"/>
            <link href="http://www.agmweb.ca/blog/rss/latest/andy/" rel="self" type="application/atom+xml"/>
            <title xml:lang="en-us">Andy McKay</title>
            <updated>2016-01-26T06:33:30Z</updated>
        </source>
    </entry>

    <entry>
        <id>tag:this-week-in-rust.org,2016-01-25:blog/2016/01/25/this-week-in-rust-115/</id>
        <link href="http://this-week-in-rust.org/blog/2016/01/25/this-week-in-rust-115/" rel="alternate" type="text/html"/>
        <title>This Week in Rust 115</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello and welcome to another issue of <em>This Week in Rust</em>!
            <a href="http://rust-lang.org">Rust</a> is a systems language pursuing the trifecta:
            safety, concurrency, and speed. This is a weekly summary of its progress and
            community. Want something mentioned? Tweet us at <a href="https://twitter.com/ThisWeekInRust">@ThisWeekInRust</a> or <a href="mailto:corey@octayn.net?subject=This%20Week%20in%20Rust%20Suggestion">send us an
                email</a>!
            Want to get involved? <a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md">We love
                contributions</a>.</p>
            <p><em>This Week in Rust</em> is openly developed <a href="https://github.com/cmr/this-week-in-rust">on GitHub</a>.
                If you find any errors in this week's issue, <a href="https://github.com/cmr/this-week-in-rust/pulls">please submit a PR</a>.</p>
            <p>This week's edition was edited by: <a href="https://github.com/nasa42">nasa42</a>, <a href="https://github.com/brson">brson</a>, and <a href="https://github.com/llogiq">llogiq</a>.</p>
            <h3>Updates from Rust Community</h3>
            <h4>News &amp; Blog Posts</h4>
            <ul>
                <li><img alt="balloon" class="emoji" src="https://cdn.discourse.org/business/images/emoji/emoji_one/balloon.png?v=0" title=":balloon:"/><img alt="tada" class="emoji" src="https://cdn.discourse.org/business/images/emoji/emoji_one/tada.png?v=0" title=":tada:"/> <a href="http://blog.rust-lang.org/2016/01/21/Rust-1.6.html">Announcing Rust 1.6</a>. <img alt="tada" class="emoji" src="https://cdn.discourse.org/business/images/emoji/emoji_one/tada.png?v=0" title=":tada:"/><img alt="balloon" class="emoji" src="https://cdn.discourse.org/business/images/emoji/emoji_one/balloon.png?v=0" title=":balloon:"/></li>
                <li><a href="http://www.poumeyrol.fr/2016/01/15/Awkward-zone/">Rust, BigData and my laptop</a>.</li>
                <li>[pdf]<a href="https://cdn.rawgit.com/Gankro/thesis/master/thesis.pdf">You can't spell trust without Rust</a>. Analysis of the semantics and expressiveness of Rust’s type system.</li>
                <li><a href="http://www.ncameron.org/blog/libmacro/">Libmacro - an API for procedural macros to interact with the compiler</a>.</li>
                <li><a href="http://www.jonathanturner.org/2016/01/rust-and-blub-paradox.html">Rust and the Blub Paradox</a>. And the <a href="http://www.jonathanturner.org/2016/01/rethinking-the-blub-paradox.html">follow-up</a>.</li>
                <li>[video] <a href="https://www.youtube.com/channel/UC4mpLlHn0FOekNg05yCnkzQ/videos">Ferris Makes Emulators</a>. Live stream of Ferris developing a N64 emulator in Rust (also on <a href="http://www.twitch.tv/ferrisstreamsstuff/profile">Twitch</a>).</li>
            </ul>
            <h4>Notable New Crates &amp; Project Updates</h4>
            <ul>
                <li><a href="http://areweconcurrentyet.com/">Are we concurrent yet</a>?</li>
                <li><a href="https://github.com/gfx-rs/gfx">GFX</a> epic rewrite for the Pipeline State Objects paradigm has <a href="https://github.com/gfx-rs/gfx/pull/828">landed</a>, described <a href="http://gfx-rs.github.io/2016/01/22/pso.html">on the blog</a>.</li>
                <li><a href="https://github.com/mcarton/rust-herbie-lint">Herbie</a>. A rustc plugin to check for numerical instability.</li>
                <li><a href="http://blog.piston.rs/2016/01/23/dynamo/">Dynamo</a>. A rusty dynamically typed scripting language.</li>
                <li><a href="https://github.com/whitequark/rust-vnc">rust-vnc</a>. An implementation of VNC protocol, client state machine and a client.</li>
            </ul>
            <h3>Updates from Rust Core</h3>
            <p>129 pull requests were <a href="https://github.com/issues?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2016-01-18..2016-01-25">merged in the last week</a>.</p>
            <p>See the <a href="https://internals.rust-lang.org/t/triage-digest-mon-jan-25-2016/3111">triage digest</a> and <a href="https://internals.rust-lang.org/t/subteam-reports-2016-01-22/3106">subteam reports</a> for more details.</p>
            <h4>Notable changes</h4>
            <ul>
                <li><a href="https://github.com/rust-lang/rust/pull/30872">Implement RFC 1252 expanding the OpenOptions structure</a>.</li>
                <li><a href="https://github.com/rust-lang/book/pull/58">Book: First draft of 'ownership'</a>.</li>
                <li><a href="https://github.com/rust-lang/cargo/pull/2205">Cargo: Add convenience syntax to install current crate</a>.</li>
                <li><a href="https://github.com/rust-lang/cargo/pull/2196">Cargo: Introduce cargo metadata subcommand</a>.</li>
                <li><a href="https://github.com/rust-lang/cargo/pull/2081">Cargo: Implement <code>cargo init</code></a>.</li>
                <li><a href="https://github.com/rust-lang/cargo/pull/2270">Cargo: Emit a warning when manifest specifies empty dependency constraints</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/29520">Change name when outputting staticlibs on Windows</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30998">Make <code>btree_set::{IntoIter, Iter, Range}</code> covariant</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30917">Avoid bounds checking at <code>slice::binary_search</code></a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30894"><code>std::sync::mpsc</code>: Add <code>fmt::Debug</code> stubs</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30882">resolve: Fix variant namespacing</a>.</li>
            </ul>
            <h4>New Contributors</h4>
            <ul>
                <li>Adrian Heine</li>
                <li>Andrea Bedini</li>
                <li>Guillaume Bonnet</li>
                <li>Kamal Marhubi</li>
                <li>Keith Yeung</li>
                <li>Marc Bowes</li>
                <li>Martin</li>
                <li>mopp</li>
                <li>Olaf Buddenhagen</li>
                <li>Paul Dicker</li>
                <li>Peter Kolloch</li>
                <li>Stephen (Ziyun) Li</li>
            </ul>
            <h4>Approved RFCs</h4>
            <p>Changes to Rust follow the Rust <a href="https://github.com/rust-lang/rfcs#rust-rfcs">RFC (request for comments)
                process</a>. These
                are the RFCs that were approved for implementation this week:</p>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1462">Amendment to RFC 550: Add <code>[</code> to the FOLLOW(ty) in macro future-proofing rules</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1320">Amendment to RFC 1192: Amend <code>RangeInclusive</code> to use an enum</a>.</li>
            </ul>
            <h4>Final Comment Period</h4>
            <p>Every week <a href="https://rust-lang.org/team.html">the team</a> announces the
                'final comment period' for RFCs and key PRs which are reaching a
                decision. Express your opinions now. <a href="https://github.com/rust-lang/rfcs/labels/final-comment-period">This week's FCPs</a> are:</p>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/243">Trait-based exception handling</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1361">Improve Cargo target-specific dependencies</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1129">Add a <code>IndexAssign</code> trait that allows overloading "indexed assignment" expressions like <code>a[b] = c</code></a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1196">Allow eliding more type parameters</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1296">Add an <code>alias</code> attribute to <code>#[link]</code> and <code>-l</code></a>.</li>
            </ul>
            <h4>New RFCs</h4>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1477">Add compiler support for generic atomic operations</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1478">Translate undefined generic intrinsics to an LLVM <code>unreachable</code> and a lint</a>.</li>
            </ul>
            <h3>Upcoming Events</h3>
            <ul>
                <li><a href="http://www.meetup.com/opentechschool-berlin/">1/27. OpenTechSchool Berlin: Rust Hack and Learn</a>.</li>
                <li><a href="http://www.meetup.com/Tokyo-Rust-Meetup/events/227871840/">1/28. Tokyo Rust Meetup #2</a>.</li>
                <li><a href="http://www.meetup.com/Rust-Berlin/events/227321071/">2/3. Rust Berlin: Leaf and Collenchyma</a>.</li>
                <li><a href="http://www.meetup.com/de/Rust-Cologne-Bonn/events/227534456/">2/3. Rust Meetup in Cologne / Germany</a>.</li>
                <li><a href="https://www.eventbrite.com/e/mozilla-rust-seattle-meetup-tickets-12222326307?aff=erelexporg">2/8. Seattle Rust Meetup</a>.</li>
            </ul>
            <p>If you are running a Rust event please add it to the <a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com">calendar</a> to get
                it mentioned here. Email <a href="mailto:erick.tryzelaar@gmail.com">Erick Tryzelaar</a> or <a href="mailto:banderson@mozilla.com">Brian
                    Anderson</a> for access.</p>
            <h3>fn work(on: RustProject) -&gt; Money</h3>
            <ul>
                <li><a href="http://maidsafe.net/rust_engineer.html">Rust Engineer</a> at MaidSafe.</li>
                <li><a href="https://careers.mozilla.org/en-US/position/ozy21fwU">Research Engineer - Servo</a> at Mozilla.</li>
                <li><a href="https://careers.mozilla.org/en-US/position/o0H41fww">Senior Research Engineer - Rust</a> at Mozilla.</li>
                <li><a href="http://plv.mpi-sws.org/rustbelt/">PhD and postdoc positions</a> at MPI-SWS.</li>
            </ul>
            <p><em>Tweet us at <a href="https://twitter.com/ThisWeekInRust">@ThisWeekInRust</a> to get your job offers listed here!</em></p>
            <h3>Crate of the Week</h3>
            <p>This week's Crate of the Week is <a href="https://github.com/phildawes/racer">racer</a> which powers code completion in all Rust development environments.</p>
            <p>Thanks to <a href="https://users.rust-lang.org/users/stebalien">Steven Allen</a> for the suggestion.</p>
            <p><a href="https://users.rust-lang.org/t/crate-of-the-week/2704">Submit your suggestions for next week</a>!</p>
            <h3>Quote of the Week</h3>
            <blockquote>
                <p>Memory errors are fundamentally state errors, and Rust's move semantics, borrowing, and aliasing XOR mutating help enormously for me to reason about how my program changes state as it executes, to avoid accidental shared state and side effects at a distance. Rust more than any other language I know enables me to do compiler driven design. And internalizing its rules has helped me design better systems, even in other languages.</p>
            </blockquote>
            <p>— <a href="https://www.reddit.com/r/rust/comments/4275gz/rust_and_the_blub_paradox/cz8akv9">desiringmachines on /r/rust</a>.</p>
            <p>Thanks to <a href="https://users.rust-lang.org/users/dikaiosune">dikaiosune</a> for the suggestion.</p>
            <p><a href="http://users.rust-lang.org/t/twir-quote-of-the-week/328">Submit your quotes for next week</a>!</p></div>
        </summary>
        <updated>2016-01-25T05:00:00Z</updated>
        <author>
            <name>Corey Richardson</name>
        </author>
        <source>
            <id>http://this-week-in-rust.org/</id>
            <link href="http://this-week-in-rust.org/" rel="alternate" type="text/html"/>
            <link href="http://this-week-in-rust.org/atom.xml" rel="self" type="application/atom+xml"/>
            <title>This Week in Rust</title>
            <updated>2016-01-25T05:00:00Z</updated>
        </source>
    </entry>

    <entry>
        <id>tag:blogger.com,1999:blog-1015214236289077798.post-7056349209464984020</id>
        <link href="http://tenfourfox.blogspot.com/2016/01/3860-available.html" rel="alternate" type="text/html"/>
        <title>38.6.0 available</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">TenFourFox 38.6.0 is available for testing (<a href="https://sourceforge.net/projects/tenfourfox/files/38.6.0/">downloads</a>, <a href="https://github.com/classilla/tenfourfox/wiki/Hashes">hashes</a>, <a href="https://github.com/classilla/tenfourfox/wiki/ZZReleaseNotes3860">release notes</a>). I'm sorry it's been so quiet around here; I'm in the middle of a backbreaking Master's course, my last one before I'm finally done with the lousy thing, and I haven't had any time to start on 45 so far. 38.6 does have some other fixes in it, though: I think I found the last place where bookmark backups were being mistakenly saved in LZ4 based on Chris Trusch's report, and the problematic fonts on the iCloud login page are now blacklisted, so you should be able to login again. I can't do much more testing than that, however, since I don't use iCloud personally, so other lapses in font functionality will require the font URL and I'll add them to the blacklist in 38.7. The browser will go live Monday Pacific time as usual. (The temporary workaround is to set <tt>gfx.downloadable_fonts.enabled</tt> to <tt>false</tt>, and switch the setting back when you don't need it anymore.) <p>Speaking of, downloadable fonts were exactly the same problem on the Sun Ultra-3 laptop I've been refurbishing; Oracle still provides a free Solaris 10 build of 38ESR, but it crashes on web fonts for reasons I have yet to diagnose, so I just have them turned off. Yes, it really is a SPARC laptop, a rebranded Tadpole Viper, and I think the fastest one ever made in this form factor (a 1.2GHz UltraSPARC IIIi). It's pretty much what I expected the PowerBook G5 would have been -- hot, overthrottled and power-hungry -- but Tadpole actually built the thing and it's not a disaster, relatively speaking. There's no JIT in this Firefox build, the brand new battery gets only 70 minutes of runtime even with the CPU clock-skewed to hell, it stands a very good chance of rendering me sterile and/or medium rare if I actually use it in my lap and it had at least one sudden overtemp shutdown and pooped all over the filesystem, but between Firefox, Star Office and <tt>pkgsrc</tt> I can actually use it. More on that for laughs in a future post. </p><p>It has been pointed out to me that Leopard Webkit has not made an update in over three months, so hopefully Tobias is still doing okay with his port.</p></div>
        </summary>
        <updated>2016-01-23T06:02:00Z</updated>
        <author>
            <name>ClassicHasClass</name>
            <email>noreply@blogger.com</email>
        </author>
        <source>
            <id>tag:blogger.com,1999:blog-1015214236289077798</id>
            <category term="security"/>
            <category term="mozilla"/>
            <category term="anfscd"/>
            <category term="qte"/>
            <category term="transition"/>
            <category term="PowerPC"/>
            <category term="shame"/>
            <category term="mte"/>
            <category term="ppc970"/>
            <category term="applesnark"/>
            <category term="judgment day"/>
            <category term="shoutout"/>
            <category term="parity"/>
            <category term="tenfourfoxbox"/>
            <category term="68k"/>
            <category term="classilla"/>
            <category term="intel"/>
            <category term="kubrick"/>
            <category term="sluggo"/>
            <category term="statistics"/>
            <category term="thereisnoxulonlywebextensions"/>
            <author>
                <name>ClassicHasClass</name>
                <email>noreply@blogger.com</email>
            </author>
            <link href="http://tenfourfox.blogspot.com/" rel="alternate" type="text/html"/>
            <link href="http://tenfourfox.blogspot.com/feeds/posts/default?alt=rss" rel="self" type="application/rss+xml"/>
            <subtitle>What's new in TenFourFox, the Mozilla browser for Power Macs.</subtitle>
            <title>TenFourFox Development</title>
            <updated>2016-01-26T18:31:40Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://blog.mozilla.org/netpolicy/?p=907</id>
        <link href="https://blog.mozilla.org/netpolicy/2016/01/22/addressing-the-chilling-effect-of-patent-damages/" rel="alternate" type="text/html"/>
        <title>Addressing the Chilling Effect of Patent Damages</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Last year, we unveiled the Mozilla Open Software Patent License as part of our Initiative to help limit the negative impacts that patents have on open source software. While those were an important first step for us, we continue to … <a class="go" href="https://blog.mozilla.org/netpolicy/2016/01/22/addressing-the-chilling-effect-of-patent-damages/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Last year, we unveiled the <a href="https://www.mozilla.org/about/patents/license/">Mozilla Open Software Patent License</a> as part of our <a href="https://www.mozilla.org/about/patents/">Initiative</a> to help limit the negative impacts that patents have on open source software. While those were an important first step for us, we continue to do more. This past Wednesday, Mozilla joined several other tech and software companies in filing an <a href="https://blog.mozilla.org/netpolicy/files/2016/01/Halo-Stryker-Internet-Companies-brief.pdf">amicus brief</a> with the Supreme Court of the United States in the <i>Halo</i> and <i>Stryker</i> cases.</p>
            <p>In the brief, we urge the Court to limit the availability of treble damages. Treble damages are significant because they greatly increase the amount of money owed if a defendant is found to “willfully infringe” a patent. As a result, many open source projects and technology companies will refuse to look into or engage in discussions about patents, in order to avoid even a remote possibility of willful infringement. This makes it very hard to address the chilling effects that patents can have on open source software development, open innovation, and collaborative efforts.</p>
            <p>We hope that our brief will help the Court see how this legal standard has affected technology companies and persuade the Court to limit treble damages.</p></div>
        </content>
        <updated>2016-01-23T00:17:34Z</updated>
        <category term="Open Source"/>
        <category term="patent"/>
        <category term="United States"/>
        <author>
            <name>Elvin Lee</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/netpolicy</id>
            <link href="http://blog.mozilla.org/netpolicy/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/netpolicy" rel="alternate" type="text/html"/>
            <subtitle>Mozilla's official blog on open Internet policy initiatives and developments</subtitle>
            <title>Open Policy &amp; Advocacy</title>
            <updated>2016-01-25T20:46:35Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/addons/?p=7640</id>
        <link href="https://blog.mozilla.org/addons/2016/01/22/add-on-signing-update/" rel="alternate" type="text/html"/>
        <title>Add-on Signing Update</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">In Firefox 43, we made it a default requirement for add-ons to be signed. This requirement can be disabled by toggling a preference that was originally scheduled to be removed in Firefox 44 for release and beta versions (this preference … <a class="go" href="https://blog.mozilla.org/addons/2016/01/22/add-on-signing-update/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In Firefox 43, we made it a default requirement for add-ons to be signed.  This requirement can be disabled by <a href="https://wiki.mozilla.org/Addons/Extension_Signing#FAQ">toggling a preference</a> that was originally scheduled to be removed in Firefox 44 for release and beta versions (this preference will continue to be available in the Nightly, Developer, and ESR Editions of Firefox for the foreseeable future).  </p>
            <p>We are delaying the removal of this preference to Firefox 46 for a couple of reasons: We’re adding a feature in Firefox 45 that allows <a href="https://blog.mozilla.org/addons/2015/12/23/loading-temporary-add-ons/">temporarily loading unsigned restartless add-ons</a> in release, which will allow developers of those add-ons to use Firefox for testing, and we’d like this option to be available when we remove the preference. We also want to ensure that developers have adequate time to finish the transition to signed add-ons. </p>
            <p>The <a href="https://wiki.mozilla.org/Addons/Extension_Signing#Timeline">updated timeline</a> is available on the signing wiki, and you can look up <a href="https://wiki.mozilla.org/RapidRelease/Calendar">release dates for Firefox versions</a> on the releases wiki. Signing will be mandatory in the beta and release versions of Firefox from 46 onwards, at which point unbranded builds based on beta and release will be provided for testing.</p></div>
        </content>
        <updated>2016-01-22T22:40:59Z</updated>
        <category term="developers"/>
        <category term="general"/>
        <category term="releases"/>
        <author>
            <name>Kev Needham</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/addons</id>
            <link href="https://blog.mozilla.org/addons/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/addons" rel="alternate" type="text/html"/>
            <title>Mozilla Add-ons Blog</title>
            <updated>2016-01-25T20:46:40Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://coopcoopbware.tumblr.com/post/137832199980</id>
        <link href="http://coopcoopbware.tumblr.com/post/137832199980" rel="alternate" type="text/html"/>
        <title>RelEng &amp; RelOps Weekly Highlights - January 22, 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p/><figure class="alignright"><a href="https://www.flickr.com/photos/proud2bcan8dn/1150097247/in/faves-19934681@N00/" target="_blank" title="wine-and-pies"><img alt="wine-and-pies" src="https://farm2.staticflickr.com/1216/1150097247_2f11cb4c2d_z.jpg?zz=1" width="200px"/></a>Releng: drinkin’ wine and makin’ pies.</figure>It’s encouraging to see more progress this week on both the build/release promotion and TaskCluster migration fronts, our two major efforts for this quarter.<p/>

            <p><b>Modernize infrastructure:</b></p>
            <p>In a continuing effort to enable faster, more reliable, and more easily-run tests for TaskCluster components, Dustin landed support for an in-memory, credential-free mock of Azure Table Storage in the <a href="https://www.npmjs.com/package/azure-entities" target="_blank">azure-entities</a> package.  Together with the fake mock support he added to <a href="https://github.com/djmitche/taskcluster-lib-testing" target="_blank">taskcluster-lib-testing</a>, this allows tests for components like taskcluster-hooks to run without network access and without the need for any credentials, substantially decreasing the barrier to external contributions.</p>

            <p>All release promotion tasks are now signed by default. Thanks to Rail for his work here to help improve verifiability and chain-of-custody in our upcoming release process. (<a href="https://bugzil.la/1239682" target="_blank">https://bugzil.la/1239682</a>)
                Beetmover has been spotted in the wild! Jordan has been working on this new tool as part of our release promotion project. Beetmover helps move build artifacts from one place to another (generally between S3 buckets these days), but can also be extended to perform validation actions inline, e.g. checksums and anti-virus. (<a href="https://bugzil.la/1225899" target="_blank">https://bugzil.la/1225899</a>)</p>

            <p>Dustin configured the “desktop-test” and “desktop-build” docker images to build automatically on push.  That means that you can modify the Dockerfile under `testing/docker`, push to try, and have the try job run in the resulting image, all without pushing any images.  This should enable much quicker iteration on tweaks to the docker images.  Note, however, that updates to the base OS images (ubuntu1204-build and centos6-build) still require manual pushes.</p>

            <p>Mark landed Puppet code for base windows 10 support including secrets and ssh keys management.</p>

            <p><b>Improve CI pipeline:</b></p>

            <p>Vlad and Amy repurposed 10 Windows XP machines as Windows 7 to improve the wait times in that test pool (<a href="https://bugzil.la/1239785" target="_blank">https://bugzil.la/1239785</a>)
                Armen and Joel have been working on porting the Gecko tests to run under TaskCluster, and have narrowed the failures down to the single digits.  This puts us on-track to enable Linux debug builds and tests in TaskCluster as the canonical build/test process.</p>

            <p><b>Release:</b></p>

            <p>Ben finished up work on enhanced Release Blob validation in Balrog (<a href="https://bugzil.la/703040" target="_blank">https://bugzil.la/703040</a>), which makes it much more difficult to enter bad data into our update server.</p>

            <p>You may recall Mihai, our former intern who <a href="http://coopcoopbware.tumblr.com/post/133490693210/welcome-back-mihai" target="_blank">we just hired back in November</a>. Shortly after joining the team, he jumped into the <a href="https://wiki.mozilla.org/ReleaseEngineering/Releaseduty" target="_blank">releaseduty</a> rotation to provide much-needed extra bandwidth. The learning curve here is steep, but over the course of the Firefox 44 release cycle, he’s taken on more and more responsibility. He’s even volunteered to do releaseduty for the Firefox 45 release cycle as well. Perhaps the most impressive thing is that he’s also taken the time to update (or write) the releaseduty docs so that the next person who joins the rotation will be that much further ahead of the game. Thanks for your hard work here, Mihai!</p>

            <p><b>Operational:</b></p>

            <p>Hal did some cleanup work to remove unused mozharness configs and directories from the build mercurial repos. These resources have long-since moved into the main mozilla-central tree. Hopefully this will make it easier for contributors to find the canonical copy! (<a href="https://bugzil.la/1239003" target="_blank">https://bugzil.la/1239003</a>)</p>

            <p><b>Hiring:</b></p>

            <p>We’re still hiring for a full-time <a href="https://careers.mozilla.org/position/oi8b2fwn" target="_blank">Build &amp; Release Engineer</a>, and we are still accepting applications for <a href="https://careers.mozilla.org/position/ofA51fwF" target="_blank">interns for 2016</a>. Come join us!</p>

            <p>Well, I don’t know about you, but all that hard work makes me hungry for pie. See you next week!</p></div>
        </summary>
        <updated>2016-01-22T20:49:38Z</updated>
        <category term="Mozilla"/>
        <category term="releng"/>
        <category term="highlights"/>
        <source>
            <id>http://coopcoopbware.tumblr.com/</id>
            <author>
                <name>Chris Cooper</name>
            </author>
            <link href="http://coopcoopbware.tumblr.com/" rel="alternate" type="text/html"/>
            <link href="http://coopcoopbware.tumblr.com/tagged/Mozilla/rss" rel="self" type="application/rss+xml"/>
            <title>Five different types of fried cheese</title>
            <updated>2016-01-22T21:00:12Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/foundation-demos-january-22-2016/</id>
        <link href="https://air.mozilla.org/foundation-demos-january-22-2016/" rel="alternate" type="text/html"/>
        <title>Foundation Demos January 22 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Foundation Demos January 22 2016" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/1c/a0/1ca0b9b2609cdd4e6e3577a8c3df8cfc.jpg" width="160"/>
            Mozilla Foundation Demos January 22 2016
        </p></div>
        </summary>
        <updated>2016-01-22T18:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/sumo/?p=3667</id>
        <link href="https://blog.mozilla.org/sumo/2016/01/22/whats-up-with-sumo-22nd-january/" rel="alternate" type="text/html"/>
        <title>What’s up with SUMO – 22nd January</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Hello, SUMO Nation! The third week of the new year is already behind us. Time flies when you’re not paying attention… What are you going to do this weekend? Let us know in the comments, if you feel like sharing … <a class="go" href="https://blog.mozilla.org/sumo/2016/01/22/whats-up-with-sumo-22nd-january/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><strong>Hello, SUMO Nation!</strong></p>
            <p><a href="http://blog.mozilla.org/sumo/files/2016/01/sumo_logo.png"><img alt="sumo_logo" class="aligncenter size-full wp-image-3670" height="387" src="http://blog.mozilla.org/sumo/files/2016/01/sumo_logo.png" width="383"/></a>The third week of the new year is already behind us. Time flies when you’re not paying attention… What are you going to do this weekend? Let us know in the comments, if you feel like sharing :-) I hope to be in the mountains, getting some fresh (bracing) air, and enjoying nature.</p>
            <h3><strong class="username">Welcome, new contributors!<br/>
            </strong></h3>
            <ul>
                <li class="author">
                    <div class="author"><a class="username" href="https://support.mozilla.org/user/johnmwc2" target="_blank">johnmwc2</a></div>
                </li>
                <li class="author"><a class="author-name" href="https://support.mozilla.org/user/myanesp" target="_blank">myanesp</a></li>
                <li class="author"><a class="author-name" href="https://support.mozilla.org/user/Harish.A" target="_blank">Harish.A</a></li>
                <li class="author"><a class="author-name" href="https://support.mozilla.org/user/hoolibob" target="_blank">hoolibob</a></li>
                <li class="author"><a class="author-name" href="https://support.mozilla.org/user/Meteoro890" target="_blank">Meteoro890</a></li>
            </ul>
            <div class="author">If you just joined us, don’t hesitate – come over and <a href="https://support.mozilla.org/forums/buddies" target="_blank">say “hi” in the forums!</a></div>
            <div class="author"/>
            <div class="author">
                <h3><strong>Contributors of the week<br/>
                </strong></h3>
                <ul>
                    <li><span class="author-a-z74z1rz89z69z76zbz72zz69zz67z9z82zniz71z"><a href="https://support.mozilla.org/user/safwan.rahman" target="_blank">Safwan</a> for his work on the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=619284" target="_blank">draft feature for l10n / KB editing</a> – rock on!</span></li>
                    <li><a href="https://support.mozilla.org/user/artist" target="_blank">Artist</a> and <a href="https://support.mozilla.org/user/pollti" target="_blank">Pollti</a> for their the work on updating important articles for Focus with limited time – woot!</li>
                </ul>
                <div class="" id="magicdomid64">
                    <p><strong><span style="text-decoration: underline;">We salute you!</span></strong></p>
                </div>
                <div class="author">Don’t forget that if you are new to SUMO and someone helped you get started in a nice way you can <a href="https://support.mozilla.org/forums/buddies/711364?last=65670" target="_blank">nominate them for the Buddy of the Month!</a></div>
                <div class="author"/>
            </div>
            <h3><strong>Most recent SUMO Community meeting</strong></h3>
            <ul>
                <li><a href="https://public.etherpad-mozilla.org/p/sumo-2016-01-18" target="_blank">You can read the notes here</a> (most of the staff members were AFK due to MLK Day in the US) and see the video on our <a href="https://www.youtube.com/channel/UCaiposaIhA7HfMqH2NIciyA/videos" target="_blank">YouTube channel</a> and <a href="https://air.mozilla.org/search/?q=sumo" target="_blank">at AirMozilla</a>.<del> </del><del><br/>
                </del></li>
                <li><strong>IMPORTANT: We are considering changing the way the meetings work. Help us figure out what’s best for you – join the discussion on the forums in this thread: <a href="https://support.mozilla.org/en-US/forums/contributors/711752?last=67873">(Monday) Community Meetings in 2016</a>.</strong></li>
            </ul>
            <h3><strong>The next SUMO Community meeting… </strong></h3>
            <ul>
                <li style="text-align: left;">is happening on <a href="https://public.etherpad-mozilla.org/p/sumo-2016-01-25" target="_blank">Monday the 25th – join us</a>!</li>
                <li style="text-align: left;"><strong>Reminder: if you want to add a discussion topic to the upcoming meeting agenda:</strong>
                    <ul>
                        <li style="text-align: left;">Start a thread in the <a href="https://support.mozilla.org/forums/contributors" target="_blank">Community Forums</a>, so that everyone in the community can see what will be discussed and voice their opinion here before Monday (this will make it easier to have an efficient meeting).</li>
                        <li style="text-align: left;">Please do so as soon as you can before the meeting, so that people have time to read, think, and reply (and also add it to the agenda).</li>
                        <li style="text-align: left;">If you can, please attend the meeting in person (or via IRC), so we can follow up on your discussion topic during the meeting with your feedback.</li>
                    </ul>
                </li>
            </ul>
            <h3><strong class="author-g-ivsra51ph44x461i">Developers</strong></h3>
            <ul>
                <li><a href="http://edwin.mozilla.io/t/sumo" target="_blank">You can see the current state of the backlog our developers are working on here</a>.</li>
                <li><a href="https://public.etherpad-mozilla.org/p/sumo-p-2016-01-21" target="_blank">The latest SUMO Platform meeting notes can be found here</a>.</li>
                <li>Interested in learning how Kitsune (the engine behind SUMO) works? <a href="http://kitsune.readthedocs.org/" target="_blank">Read more about it here</a> and <a href="https://github.com/mozilla/kitsune/" target="_blank">fork it on GitHub</a>!</li>
                <li>We have a new link for promoting contributions to Kitsune’s code. Please use <strong>http://mzl.la/SUMOdev</strong> whenever you want to show interested people to see what Kitsune is all about – thanks!</li>
            </ul>
            <p><a href="http://blog.mozilla.org/sumo/files/2016/01/mission_developers.png"><img alt="mission_developers" class="aligncenter size-full wp-image-3668" height="406" src="http://blog.mozilla.org/sumo/files/2016/01/mission_developers.png" width="437"/></a></p>
            <h3><strong>Social</strong></h3>
            <ul>
                <li>Next week, there will be a kick-off meeting for the rethinking of Mozilla’s general support strategy through social networks. <a href="https://support.mozilla.org/user/Madasan" target="_blank">Are you interested in taking part? Let Madalina know!</a></li>
            </ul>
            <h3><strong>Community</strong></h3>
            <ul>
                <li>The NDA process and list is currently being reworked under the leadership of the Participation Team. Expect to see messaging on this subject in the coming days.</li>
                <li>
                    <div class="title"><strong><a href="https://support.mozilla.org/forums/contributors/711729?last=67763">IMPORTANT: take a look at our Work Week Summary for Mozlando. We need your feedback for a few things there.</a></strong></div>
                </li>
                <li>Are you going to FOSDEM next week? Would you like to have a small SUMO-meetup? <a href="https://support.mozilla.org/user/vesper" target="_blank">Let me know</a>!</li>
                <li>
                    <div class="title">Ongoing reminder: if you think you can benefit from getting <a href="https://wiki.mozilla.org/Community_Hardware" target="_blank">a second-hand device</a> to help you with contributing to SUMO, you know where to find us.</div>
                </li>
            </ul>
            <p><a href="http://blog.mozilla.org/sumo/files/2016/01/hero_support.png"><img alt="hero_support" class="aligncenter size-full wp-image-3669" height="383" src="http://blog.mozilla.org/sumo/files/2016/01/hero_support.png" width="367"/></a></p>
            <div class="">
                <div class="" id="magicdomid83">
                    <h3><strong class="author-g-ivsra51ph44x461i">Localization</strong></h3>
                </div>
            </div>
            <div class="" id="magicdomid95">
                <ul>
                    <li>You can <a href="https://support.mozilla.org/forums/l10n-forum/711781" target="_blank">read more about the recent “infrequent contributor survey” in this thread</a>. In short: the good news is that we’re doing a good job at making it easy enough for everyone to contribute. The bad news – we’re not doing enough to make sure they know what to do after their first contribution. Expect some changes in the messaging for first-time contributors to the KB :-)</li>
                    <li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1012384" target="_blank">Our magical l10n dashboards keep being magical</a> ;-) Thank you for your patience. If you see any discrepancies between the number of localized articles and the percentage shown in the bar, file a bug!</li>
                </ul>
            </div>
            <div class="" id="magicdomid75">
                <h3><strong>Firefox<br/>
                </strong></h3>
                <ul>
                    <li><strong>for Android</strong>
                        <ul>
                            <li><a href="https://support.mozilla.org/forums/contributors/711712?last=67653">Learn more about Firefox 43 for Android from the official thread with release notes / issues / discussions</a>.</li>
                            <li>
                                <div class="title"><a href="https://support.mozilla.org/forums/contributors/711718?last=67822">Reminder: Roland is sharing Firefox 44 for Android release notes / issues / discussions</a> with everyone in the forum.</div>
                            </li>
                        </ul>
                    </li>
                </ul>
                <ul>
                    <li><strong>for Desktop</strong>
                        <ul>
                            <li>Heads up – next week should be release week! Keep your eyes peeled ;-)</li>
                        </ul>
                    </li>
                </ul>
                <ul>
                    <li><strong>for iOS</strong>
                        <div class="" id="magicdomid85">
                            <ul class="list-bullet1">
                                <li><span class="author-a-107uz69zz81zhz78z0z78zz84zz66zz76zz82zz77zj">No news from the world of Firefox for iOS this week.</span></li>
                            </ul>
                        </div>
                    </li>
                </ul>
            </div>
            <p>Thank you for reading all the way down here… More to come next week! You know where to find us, so see you around – keep rocking the open &amp; helpful web!</p></div>
        </content>
        <updated>2016-01-22T17:43:56Z</updated>
        <category term="General"/>
        <author>
            <name>Michał</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/sumo</id>
            <link href="https://blog.mozilla.org/sumo/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/sumo" rel="alternate" type="text/html"/>
            <subtitle>SUpport MOzilla's official blog - rocking the helpful web since 2008!</subtitle>
            <title>SUMO Blog</title>
            <updated>2016-01-25T09:31:47Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/bay-area-rust-meetup-january-2016/</id>
        <link href="https://air.mozilla.org/bay-area-rust-meetup-january-2016/" rel="alternate" type="text/html"/>
        <title>Bay Area Rust Meetup January 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Bay Area Rust Meetup January 2016" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/87/4f/874f4abef76f55213d50e43d6417ed99.png" width="160"/>
            Bay Area Rust meetup for January 2016. Topics TBD.
        </p></div>
        </summary>
        <updated>2016-01-22T03:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:49Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://blog.lizardwrangler.com/?p=3953</id>
        <link href="http://blog.lizardwrangler.com/2016/01/22/honored-to-participate-in-new-un-panel-on-womens-economic-empowerment/" rel="alternate" type="text/html"/>
        <title>Honored to Participate in New UN Panel on Women’s Economic Empowerment</title>
        <summary>Women’s economic empowerment is necessary for many reasons.  It is necessary to bring health, safety and opportunity to half of humanity.  It is necessary to bring investment and health to families and communities.  It is necessary to unlock economic growth and build more stable societies. Today the UN Secretary General Ban Ki-moon launched the first […]</summary>
        <updated>2016-01-22T02:45:58Z</updated>
        <category term="Mozilla"/>
        <author>
            <name>Mitchell Baker</name>
        </author>
        <source>
            <id>http://blog.lizardwrangler.com</id>
            <link href="http://blog.lizardwrangler.com/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://blog.lizardwrangler.com" rel="alternate" type="text/html"/>
            <title>Mitchell's Blog</title>
            <updated>2016-01-22T03:00:15Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://blog.mozilla.org/webdev/?p=4082</id>
        <link href="https://blog.mozilla.org/webdev/2016/01/21/beer-and-tell-january-2016/" rel="alternate" type="text/html"/>
        <title>Beer and Tell – January 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Once a month, web developers from across the Mozilla Project get together to talk about our side projects and drink, an occurrence we like to call “Beer and Tell”. There’s a wiki page available with a list of the presenters, … <a class="go" href="https://blog.mozilla.org/webdev/2016/01/21/beer-and-tell-january-2016/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Once a month, web developers from across the Mozilla Project get together to talk about our side projects and drink, an occurrence we like to call “Beer and Tell”.</p>
            <p>There’s a <a href="https://wiki.mozilla.org/Webdev/Beer_And_Tell/January_2016">wiki page available</a> with a list of the presenters, as well as links to their presentation materials. There’s also a <a href="https://air.mozilla.org/webdev-beer-and-tell-january-2016/">recording available</a> courtesy of Air Mozilla.</p>
            <h3>shobson: CSS-Only Disco Ball</h3>
            <p>First up was <a href="https://mozillians.org/en-US/u/stephaniehobson/">shobson</a> with a cool demo of an <a href="http://codepen.io/stephaniehobson/pen/ZGZBVW?editors=110">animated disco ball made entirely with CSS</a>. The demo uses a repeated radial gradient for the background, and linear gradients plus a border radius for the disco ball itself. The demo was made for use in shobson’s <a href="https://www.youtube.com/watch?v=7poVasAQjos">WordCamp talk</a> about debugging CSS. A <a href="http://stephaniehobson.ca/wordpress/2015/08/15/how-to-debug-css/">blog post</a> with notes from the talk is available as well.</p>
            <h3>craigcook: Proton – A CSS Framework for Prototyping</h3>
            <p>Next was <a href="https://mozillians.org/en-US/u/craigcook/">craigcook</a>, who presented <a href="http://craigcook.github.io/proton/">Proton</a>. It’s a CSS framework that is intentionally ugly to encourage use for prototypes only. Unlike other CSS frameworks, the temptation to reuse the classes from the framework in your final page doesn’t occur, which helps avoid the presentational classes that plague sites built using a framework normally.</p>
            <p>Proton’s website includes an overview of the layout and components provided, as well as examples of prototypes made using the framework.</p>
            <hr/>
            <p>If you’re interested in attending the next Beer and Tell, sign up for the <a href="https://lists.mozilla.org/listinfo/dev-webdev">dev-webdev@lists.mozilla.org mailing list</a>. An email is sent out a week beforehand with connection details. You could even add yourself to the wiki and show off your side-project!</p>
            <p>See you next month!</p></div>
        </content>
        <updated>2016-01-21T18:56:46Z</updated>
        <category term="Beer and Tell"/>
        <author>
            <name>Michael Kelly</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/webdev</id>
            <link href="https://blog.mozilla.org/webdev/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/webdev" rel="alternate" type="text/html"/>
            <subtitle>For make benefit of glorious tubes</subtitle>
            <title>Mozilla Web Development</title>
            <updated>2016-01-21T19:01:37Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/community/?p=2287</id>
        <link href="http://blog.mozilla.org/community/2016/01/21/this-month-at-mozilla/" rel="alternate" type="text/html"/>
        <title>This Month at Mozilla</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">A lot of exciting things are happening with Participation at Mozilla this month. Here’s a quick round-up of some of the things that are going on! Mozillians Profiles Got a Facelift: Since the start of this year, the Participation Infrastructure … <a class="go" href="http://blog.mozilla.org/community/2016/01/21/this-month-at-mozilla/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p style="text-align: center;"><em>A lot of exciting things are happening with Participation at Mozilla this month. Here’s a quick round-up of some of the things that are going on!</em></p>
            <h3><b>Mozillians Profiles Got a Facelift: </b></h3>
            <p>Since the start of this year, the Participation Infrastructure team has had a renewed focus on making mozillians.org a modern community directory to meet Mozilla’s growing needs.</p>
            <p>Their first target for 2016 was to improve the UX on the profile edit interface.</p>
            <p><a href="https://blog.mozilla.org/community/files/2016/01/new-profile-768x548.png"><img alt="new-profile-768x548" class="aligncenter wp-image-2288 size-large" height="428" src="https://blog.mozilla.org/community/files/2016/01/new-profile-768x548-600x428.png" width="600"/></a><br/>
                ”We chose it due to relatively self-contained nature of it, and cause many people were not happy with the current UX. After research of existing tools and applying latest best practices, we designed, coded and deployed a new profile edit interface (which by the way is renamed to Settings now) that we are happy to deliver to all Mozillians.”</p>
            <p>Read the full blog <a href="http://pierros.papadeas.gr/?p=447">here</a>!</p>
            <h3><b>There are New Ways to Bring Your Design Skills to Mozilla: </b></h3>
            <p>Are you a passionate designer looking to contribute to Mozilla? You’ll be happy to hear there is a new way to contribute to the many design projects around Mozilla! Submit issues, find collaborators, and work on open source projects by getting involved!</p>
            <ul>
                <li>You can check out the projects looking for help, or submit your own on the <a href="https://github.com/mozilla/Community-Design/issues">GitHub Repo</a>.</li>
                <li><a href="https://docs.google.com/a/mozilla.com/forms/d/1Tw3Mw_CMiqcIQrJF7TB1yIETGYec__NiVhaSz0CAaE8/viewform">Sign-up to the mailing list</a> to be added as a contributor to the Repo, added to the regular meeting list, and to get emails about GitHub trainings and more!</li>
                <li>And read<a href="http://elioqoshi.me/en/2016/01/mozilla-community-design-kickoff/"> a blogpost</a> about the project and its first meeting.</li>
            </ul>
            <p>Learn more <a href="https://discourse.mozilla-community.org/c/community-design">here</a>.</p>
            <h3><b>136 Volunteers Are Going to Singapore: </b></h3>
            <p>This weekend 136 participation leaders from all over the world are<a href="https://twitter.com/thephoenixbird/status/690181985222926336"> heading to Singapore</a> to undergo two days of<a href="https://wiki.mozilla.org/Participation/Global_Gatherings_2015"> leadership training</a> to develop the skills, knowledge and attitude to lead Participation in 2016.</p>
            <div class="wp-caption aligncenter" id="attachment_2289" style="width: 609px;"><a href="https://blog.mozilla.org/community/files/2016/01/CZQE241WIAA6R2J.jpg"><img alt="Photo credit @thephoenixbird on Twitter" class="wp-image-2289 size-full" height="337" src="https://blog.mozilla.org/community/files/2016/01/CZQE241WIAA6R2J.jpg" width="599"/></a><p class="wp-caption-text">Photo credit @<a href="https://twitter.com/thephoenixbird/status/690181985222926336" target="_blank">thephoenixbird</a> on Twitter</p></div>
            <p>If you know someone attending don’t forget to share your questions and goals with them, and follow along over the weekend by watching the hashtag<a href="https://twitter.com/search?q=%23mozsummit"> #MozSummit</a>.</p>
            <p>Stay tuned after the event for a debrief of the weekend!</p>
            <h3><b>Friday’s Plenary from Mozlando is now public on Air Mozilla: </b></h3>
            <p>If you’re interested in learning more about all the exciting new features, projects, and plans that were presented at Mozlando look no further! You can now watch the final plenary sessions on Air Mozilla (it’s a lot of fun so I highly recommend it!) <a href="https://air.mozilla.org/channels/mozlando/">here</a>.</p>
            <p>Share your questions and comments on discourse <a href="https://discourse.mozilla-community.org/t/friday-plenary-from-mozlando-now-public-on-air-mozilla/6659">here</a>.</p>
            <p><em>Look forward to more updates like these in the coming months!</em></p></div>
        </content>
        <updated>2016-01-21T17:58:33Z</updated>
        <category term="Participation"/>
        <category term="Air Mozilla"/>
        <category term="contributor"/>
        <category term="MonthlyUpdate"/>
        <category term="MozParticipation"/>
        <author>
            <name>Lucy Harris</name>
        </author>
        <source>
            <id>http://blog.mozilla.org/community</id>
            <link href="http://blog.mozilla.org/community/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://blog.mozilla.org/community" rel="alternate" type="text/html"/>
            <subtitle>News and notes from and for the Mozilla community.</subtitle>
            <title>about:community</title>
            <updated>2016-01-25T16:31:42Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://blog.mozilla.org/netpolicy/?p=912</id>
        <link href="https://blog.mozilla.org/netpolicy/2016/01/21/prioritizing-privacy-good-for-business/" rel="alternate" type="text/html"/>
        <title>Prioritizing privacy: Good for business</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This was originally posted at StaySafeOnline.org in advance of Data Privacy Day. Data Privacy Day – which arrives in just a week – is a day designed to raise awareness and promote best practices for privacy and data protection. It … <a class="go" href="https://blog.mozilla.org/netpolicy/2016/01/21/prioritizing-privacy-good-for-business/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>This was originally posted at <a href="http://staysafeonline.org/blog/prioritizing-privacy-good-for-business/">StaySafeOnline.org</a> in advance of <a href="http://www.staysafeonline.org/data-privacy-day/events/">Data Privacy Day</a>.</em></p>
            <p>Data Privacy Day – which arrives in just a week – is a day designed to raise awareness and promote best practices for privacy and data protection. It is a day that looks to the future and recognizes that we can and should do better as an industry. It reminds us that we need to focus on the importance of having the trust of our users.</p>
            <p>We seek to build trust so we can collectively create the Web our users want – the Web we all want.</p>
            <p>That Web is based on relationships, the same way that the offline world is. When I log in to a social media account, schedule a grocery delivery online or browse the news, I’m relying on those services to respect my data. While companies are innovating their products and services, they need to be innovating on user trust as well, which means designing to address privacy concerns – and making smart choices (early!) about how to manage data.</p>
            <p>A <a href="http://www.pewinternet.org/2016/01/14/privacy-and-information-sharing/">recent survey by Pew</a> highlights the thought that each user puts into their choices – and the contextual considerations in various scenarios. They concluded that many participants were annoyed and uncertain by how their information was used, and they are choosing not to interact with those services that they don’t trust. This is a clear call to businesses to foster more trust with their users, which starts by making sure that there are people empowered within your company to ask the right questions: what do your users expect? What data do you need to collect? How can you communicate about that data collection? How should you protect their data? Is holding on to data a risk, or should you delete it?</p>
            <p>It’s crucial that users are a part of this process – consumers’ data is needed to offer cool, new experiences and a user needs to trust you in order to choose to give you their data. Pro-user innovation can’t happen in a vacuum – the system as it stands today isn’t doing a good job of aligning user interests with business incentives. Good user decisions can be good business decisions, but only if we create thoughtful user-centric products in a way that closes the feedback loop so that positive user experiences are rewarded with better business outcomes.</p>
            <p>Not prioritizing privacy in product decisions will impact the bottom line. From the many data breaches over the last few years to increasing evidence of eroding trust in online services, data practices are proving to be the dark horse in the online economy. When a company loses user trust, whether on privacy or <a href="https://medium.com/@davidamerland/the-cost-of-losing-trust-97d764a1e696">anything else</a>, it loses customers and the potential for growth.</p>
            <p>Privacy means different things to different people but what’s clear is that people make decisions about the products and services that they use based on how those companies choose to treat their users. Over this time, the Internet ecosystem has evolved, as has its relationship with users – and some aspects of this evolution threaten the trust that lies at the heart of that relationship. Treating a user as a target – whether for an ad, purchase, or service – undermines the trust and relationship that a business may have with a consumer.</p>
            <p>The solution is not to abandon the massive value that robust data can bring to users, but rather, to collect and use data leanly, productively and transparently. At Mozilla, we have created a strong set of internal data practices to ensure that data decisions align with our <a href="https://www.mozilla.org/en-US/privacy/principles/">privacy principles</a>. As an industry, we need to keep users at the center of the product vision rather than viewing them as targets of the product – it’s the only way to stay true to consumers and deliver the best, most trusted experiences possible.</p>
            <p>Want to hear more about how businesses can build relationships with their users by focusing on trust and privacy? We’re holding events in Washington, D.C., and <a href="https://www.eventbrite.com/e/january-privacy-lab-privacy-for-startups-tickets-19849219550?aff=es2">San Francisco</a> with some of our partners to talk about it. Please join us!</p></div>
        </content>
        <updated>2016-01-21T17:42:00Z</updated>
        <category term="Data Governance"/>
        <category term="privacy"/>
        <category term="Trust"/>
        <author>
            <name>Heather West</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/netpolicy</id>
            <link href="http://blog.mozilla.org/netpolicy/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/netpolicy" rel="alternate" type="text/html"/>
            <subtitle>Mozilla's official blog on open Internet policy initiatives and developments</subtitle>
            <title>Open Policy &amp; Advocacy</title>
            <updated>2016-01-25T20:46:35Z</updated>
        </source>
    </entry>

    <entry>
        <id>https://tacticalsecret.com/tag/mozilla/rss/9c39ad13-14ae-4456-a84e-13612637d832</id>
        <link href="https://tacticalsecret.com/issuance-rate-for-lets-encrypt/" rel="alternate" type="text/html"/>
        <title>Issuance Rate for Let's Encrypt</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Gathering data from <a href="https://github.com/jcjones/letsencrypt_statistics">Certificate Transparency logs</a>, here's a snapshot in time of Let's Encrypt's certificate issuance rate per minute from 7-21 January 2016. On 20 January, DreamHost launched formal support for Let's Encrypt, which coincides with a rate increase.</p>

            <p>Note: This is mostly an experimental post with embedding charts; I've</p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Gathering data from <a href="https://github.com/jcjones/letsencrypt_statistics">Certificate Transparency logs</a>, here's a snapshot in time of Let's Encrypt's certificate issuance rate per minute from 7-21 January 2016. On 20 January, DreamHost launched formal support for Let's Encrypt, which coincides with a rate increase.</p>

            <p>Note: This is mostly an experimental post with embedding charts; I've more data in the queue.</p>

            <h3>Let's Encrypt Issuance Rate per Minute</h3>

            <div id="rate_hours"/></div>
        </content>
        <updated>2016-01-21T17:07:25Z</updated>
        <category term="letsencrypt"/>
        <category term="mozilla"/>
        <category term="charts"/>
        <author>
            <name>James 'J.C.' Jones</name>
        </author>
        <source>
            <id>https://tacticalsecret.com/</id>
            <link href="https://tacticalsecret.com/" rel="alternate" type="text/html"/>
            <link href="https://tacticalsecret.com/tag/mozilla/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>On a mission to solve information security issues for the whole Internet. That, and whatever else comes up.</subtitle>
            <title>mozilla - The Internet of Secure Things</title>
            <updated>2016-01-21T17:16:43Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/web-qa-weekly-meeting-20160121/</id>
        <link href="https://air.mozilla.org/web-qa-weekly-meeting-20160121/" rel="alternate" type="text/html"/>
        <title>Web QA Weekly Meeting, 21 Jan 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Web QA Weekly Meeting" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/f5/13/f5137857516694df0458e837c2d3a4be.png" width="160"/>
            This is our weekly gathering of Mozilla'a Web QA team filled with discussion on our current and future projects, ideas, demos, and fun facts.
        </p></div>
        </summary>
        <updated>2016-01-21T17:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:49Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://soledadpenades.com/?p=6379</id>
        <link href="http://soledadpenades.com/2016/01/21/no-more-tap-tap-tap-sounds-yay/" rel="alternate" type="text/html"/>
        <link href="https://flattr.com/submit/auto?user_id=8399&amp;popout=1&amp;url=http%3A%2F%2Fsoledadpenades.com%2F2016%2F01%2F21%2Fno-more-tap-tap-tap-sounds-yay%2F&amp;language=en_GB&amp;category=text&amp;title=No+more+tap+tap+tap+sounds%3A+yay%21&amp;description=A+few+days+ago+the+fantastic+Fritz+from+the+Netherlands+told+me+that+my+Hands+On+Web+Audio+slides+had+stopping+working+and+there+was+no+sound+coming+out+from...&amp;tags=bugs%2Cfirefox%2Cjavascript%2Cmozilla%2Cweb+audio%2Cblog" rel="payment" title="Flattr this!" type="text/html"/>
        <title>No more tap tap tap sounds: yay!</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">A few days ago the fantastic Fritz from the Netherlands told me that my Hands On Web Audio slides had stopping working and there was no sound coming out from them in Firefox. @supersole oh noes! I reopened your slides: https://t.co/SO35UfljMI and it doesn't work in @firefox anymore 😱 (works in chrome though.. 😢) — … <a class="more-link" href="http://soledadpenades.com/2016/01/21/no-more-tap-tap-tap-sounds-yay/">Continue reading <span class="screen-reader-text">No more tap tap tap sounds: yay!</span> <span class="meta-nav">→</span></a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A few days ago the fantastic Fritz from the Netherlands told me that my <a href="http://soledadpenades.com/files/t/2015_howa/">Hands On Web Audio slides</a> had stopping working and there was no sound coming out from them in Firefox.</p>
            <blockquote class="twitter-tweet" width="550"><p dir="ltr" lang="en"><a href="https://twitter.com/supersole">@supersole</a> oh noes! I reopened your slides: <a href="https://t.co/SO35UfljMI">https://t.co/SO35UfljMI</a> and it doesn't work in <a href="https://twitter.com/firefox">@firefox</a> anymore <img alt="&#x1F631;" class="wp-smiley" src="http://s.w.org/images/core/emoji/72x72/1f631.png" style="height: 1em;"/> (works in chrome though.. <img alt="&#x1F622;" class="wp-smiley" src="http://s.w.org/images/core/emoji/72x72/1f622.png" style="height: 1em;"/>)</p>
                <p>— Boring Stranger (@fritzvd) <a href="https://twitter.com/fritzvd/status/686481500611735552">January 11, 2016</a></p></blockquote>
            <p/>
            <p>Which is pretty disappointing for a slide deck that is built to teach you about Web Audio!</p>
            <p>I noticed that the issue was only on the introductory slide which uses a modified version of Stuart Memo’s <a href="https://blog.stuartmemo.com/thx-deep-note-in-javascript/">fantastic THX sound recreation</a>-the rest of slides did play sound.</p>
            <p>I built <a href="http://sole.github.io/test_cases/web_audio/thx_cutting_out/">an isolated test case</a> <small><a href="https://github.com/sole/test_cases/tree/gh-pages/web_audio/thx_cutting_out">(source)</a></small> that used a parameter-capable version of the THX sound code, just in case the issue depended on the number of oscillators, and submitted this funnily titled bug to the Web Audio component: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1240054">Entirely Web Audio generated sound cuts out after a little while, or emits random tap tap tap sounds then silence</a>.</p>
            <p>I can happily confirm that the bug has been fixed in Nightly and the fix will hopefully be “uplifted” to DevEdition very soon, as it was due to a regression.</p>
            <p><a href="https://paul.cx/">Paul Adenot</a> (who works in Web Audio and is a Web Audio spec editor, amongst a couple tons of other cool things) was really excited about the bug, saying it was very edge-casey! Yay! And he also explained what did actually happen in lay terms: “you’d have to have a frequency that goes down very very slowly so that the FFT code could not keep up”, which is what the THX sound is doing with the filter frequency automation.</p>
            <p>I want to thank both Fritz for spotting this out and letting me know and also Stuart for sharing his THX code. It’s amazing what happens when you put stuff on the net and lots of different people use it in different ways and configurations. Together we make everything more robust <img alt=":-)" class="wp-smiley" src="http://soledadpenades.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em;"/></p>
            <p>Of course also sending thanks to Paul and Ben for identifying and fixing the issue so fast! It’s not been even a week! Woohoo!</p>
            <p>Well done everyone! <img alt="&#x1F44F;" class="wp-smiley" src="http://s.w.org/images/core/emoji/72x72/1f44f.png" style="height: 1em;"/><img alt="&#x1F3FC;" class="wp-smiley" src="http://s.w.org/images/core/emoji/72x72/1f3fc.png" style="height: 1em;"/></p>
            <p><a href="http://soledadpenades.com/?flattrss_redirect&amp;id=6379&amp;md5=57babe624711830f95e4b8fbd6e52c91" target="_blank" title="Flattr"><img alt="flattr this!" src="http://soledadpenades.com/wp-content/plugins/flattr/img/flattr-badge-large.png"/></a></p></div>
        </content>
        <updated>2016-01-21T15:49:05Z</updated>
        <category term="Software"/>
        <category term="bugs"/>
        <category term="firefox"/>
        <category term="javascript"/>
        <category term="mozilla"/>
        <category term="web audio"/>
        <author>
            <name>sole</name>
        </author>
        <source>
            <id>http://soledadpenades.com</id>
            <link href="http://soledadpenades.com/tag/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://soledadpenades.com" rel="alternate" type="text/html"/>
            <subtitle>repeat 4[fd 100 rt 90]</subtitle>
            <title>mozilla – soledad penadés</title>
            <updated>2016-01-26T02:46:28Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://pierros.papadeas.gr/?p=447</id>
        <link href="http://pierros.papadeas.gr/?p=447" rel="alternate" type="text/html"/>
        <title>Mozillians.org Profile Edit refresh</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Since the start of this year, Participation Infrastructure team has a renewed focus on making mozillians.org a modern community directory to meet Mozilla’s growing needs. This will not be an one-time effort. We need to invest technically and programmatically in … <a href="http://pierros.papadeas.gr/?p=447">Continue reading <span class="meta-nav">→</span></a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Since the start of this year, Participation Infrastructure team has a renewed focus on making mozillians.org a modern community directory to meet Mozilla’s growing needs. This will not be an one-time effort. We need to invest technically and programmatically in order to deliver a first-class product that will be the foundation for identity management across the Mozilla ecosystem.</p>
            <p>Mozillians.org is full of functionality as it is today, but is paying the debt of being developed by 5 different teams over the past 5 years. We started simple this time. Updated all core technology pieces, did privacy and security reviews, and started the process of consolidating and modernizing many of the things we do in the site.</p>
            <p>Our first target was Profile Edit. We chose it due to relatively self-contained nature of it, and cause many people were not happy with the current UX. After research of existing tools and applying latest best practices, we designed, coded and deployed a new profile edit interface (which by the way is renamed to Settings now) that we are happy to deliver to all Mozillians.</p>
            <p><a href="http://pierros.papadeas.gr/wp-content/uploads/2016/01/new-profile.png" rel="attachment wp-att-448"><img alt="new-profile" class="aligncenter size-large wp-image-448" height="417" src="http://pierros.papadeas.gr/wp-content/uploads/2016/01/new-profile-1024x731.png" width="584"/></a>Have a<a href="https://mozillians.org/en-US/user/edit/"> look for yourself </a>and don’t miss the chance to update your profile while you do it!</p>
            <p><a href="https://mozillians.org/en-US/u/comzeradd/">Nikos</a> (on the front-end), <a href="https://mozillians.org/en-US/u/akatsoulas/">Tasos</a> and <a href="https://mozillians.org/en-US/u/jgiannelos/">Nemo</a> (on the back-end) worked hard to deliver this in a speedy manner (as they are used to), and the end result is a testament to what is coming next on Mozillians.org.</p>
            <p>Our next target? Groups. Currently it is obscure and unclear what all those settings in groups are, what is the functionality and how teams within Mozilla will be using it. We will be tackling this soon. After that, search and stats will be our attention, in an ongoing effort to fortify mozillians.org functionality. Stay tuned, and as always feel free to <a href="https://bugzilla.mozilla.org/enter_bug.cgi?product=Participation%20Infrastructure&amp;component=Phonebook">file bugs</a> and <a href="https://github.com/mozilla/mozillians">contribute </a>in the process.</p></div>
        </content>
        <updated>2016-01-21T11:41:39Z</updated>
        <category term="Foss Life"/>
        <category term="Software"/>
        <category term="Weblog"/>
        <category term="computer"/>
        <category term="foss"/>
        <category term="mozilla"/>
        <category term="mozillians"/>
        <category term="partinfra"/>
        <author>
            <name>Pierros Papadeas</name>
        </author>
        <source>
            <id>http://pierros.papadeas.gr</id>
            <link href="http://pierros.papadeas.gr/?feed=rss2&amp;tag=mozilla" rel="self" type="application/rss+xml"/>
            <link href="http://pierros.papadeas.gr" rel="alternate" type="text/html"/>
            <subtitle>whereabouts of a life</subtitle>
            <title>mozilla – Pierro's Spot</title>
            <updated>2016-01-21T11:45:53Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://adamlofting.com/?p=1396</id>
        <link href="http://feedproxy.google.com/~r/adamlofting/blog/~3/DoEWpBapwiw/" rel="alternate" type="text/html"/>
        <title>Blog posts I haven’t written lately</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Last year I joked… Thinking about writing a blog post listing the blog posts I’ve been meaning to write… Maybe that will save some time — Adam Lofting (@adamlofting) November 20, 2015 Now, it has come to this. 9 blog posts I’ve not been writing Working on working on the impact of impact Designing Games … <a class="more-link" href="http://adamlofting.com/1396/blog-posts-i-havent-written-lately/">Continue reading <span class="screen-reader-text">Blog posts I haven’t written lately</span></a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Last year I joked…</p>
            <blockquote class="twitter-tweet" lang="en">
                <p dir="ltr" lang="en">Thinking about writing a blog post listing the blog posts I’ve been meaning to write… Maybe that will save some time</p>
                <p>— Adam Lofting (@adamlofting) <a href="https://twitter.com/adamlofting/status/667657889817956352">November 20, 2015</a></p></blockquote>
            <p/>
            <p>Now, it has come to this.</p>
            <h4>9 blog posts I’ve not been writing</h4>
            <ul>
                <li>Working on working on the impact of impact</li>
                <li>Designing Games in <a href="https://en.wikipedia.org/wiki/Amateur" target="_blank">my free time</a></li>
                <li>Moving Out (the board game)</li>
                <li>Mozilla Foundation 2016 KPIs</li>
                <li>Studying Network Science</li>
                <li>Learning Analytics plans for 2016</li>
                <li>Daily practice / you are what you do every day</li>
                <li>Several more A/B tests to write up from <a href="http://fundraising.mozilla.org/">the fundraising campaign</a></li>
                <li>CRM Progress in 2015</li>
            </ul>
            <p>But my most requested blog by far, is an update on the status of my shed / office that I was tagging on to the end my blog posts at this time last year. Many people at Mozfest wanted to know about the shed… so here it is.</p>
            <p>This time last year:</p>
            <blockquote class="twitter-tweet" lang="en"><p>
                Starting in the new office today. It will take time to make it *nice* but it works for now. <a href="http://t.co/sWoC4kFNLc">pic.twitter.com/sWoC4kFNLc</a></p>
                <p>— Adam Lofting (@adamlofting) <a href="https://twitter.com/adamlofting/status/560361913339899904">January 28, 2015</a>
                </p></blockquote>
            <p/>
            <p>Some pictures from this morning:</p>
            <p><img alt="office1" class="alignright size-large wp-image-1398" height="282" src="http://adamlofting.com/wp-content/uploads/2016/01/office1-750x320.jpg" width="660"/></p>
            <p><img alt="office2" class="aligncenter size-large wp-image-1399" height="237" src="http://adamlofting.com/wp-content/uploads/2016/01/office2-750x269.jpg" width="660"/></p>
            <p>It’s a pretty nice place to work now and it doubles as useful workshop on the weekends. It needs a few finishing touches, but the law of diminishing returns means those finishing touches are lower priority than work that needs to be done elsewhere in the house and garden. So it’ll stay like this a while longer.</p>
            <img alt="" height="1" src="http://feeds.feedburner.com/~r/adamlofting/blog/~4/DoEWpBapwiw" width="1"/></div>
        </content>
        <updated>2016-01-21T09:44:24Z</updated>
        <category term="Personal"/>
        <category term="Taking note"/>
        <category term="Work"/>
        <category term="life"/>
        <category term="Mozilla"/>
        <category term="Planning"/>
        <category term="shed"/><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://adamlofting.com/1396/blog-posts-i-havent-written-lately/</feedburner:origLink>
        <author>
            <name>Adam</name>
        </author>
        <source>
            <id>http://adamlofting.com</id>
            <link href="http://adamlofting.com" rel="alternate" type="text/html"/>
            <link href="http://feeds.feedburner.com/adamlofting/blog" rel="self" type="application/rss+xml"/>
            <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
            <subtitle>Thinking out loud about metrics, systems, human experience and the web.</subtitle>
            <title>Adam Lofting</title>
            <updated>2016-01-21T09:46:30Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://blog.ziade.org/2016/01/21/a-pelican-web-editor/</id>
        <link href="http://blog.ziade.org/2016/01/21/a-pelican-web-editor/" rel="alternate" type="text/html"/>
        <title>A Pelican web editor</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The benefit of being a father again (Freya my 3rd child, was born last week) is
            that while on paternity leave &amp; between two baby bottles, I can hack on fun stuff.</p>
            <p>A few months ago, I've built for my running club a Pelican-based website, check it out
                at : <a class="reference external" href="http://acr-dijon.org">http://acr-dijon.org</a>. Nothing's special about it, except that I am not
                the one feeding it. The content is added by people from the club that have zero
                knowledge about softwares, let alone stuff like vim or command line tools.</p>
            <p>I set up a github-based flow for them, where they add content through the
                github UI and its minimal reStructuredText preview feature - and then a few
                of my crons update the website on the server I host.
                For images and other media, they are uploading them via FTP using FireSSH in Firefox.</p>
            <p>For the comments, I've switched from Disqus to <a class="reference external" href="https://posativ.org/isso/">ISSO</a>
                after I got annoyed by the fact that it was impossible to display a simple Disqus
                UI for people to comment without having to log in.</p>
            <p>I had to make my club friends go through a minimal
                reStructuredText syntax training, and things are more of less working now.</p>
            <p>The system has a few caveats though:</p>
            <ul class="simple">
                <li>it's dependent on Github. I'd rather have everything hosted on my server.</li>
                <li>the github restTRucturedText preview will not display syntax errors and warnings
                    and very often, articles get broken</li>
                <li>the resulting reST is ugly, and it's a bit hard to force my editors to be stricter
                    about details like empty lines, not using tabs etc.</li>
                <li>adding folders or organizing articles from Github is a pain</li>
                <li>editing the metadata tags is prone to many mistakes</li>
            </ul>
            <p>So I've decided to build my own web editing tool with the following features:</p>
            <ul class="simple">
                <li>resTructuredText cleanup</li>
                <li>content browsing</li>
                <li>resTructuredText web editor with live preview that shows warnings &amp; errors</li>
                <li>a little bit of wsgi glue and a few forms to create articles without
                    having to worry about metadata syntax.</li>
            </ul>
            <div class="section" id="restructuredtext-cleanup">
                <h3>resTructuredText cleanup</h3>
                <p>The first step was to build a reStructuredText parser that would read some
                    reStructuredText and render it back into a cleaner version.</p>
                <p>We've imported almost 2000 articles in Pelican from the old blog, so I had
                    a <strong>lot</strong> of samples to make my parser work well.</p>
                <p>I first tried <a class="reference external" href="https://github.com/benoitbryon/rst2rst">rst2rst</a> but that
                    parser was built for a very specific use case (text wrapping) and was
                    incomplete. It was not parsing all of the reStructuredText syntax.</p>
                <p>Inspired by it, I wrote my own little parser using <strong>docutils</strong>.</p>
                <p>Understanding docutils is not a small task. This project is very powerfull
                    but quite complex. One thing that cruelly misses in docutils parser tools
                    is the ability to get the source text from any node, including its children,
                    so you can render back the same source.</p>
                <p>That's roughly what I had to add in my code. It's ugly but it does the job:
                    it will parse rst files and render the same content, minus all the extraneous
                    empty lines, spaces, tabs etc.</p>
            </div>
            <div class="section" id="content-browsing">
                <h3>Content browsing</h3>
                <p>Content browsing is pretty straightforward: my admin tool let you browse
                    the Pelican <em>content</em> directory and lists all articles, organized by categories.</p>
                <p>In our case, each category has a top directory in <em>content</em>. The browser
                    parses the articles using my parser and displays paginated lists.</p>
                <p>I had to add a cache system for the parser, because one of the directory
                    contains over 1000 articles -- and browsing was kind of slow :)</p>
                <img alt="http://ziade.org/henet-browsing.png" src="http://ziade.org/henet-browsing.png"/>
            </div>
            <div class="section" id="restructuredtext-web-editor">
                <h3>resTructuredText web editor</h3>
                <p>The last big bit was the live editor. I've stumbled on a neat little tool
                    called <strong>rsted</strong>, that provides a live preview of the reStructuredText
                    as you are typing it. And it includes warnings !</p>
                <p>Check it out: <a class="reference external" href="http://rst.ninjs.org/">http://rst.ninjs.org/</a></p>
                <p>I've stripped it and kept what I needed, and included it in my app.</p>
                <img alt="http://ziade.org/henet.png" src="http://ziade.org/henet.png"/>
                <p>I am quite happy with the result so far. I need to add real tests and
                    a bit of documentation, and I will start to train my club friends on it.</p>
                <p>The next features I'd like to add are:</p>
                <ul class="simple">
                    <li>comments management, to replace Isso (working on it now)</li>
                    <li>smart Pelican builds. e.g. if a comment is added I don't want to rebuild the whole
                        blog (~1500 articles)</li>
                    <li>media management</li>
                    <li>spell checker</li>
                </ul>
                <p>The project lives here: <a class="reference external" href="https://github.com/AcrDijon/henet">https://github.com/AcrDijon/henet</a></p>
                <p>I am not going to release it, but if someone finds it useful, I could.</p>
                <p>It's built with Bottle &amp; Bootstrap as well.</p>
            </div></div>
        </summary>
        <updated>2016-01-21T09:40:00Z</updated>
        <category term="python"/>
        <category term="mozilla"/>
        <author>
            <name>Tarek Ziade</name>
        </author>
        <source>
            <id>http://blog.ziade.org</id>
            <link href="http://blog.ziade.org" rel="alternate" type="text/html"/>
            <link href="http://blog.ziade.org/tag/mozilla/feed" rel="self" type="application/rss+xml"/>
            <subtitle>Tarek Ziadé</subtitle>
            <title>Fetchez le Python</title>
            <updated>2016-01-24T20:45:46Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://www.ncameron.org/blog/rss/631106eb-e7b1-47d5-82f9-cb6ad210ea89</id>
        <link href="http://www.ncameron.org/blog/closures-and-first-class-functions/" rel="alternate" type="text/html"/>
        <title>Closures and first-class functions</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I wrote a long and probably dull chapter on closures and first-class and higher-order functions in Rust. It goes into some detail on the implementation and some of the subtleties like higher-ranked lifetime bounds.</p>

            <p>I was going to post it here too, but it is really too long. Instead, pop</p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I wrote a long and probably dull chapter on closures and first-class and higher-order functions in Rust. It goes into some detail on the implementation and some of the subtleties like higher-ranked lifetime bounds.</p>

            <p>I was going to post it here too, but it is really too long. Instead, pop over to the 'Rust for C++ programmers' repo and read it <a href="https://github.com/nrc/r4cppp/blob/master/closures.md">there</a>.</p></div>
        </content>
        <updated>2016-01-21T08:36:21Z</updated>
        <category term="Mozilla"/>
        <category term="Rust"/>
        <category term="rust-for-c"/>
        <author>
            <name>Nick Cameron</name>
        </author>
        <source>
            <id>http://www.ncameron.org/blog/</id>
            <link href="http://www.ncameron.org/blog/" rel="alternate" type="text/html"/>
            <link href="http://www.ncameron.org/blog/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>I'm a research engineer at Mozilla working on Rust: the language, compiler, and tools.  @nick_r_cameron</subtitle>
            <title>featherweight musings</title>
            <updated>2016-01-21T08:46:17Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://nickdesaulniers.github.io/blog/2016/01/20/debugging-x86-64-assembly-with-lldb-and-dtrace</id>
        <link href="http://nickdesaulniers.github.io/blog/2016/01/20/debugging-x86-64-assembly-with-lldb-and-dtrace/" rel="alternate" type="text/html"/>
        <title>Intro to Debugging x86-64 Assembly</title>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I’m hacking on an assembly project, and wanted to document some of the tricks I
            was using for figuring out what was going on.  This post might seem a little
            basic for folks who spend all day heads down in gdb or who do this stuff
            professionally, but I just wanted to share a quick intro to some tools that
            others may find useful.
            (<a href="https://pchiusano.github.io/2014-10-11/defensive-writing.html">oh god, I’m doing it</a>)</p>

            <p>If your coming from gdb to lldb, there’s a few differences in commands.  LLDB
                has
                <a href="http://lldb.llvm.org/lldb-gdb.html">great documentation</a>
                on some of the differences. Everything in this post about LLDB is pretty much
                there.</p>

            <p>The bread and butter commands when working with gdb or lldb are:</p>

            <ul>
                <li>r (run the program)</li>
                <li>s (step in)</li>
                <li>n (step over)</li>
                <li>finish (step out)</li>
                <li>c (continue)</li>
                <li>q (quit the program)</li>
            </ul>


            <p>You can hit enter if you want to run the last command again, which is really
                useful if you want to keep stepping over statements repeatedly.</p>

            <p>I’ve been using LLDB on OSX.  Let’s say I want to debug a program I can build,
                but is crashing or something:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>sudo lldb ./asmttpd web_root
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>Setting a breakpoint on jump to label:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> b sys_write
            </span><span class="line">Breakpoint 3: <span class="nv">where</span> <span class="o">=</span> asmttpd<span class="sb">`</span>sys_write, <span class="nv">address</span> <span class="o">=</span> 0x00000000000029ae
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>Running the program until breakpoint hit:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
                <span class="line-number">8</span>
                <span class="line-number">9</span>
                <span class="line-number">10</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> r
            </span><span class="line">Process 32236 launched: <span class="s1">'./asmttpd'</span> <span class="o">(</span>x86_64<span class="o">)</span>
            </span><span class="line">Process 32236 stopped
            </span><span class="line">* thread <span class="c">#1: tid = 0xe69b9, 0x00000000000029ae asmttpd`sys_write, queue = 'com.apple.main-thread', stop reason = breakpoint 3.1</span>
            </span><span class="line">    frame <span class="c">#0: 0x00000000000029ae asmttpd`sys_write</span>
            </span><span class="line">asmttpd<span class="sb">`</span>sys_write:
            </span><span class="line">-&gt;  0x29ae &lt;+0&gt;: pushq  %rdi
            </span><span class="line">    0x29af &lt;+1&gt;: pushq  %rsi
            </span><span class="line">    0x29b0 &lt;+2&gt;: pushq  %rdx
            </span><span class="line">    0x29b1 &lt;+3&gt;: pushq  %r10
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>Seeing more of the current stack frame:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
                <span class="line-number">8</span>
                <span class="line-number">9</span>
                <span class="line-number">10</span>
                <span class="line-number">11</span>
                <span class="line-number">12</span>
                <span class="line-number">13</span>
                <span class="line-number">14</span>
                <span class="line-number">15</span>
                <span class="line-number">16</span>
                <span class="line-number">17</span>
                <span class="line-number">18</span>
                <span class="line-number">19</span>
                <span class="line-number">20</span>
                <span class="line-number">21</span>
                <span class="line-number">22</span>
                <span class="line-number">23</span>
                <span class="line-number">24</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> d
            </span><span class="line">asmttpd<span class="sb">`</span>sys_write:
            </span><span class="line">-&gt;  0x29ae &lt;+0&gt;:  pushq  %rdi
            </span><span class="line">    0x29af &lt;+1&gt;:  pushq  %rsi
            </span><span class="line">    0x29b0 &lt;+2&gt;:  pushq  %rdx
            </span><span class="line">    0x29b1 &lt;+3&gt;:  pushq  %r10
            </span><span class="line">    0x29b3 &lt;+5&gt;:  pushq  %r8
            </span><span class="line">    0x29b5 &lt;+7&gt;:  pushq  %r9
            </span><span class="line">    0x29b7 &lt;+9&gt;:  pushq  %rbx
            </span><span class="line">    0x29b8 &lt;+10&gt;: pushq  %rcx
            </span><span class="line">    0x29b9 &lt;+11&gt;: movq   %rsi, %rdx
            </span><span class="line">    0x29bc &lt;+14&gt;: movq   %rdi, %rsi
            </span><span class="line">    0x29bf &lt;+17&gt;: movq   <span class="nv">$0x1</span>, %rdi
            </span><span class="line">    0x29c6 &lt;+24&gt;: movq   <span class="nv">$0x2000004</span>, %rax
            </span><span class="line">    0x29cd &lt;+31&gt;: syscall
            </span><span class="line">    0x29cf &lt;+33&gt;: popq   %rcx
            </span><span class="line">    0x29d0 &lt;+34&gt;: popq   %rbx
            </span><span class="line">    0x29d1 &lt;+35&gt;: popq   %r9
            </span><span class="line">    0x29d3 &lt;+37&gt;: popq   %r8
            </span><span class="line">    0x29 &lt;+39&gt;: popq   %r10
            </span><span class="line">    0x29d7 &lt;+41&gt;: popq   %rdx
            </span><span class="line">    0x29d8 &lt;+42&gt;: popq   %rsi
            </span><span class="line">    0x29d9 &lt;+43&gt;: popq   %rdi
            </span><span class="line">    0x29da &lt;+44&gt;: retq
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>Getting a back trace (call stack):</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> bt
            </span><span class="line">* thread <span class="c">#1: tid = 0xe69b9, 0x00000000000029ae asmttpd`sys_write, queue = 'com.apple.main-thread', stop reason = breakpoint 3.1</span>
            </span><span class="line">  * frame <span class="c">#0: 0x00000000000029ae asmttpd`sys_write</span>
            </span><span class="line">    frame <span class="c">#1: 0x00000000000021b6 asmttpd`print_line + 16</span>
            </span><span class="line">    frame <span class="c">#2: 0x0000000000002ab3 asmttpd`start + 35</span>
            </span><span class="line">    frame <span class="c">#3: 0x00007fff9900c5ad libdyld.dylib`start + 1</span>
            </span><span class="line">    frame <span class="c">#4: 0x00007fff9900c5ad libdyld.dylib`start + 1</span>
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>peeking at the upper stack frame:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> up
            </span><span class="line">frame <span class="c">#1: 0x00000000000021b6 asmttpd`print_line + 16</span>
            </span><span class="line">asmttpd<span class="sb">`</span>print_line:
            </span><span class="line">    0x21b6 &lt;+16&gt;: movabsq <span class="nv">$0x30cb</span>, %rdi
            </span><span class="line">    0x21c0 &lt;+26&gt;: movq   <span class="nv">$0x1</span>, %rsi
            </span><span class="line">    0x21c7 &lt;+33&gt;: callq  0x29ae                    ; sys_write
            </span><span class="line">    0x21cc &lt;+38&gt;: popq   %rcx
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>back down to the breakpoint-halted stack frame:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> down
            </span><span class="line">frame <span class="c">#0: 0x00000000000029ae asmttpd`sys_write</span>
            </span><span class="line">asmttpd<span class="sb">`</span>sys_write:
            </span><span class="line">-&gt;  0x29ae &lt;+0&gt;: pushq  %rdi
            </span><span class="line">    0x29af &lt;+1&gt;: pushq  %rsi
            </span><span class="line">    0x29b0 &lt;+2&gt;: pushq  %rdx
            </span><span class="line">    0x29b1 &lt;+3&gt;: pushq  %r10
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>dumping the values of registers:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
                <span class="line-number">8</span>
                <span class="line-number">9</span>
                <span class="line-number">10</span>
                <span class="line-number">11</span>
                <span class="line-number">12</span>
                <span class="line-number">13</span>
                <span class="line-number">14</span>
                <span class="line-number">15</span>
                <span class="line-number">16</span>
                <span class="line-number">17</span>
                <span class="line-number">18</span>
                <span class="line-number">19</span>
                <span class="line-number">20</span>
                <span class="line-number">21</span>
                <span class="line-number">22</span>
                <span class="line-number">23</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> register <span class="nb">read</span>
            </span><span class="line">General Purpose Registers:
            </span><span class="line">       <span class="nv">rax</span> <span class="o">=</span> 0x0000000000002a90  asmttpd<span class="sb">`</span>start
            </span><span class="line">       <span class="nv">rbx</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">       <span class="nv">rcx</span> <span class="o">=</span> 0x00007fff5fbffaf8
            </span><span class="line">       <span class="nv">rdx</span> <span class="o">=</span> 0x00007fff5fbffa40
            </span><span class="line">       <span class="nv">rdi</span> <span class="o">=</span> 0x00000000000030cc  start_text
            </span><span class="line">       <span class="nv">rsi</span> <span class="o">=</span> 0x000000000000000f
            </span><span class="line">       <span class="nv">rbp</span> <span class="o">=</span> 0x00007fff5fbffa18
            </span><span class="line">       <span class="nv">rsp</span> <span class="o">=</span> 0x00007fff5fbff9b8
            </span><span class="line">        <span class="nv">r8</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">        <span class="nv">r9</span> <span class="o">=</span> 0x00007fff7b1670c8  atexit_mutex + 24
            </span><span class="line">       <span class="nv">r10</span> <span class="o">=</span> 0x00000000ffffffff
            </span><span class="line">       <span class="nv">r11</span> <span class="o">=</span> 0xffffffff00000000
            </span><span class="line">       <span class="nv">r12</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">       <span class="nv">r13</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">       <span class="nv">r14</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">       <span class="nv">r15</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">       <span class="nv">rip</span> <span class="o">=</span> 0x00000000000029ae  asmttpd<span class="sb">`</span>sys_write
            </span><span class="line">    <span class="nv">rflags</span> <span class="o">=</span> 0x0000000000000246
            </span><span class="line">        <span class="nv">cs</span> <span class="o">=</span> 0x000000000000002b
            </span><span class="line">        <span class="nv">fs</span> <span class="o">=</span> 0x0000000000000000
            </span><span class="line">        <span class="nv">gs</span> <span class="o">=</span> 0x0000000000000000
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>read just one register:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>lldb<span class="o">)</span> register <span class="nb">read </span>rdi
            </span><span class="line">     <span class="nv">rdi</span> <span class="o">=</span> 0x00000000000030cc  start_text
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>When you’re trying to figure out what system calls are made by some C code,
                using dtruss is very helpful.  dtruss is available on OSX and seems to be some
                kind of wrapper around DTrace.</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
                <span class="line-number">8</span>
                <span class="line-number">9</span>
                <span class="line-number">10</span>
                <span class="line-number">11</span>
                <span class="line-number">12</span>
                <span class="line-number">13</span>
                <span class="line-number">14</span>
                <span class="line-number">15</span>
                <span class="line-number">16</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>cat sleep.c
            </span><span class="line"><span class="c">#include &lt;time.h&gt;</span>
            </span><span class="line">int main <span class="o">()</span> <span class="o">{</span>
            </span><span class="line">  struct timespec <span class="nv">rqtp</span> <span class="o">=</span> <span class="o">{</span>
            </span><span class="line">    2,
            </span><span class="line">    0
            </span><span class="line">  <span class="o">}</span>;
            </span><span class="line">
            </span><span class="line">  nanosleep<span class="o">(</span>&amp;rqtp, NULL<span class="o">)</span>;
            </span><span class="line"><span class="o">}</span>
            </span><span class="line">
            </span><span class="line"><span class="nv">$ </span>clang sleep.c
            </span><span class="line">
            </span><span class="line"><span class="nv">$ </span>sudo dtruss ./a.out
            </span><span class="line">...all kinds of fun stuff
            </span><span class="line">__semwait_signal<span class="o">(</span>0xB03, 0x0, 0x1<span class="o">)</span>    <span class="o">=</span> -1 Err#60
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>If you compile with <code>-g</code> to emit debug symbols, you can use lldb’s disassemble
                command to get the equivalent assembly:</p>

            <figure class="code"><span/><div class="highlight"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
                <span class="line-number">2</span>
                <span class="line-number">3</span>
                <span class="line-number">4</span>
                <span class="line-number">5</span>
                <span class="line-number">6</span>
                <span class="line-number">7</span>
                <span class="line-number">8</span>
                <span class="line-number">9</span>
                <span class="line-number">10</span>
                <span class="line-number">11</span>
                <span class="line-number">12</span>
                <span class="line-number">13</span>
                <span class="line-number">14</span>
                <span class="line-number">15</span>
                <span class="line-number">16</span>
                <span class="line-number">17</span>
                <span class="line-number">18</span>
                <span class="line-number">19</span>
                <span class="line-number">20</span>
                <span class="line-number">21</span>
                <span class="line-number">22</span>
                <span class="line-number">23</span>
                <span class="line-number">24</span>
                <span class="line-number">25</span>
                <span class="line-number">26</span>
                <span class="line-number">27</span>
                <span class="line-number">28</span>
                <span class="line-number">29</span>
                <span class="line-number">30</span>
                <span class="line-number">31</span>
                <span class="line-number">32</span>
                <span class="line-number">33</span>
                <span class="line-number">34</span>
                <span class="line-number">35</span>
                <span class="line-number">36</span>
                <span class="line-number">37</span>
            </pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>clang sleep.c -g
            </span><span class="line"><span class="nv">$ </span>lldb a.out
            </span><span class="line"><span class="o">(</span>lldb<span class="o">)</span> target create <span class="s2">"a.out"</span>
            </span><span class="line">Current executable <span class="nb">set </span>to <span class="s1">'a.out'</span> <span class="o">(</span>x86_64<span class="o">)</span>.
            </span><span class="line"><span class="o">(</span>lldb<span class="o">)</span> b main
            </span><span class="line">Breakpoint 1: <span class="nv">where</span> <span class="o">=</span> a.out<span class="sb">`</span>main + 16 at sleep.c:3, <span class="nv">address</span> <span class="o">=</span> 0x0000000100000f40
            </span><span class="line"><span class="o">(</span>lldb<span class="o">)</span> r
            </span><span class="line">Process 33213 launched: <span class="s1">'/Users/Nicholas/code/assembly/asmttpd/a.out'</span> <span class="o">(</span>x86_64<span class="o">)</span>
            </span><span class="line">Process 33213 stopped
            </span><span class="line">* thread <span class="c">#1: tid = 0xeca04, 0x0000000100000f40 a.out`main + 16 at sleep.c:3, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1</span>
            </span><span class="line">    frame <span class="c">#0: 0x0000000100000f40 a.out`main + 16 at sleep.c:3</span>
            </span><span class="line">   1    <span class="c">#include &lt;time.h&gt;</span>
            </span><span class="line">   2    int main <span class="o">()</span> <span class="o">{</span>
            </span><span class="line">-&gt; 3      struct timespec <span class="nv">rqtp</span> <span class="o">=</span> <span class="o">{</span>
            </span><span class="line">   4        2,
            </span><span class="line">   5        0
            </span><span class="line">   6      <span class="o">}</span>;
            </span><span class="line">   7
            </span><span class="line"><span class="o">(</span>lldb<span class="o">)</span> disassemble
            </span><span class="line">a.out<span class="sb">`</span>main:
            </span><span class="line">    0x100000f30 &lt;+0&gt;:  pushq  %rbp
            </span><span class="line">    0x100000f31 &lt;+1&gt;:  movq   %rsp, %rbp
            </span><span class="line">    0x100000f34 &lt;+4&gt;:  subq   <span class="nv">$0x20</span>, %rsp
            </span><span class="line">    0x100000f38 &lt;+8&gt;:  leaq   -0x10<span class="o">(</span>%rbp<span class="o">)</span>, %rdi
            </span><span class="line">    0x100000f3c &lt;+12&gt;: xorl   %eax, %eax
            </span><span class="line">    0x100000f3e &lt;+14&gt;: movl   %eax, %esi
            </span><span class="line">-&gt;  0x100000f40 &lt;+16&gt;: movq   0x49<span class="o">(</span>%rip<span class="o">)</span>, %rcx
            </span><span class="line">    0x100000f47 &lt;+23&gt;: movq   %rcx, -0x10<span class="o">(</span>%rbp<span class="o">)</span>
            </span><span class="line">    0x100000f4b &lt;+27&gt;: movq   0x46<span class="o">(</span>%rip<span class="o">)</span>, %rcx
            </span><span class="line">    0x100000f52 &lt;+34&gt;: movq   %rcx, -0x8<span class="o">(</span>%rbp<span class="o">)</span>
            </span><span class="line">    0x100000f56 &lt;+38&gt;: callq  0x100000f68               ; symbol stub <span class="k">for</span>: nanosleep
            </span><span class="line">    0x100000f5b &lt;+43&gt;: xorl   %edx, %edx
            </span><span class="line">    0x100000f5d &lt;+45&gt;: movl   %eax, -0x14<span class="o">(</span>%rbp<span class="o">)</span>
            </span><span class="line">    0x100000f60 &lt;+48&gt;: movl   %edx, %eax
            </span><span class="line">    0x100000f62 &lt;+50&gt;: addq   <span class="nv">$0x20</span>, %rsp
            </span><span class="line">    0x100000f66 &lt;+54&gt;: popq   %rbp
            </span><span class="line">    0x100000f67 &lt;+55&gt;: retq
            </span></code></pre></td></tr></tbody></table></div></figure>


            <p>Anyways, I’ve been learning some interesting things about OSX that I’ll be
                sharing soon. If you’d like to learn more about x86-64 assembly programming,
                you should read my other posts about
                <a href="http://nickdesaulniers.github.io/blog/2014/04/18/lets-write-some-x86-64/">writing x86-64</a>
                and a toy
                <a href="http://nickdesaulniers.github.io/blog/2015/05/25/interpreter-compiler-jit/">JIT for Brainfuck</a>
                (<a href="https://www.reddit.com/r/programming/comments/377ov9/interpreter_compiler_jit/crkkrz4">the creator of Brainfuck liked it</a>).</p>

            <p>I should also do a post on
                <a href="http://rr-project.org/">Mozilla’s rr</a>,
                because it can do amazing things like step backwards.  Another day…</p></div>
        </content>
        <updated>2016-01-21T04:04:00Z</updated>
        <source>
            <id>http://nickdesaulniers.github.io/</id>
            <author>
                <name>Nick Desaulniers</name>
            </author>
            <link href="http://nickdesaulniers.github.io/atom.xml" rel="self" type="application/atom+xml"/>
            <link href="http://nickdesaulniers.github.io/" rel="alternate" type="text/html"/>
            <title>Nick Desaulniers</title>
            <updated>2016-01-21T05:07:32Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>https://rail.merail.ca/posts/rebooting-productivity.html</id>
        <link href="https://rail.merail.ca/posts/rebooting-productivity.html" rel="alternate" type="text/html"/>
        <title>Rebooting productivity</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div><p>Every new year gives you an opportunity to sit back, relax,
            <span class="strike">have some scotch</span> and re-think the passed year. Holidays give
            you enough free time. Even if you decide to not take a vacation around
            the holidays, it's usually calm and peaceful.</p>
            <p>This time, I found myself thinking mostly about productivity, being
                effective, feeling busy, overwhelmed with work and other related topics.</p>
            <p>When I started at Mozilla (almost 6 years ago!), I tried to apply all my
                GTD and time management knowledge and techniques. Working remotely and
                in a different time zone was an advantage - I had close to zero
                interruptions. It worked perfect.</p>
            <p>Last year I realized that my productivity skills had faded away somehow.
                40h+ workweeks, working on weekends, delivering goals in the last week
                of quarter don't sound like good signs. Instead of being productive I
                felt busy.</p>
            <p>"Every crisis is an opportunity". Time to make a step back and reboot
                myself. Burning out at work is not a good idea. :)</p>
            <p>Here are some ideas/tips that I wrote down for myself you may found
                useful.</p>
            <div class="section" id="health-related">
                <h3>Health related</h3>
                <ul class="simple">
                    <li>Morning exercises. A 20-minute walk will wake your brain up and
                        generate enough endorphins for the first half of the day.</li>
                    <li>Meditation. 2x20min a day is ideal; 2x10min would work too. Something
                        like <a class="reference external" href="http://www.calm.com/">calm.com</a> makes this a peace of cake.</li>
                </ul>
            </div>
            <div class="section" id="concentration">
                <h3>Concentration</h3>
                <ul class="simple">
                    <li>Task #1: make a daily plan. No plan - no work.</li>
                    <li>Don't start your day by reading emails. Get one (little) thing done
                        first - THEN check your email.</li>
                    <li>Try to define outcomes, not tasks. "Ship XYZ" instead of "Work on XYZ".</li>
                    <li>Meetings are time consuming, so "Set a goal for each meeting".
                        Consider skipping a meeting if you don't have any goal set, unless it's a
                        beer-and-tell meeting! :)</li>
                    <li>Constantly ask yourself if what you're working on is important.</li>
                    <li>3-4 times a day ask yourself whether you are doing something towards
                        your goal or just finding something else to keep you busy. If you want
                        to look busy, take your phone and walk around the office with some
                        papers in your hand. Everybody will think that you are a busy person!
                        This way you can take a break and look busy at the same time!</li>
                    <li>Take breaks! <a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Pomodoro technique</a> has this option
                        built-in. Taking breaks helps not only to avoid <a class="reference external" href="https://en.wikipedia.org/wiki/Repetitive_strain_injury">RSI</a>, but also
                        keeps your brain sane and gives you time to ask yourself the questions
                        mentioned above. I use <a class="reference external" href="http://www.workrave.org/">Workrave</a> on my
                        laptop, but you can use a real kitchen timer instead.</li>
                    <li>Wear headphones, especially at office. Noise cancelling ones are even
                        better. White noise, nature sounds, or instrumental music are your
                        friends.</li>
                </ul>
            </div>
            <div class="section" id="home-office">
                <h3>(Home) Office</h3>
                <ul class="simple">
                    <li>Make sure you enjoy your work environment. Why on the earth would you
                        spend your valuable time working without joy?!</li>
                    <li>De-clutter and organize your desk. Less things around - less
                        distractions.</li>
                    <li>Desk, chair, monitor, keyboard, mouse, etc - don't cheap out on them.
                        Your health is more important and expensive.  Thanks to <a class="reference external" href="https://twitter.com/mhoye">mhoye</a> for this advice!</li>
                </ul>
            </div>
            <div class="section" id="other">
                <h3>Other</h3>
                <ul class="simple">
                    <li>Don't check email every 30 seconds. If there is an emergency, they
                        will call you! :)</li>
                    <li>Reward yourself at a certain time. "I'm going to have a chocolate at
                        11am", or "MFBT at 4pm sharp!" are good examples. Don't forget, you
                        are <a class="reference external" href="https://en.wikipedia.org/wiki/Classical_conditioning">Pavlov's dog</a> too!</li>
                    <li>Don't try to read everything NOW. Save it for later and read in a
                        batch.</li>
                    <li>Capture all creative ideas. You can delete them later. ;)</li>
                    <li>Prepare for next task before break. Make sure you know what's next, so
                        you can think about it during the break.</li>
                </ul>
                <p>This is my list of things that I try to use everyday. Looking forward to
                    see improvements!</p>
                <p>I would appreciate your thoughts this topic. Feel free to comment or
                    send a private email.</p>
                <p>Happy Productive New Year!</p>
            </div></div></div>
        </summary>
        <updated>2016-01-21T02:06:37Z</updated>
        <category term="mozilla"/>
        <category term="productivity"/>
        <author>
            <name>Rail Aliiev</name>
        </author>
        <source>
            <id>https://rail.merail.ca/</id>
            <link href="https://rail.merail.ca/" rel="alternate" type="text/html"/>
            <link href="https://rail.merail.ca/categories/mozilla.xml" rel="self" type="application/rss+xml"/>
            <title>Rail's Blog (mozilla)</title>
            <updated>2016-01-21T02:31:38Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://blog.rust-lang.org/2016/01/21/Rust-1.6.html</id>
        <link href="http://blog.rust-lang.org/2016/01/21/Rust-1.6.html" rel="alternate" type="text/html"/>
        <title>Announcing Rust 1.6</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello 2016! We’re happy to announce the first Rust release of the year, 1.6.
            Rust is a systems programming language focused on safety, speed, and
            concurrency.</p>

            <p>As always, you can <a href="http://www.rust-lang.org/install.html">install Rust 1.6</a> from the appropriate page on our
                website, and check out the <a href="https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-160-2016-01-21">detailed release notes for 1.6</a> on GitHub.
                About 1100 patches were landed in this release.</p>

            <h3 id="what-39-s-in-1-6-stable">What’s in 1.6 stable</h3>

            <p>This release contains a number of small refinements, one major feature, and
                a change to <a href="https://crates.io">Crates.io</a>.</p>

            <h4 id="libcore-stabilization">libcore stabilization</h4>

            <p>The largest new feature in 1.6 is that <a href="http://doc.rust-lang.org/nightly/core/"><code>libcore</code></a> is now stable! Rust’s
                standard library is two-tiered: there’s a small core library, <code>libcore</code>, and
                the full standard library, <code>libstd</code>, that builds on top of it. <code>libcore</code> is
                completely platform agnostic, and requires only a handful of external symbols
                to be defined. Rust’s <code>libstd</code> builds on top of <code>libcore</code>, adding support for
                memory allocation, I/O, and concurrency. Applications using Rust in the
                embedded space, as well as those writing operating systems, often eschew
                <code>libstd</code>, using only <code>libcore</code>.</p>

            <p><code>libcore</code> being stabilized is a major step towards being able to write the
                lowest levels of software using stable Rust. There’s still future work to be
                done, however. This will allow for a library ecosystem to develop around
                <code>libcore</code>, but <em>applications</em> are not fully supported yet. Expect to hear more
                about this in future release notes.</p>

            <h4 id="library-stabilizations">Library stabilizations</h4>

            <p>About 30 library functions and methods are now stable in 1.6. Notable
                improvements include:</p>

            <p>The <code>drain()</code> family of functions on collections. These methods let you move
                elements out of a collection while allowing them to retain their backing
                memory, reducing allocation in certain situations.</p>

            <p>A number of implementations of <code>From</code> for converting between standard library
                types, mainly between various integral and floating-point types.</p>

            <p>Finally, <code>Vec::extend_from_slice()</code>, which was previously known as
                <code>push_all()</code>. This method has a significantly faster implementation than the
                more general <code>extend()</code>.</p>

            <p>See the <a href="https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-160-2016-01-21">detailed release notes</a> for more.</p>

            <h4 id="crates-io-disallows-wildcards">Crates.io disallows wildcards</h4>

            <p>If you maintain a crate on <a href="https://crates.io">Crates.io</a>, you might have seen
                a warning: newly uploaded crates are no longer allowed to use a wildcard when
                describing their dependencies. In other words, this is not allowed:</p>
            <div class="highlight"><pre><code class="language-toml"><span class="p">[</span><span class="n">dependencies</span><span class="p">]</span>
                <span class="n">regex</span> <span class="o">=</span> <span class="s">"*"</span>
            </code></pre></div>
            <p>Instead, you must actually specify <a href="http://doc.crates.io/crates-io.html#using-cratesio-based-crates">a specific version or range of
                versions</a>, using one of the <code>semver</code> crate’s various options: <code>^</code>,
                <code>~</code>, or <code>=</code>.</p>

            <p>A wildcard dependency means that you work with any possible version of your
                dependency. This is highly unlikely to be true, and causes unnecessary breakage
                in the ecosystem. We’ve been advertising this change as a warning for some time;
                now it’s time to turn it into an error.</p>

            <h3 id="contributors-to-1-6">Contributors to 1.6</h3>

            <p>We had 132 individuals contribute to 1.6. Thank you so much!</p>

            <ul>
                <li>Aaron Turon</li>
                <li>Adam Badawy</li>
                <li>Aleksey Kladov</li>
                <li>Alexander Bulaev</li>
                <li>Alex Burka</li>
                <li>Alex Crichton</li>
                <li>Alex Gaynor</li>
                <li>Alexis Beingessner</li>
                <li>Amanieu d'Antras</li>
                <li>Amit Saha</li>
                <li>Andrea Canciani</li>
                <li>Andrew Paseltiner</li>
                <li>androm3da</li>
                <li>angelsl</li>
                <li>Angus Lees</li>
                <li>Antti Keränen</li>
                <li>arcnmx</li>
                <li>Ariel Ben-Yehuda</li>
                <li>Ashkan Kiani</li>
                <li>Barosl Lee</li>
                <li>Benjamin Herr</li>
                <li>Ben Striegel</li>
                <li>Bhargav Patel</li>
                <li>Björn Steinbrink</li>
                <li>Boris Egorov</li>
                <li>bors</li>
                <li>Brian Anderson</li>
                <li>Bruno Tavares</li>
                <li>Bryce Van Dyk</li>
                <li>Cameron Sun</li>
                <li>Christopher Sumnicht</li>
                <li>Cole Reynolds</li>
                <li>corentih</li>
                <li>Daniel Campbell</li>
                <li>Daniel Keep</li>
                <li>Daniel Rollins</li>
                <li>Daniel Trebbien</li>
                <li>Danilo Bargen</li>
                <li>Devon Hollowood</li>
                <li>Doug Goldstein</li>
                <li>Dylan McKay</li>
                <li>ebadf</li>
                <li>Eli Friedman</li>
                <li>Eric Findlay</li>
                <li>Erik Davidson</li>
                <li>Felix S. Klock II</li>
                <li>Florian Hahn</li>
                <li>Florian Hartwig</li>
                <li>Gleb Kozyrev</li>
                <li>Guillaume Gomez</li>
                <li>Huon Wilson</li>
                <li>Igor Shuvalov</li>
                <li>Ivan Ivaschenko</li>
                <li>Ivan Kozik</li>
                <li>Ivan Stankovic</li>
                <li>Jack Fransham</li>
                <li>Jake Goulding</li>
                <li>Jake Worth</li>
                <li>James Miller</li>
                <li>Jan Likar</li>
                <li>Jean Maillard</li>
                <li>Jeffrey Seyfried</li>
                <li>Jethro Beekman</li>
                <li>John Kåre Alsaker</li>
                <li>John Talling</li>
                <li>Jonas Schievink</li>
                <li>Jonathan S</li>
                <li>Jose Narvaez</li>
                <li>Josh Austin</li>
                <li>Josh Stone</li>
                <li>Joshua Holmer</li>
                <li>JP Sugarbroad</li>
                <li>jrburke</li>
                <li>Kevin Butler</li>
                <li>Kevin Yeh</li>
                <li>Kohei Hasegawa</li>
                <li>Kyle Mayes</li>
                <li>Lee Jeffery</li>
                <li>Manish Goregaokar</li>
                <li>Marcell Pardavi</li>
                <li>Markus Unterwaditzer</li>
                <li>Martin Pool</li>
                <li>Marvin Löbel</li>
                <li>Matt Brubeck</li>
                <li>Matthias Bussonnier</li>
                <li>Matthias Kauer</li>
                <li>mdinger</li>
                <li>Michael Layzell</li>
                <li>Michael Neumann</li>
                <li>Michael Sproul</li>
                <li>Michael Woerister</li>
                <li>Mihaly Barasz</li>
                <li>Mika Attila</li>
                <li>mitaa</li>
                <li>Ms2ger</li>
                <li>Nicholas Mazzuca</li>
                <li>Nick Cameron</li>
                <li>Niko Matsakis</li>
                <li>Ole Krüger</li>
                <li>Oliver Middleton</li>
                <li>Oliver Schneider</li>
                <li>Ori Avtalion</li>
                <li>Paul A. Jungwirth</li>
                <li>Peter Atashian</li>
                <li>Philipp Matthias Schäfer</li>
                <li>pierzchalski</li>
                <li>Ravi Shankar</li>
                <li>Ricardo Martins</li>
                <li>Ricardo Signes</li>
                <li>Richard Diamond</li>
                <li>Rizky Luthfianto</li>
                <li>Ryan Scheel</li>
                <li>Scott Olson</li>
                <li>Sean Griffin</li>
                <li>Sebastian Hahn</li>
                <li>Sébastien Marie</li>
                <li>Seo Sanghyeon</li>
                <li>Simonas Kazlauskas</li>
                <li>Simon Sapin</li>
                <li>Stepan Koltsov</li>
                <li>Steve Klabnik</li>
                <li>Steven Fackler</li>
                <li>Tamir Duberstein</li>
                <li>Tobias Bucher</li>
                <li>Toby Scrace</li>
                <li>Tshepang Lekhonkhobe</li>
                <li>Ulrik Sverdrup</li>
                <li>Vadim Chugunov</li>
                <li>Vadim Petrochenkov</li>
                <li>William Throwe</li>
                <li>xd1le</li>
                <li>Xmasreturns</li>
            </ul></div>
        </summary>
        <updated>2016-01-21T00:00:00Z</updated>
        <source>
            <id>http://blog.rust-lang.org/</id>
            <author>
                <name>The Rust Programming Language Blog</name>
            </author>
            <link href="http://blog.rust-lang.org/" rel="alternate" type="text/html"/>
            <link href="http://blog.rust-lang.org/feed.xml" rel="self" type="application/rss+xml"/>
            <subtitle>Words from the Rust team</subtitle>
            <title>The Rust Programming Language Blog</title>
            <updated>2016-01-21T21:36:56Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/addons/?p=7644</id>
        <link href="https://blog.mozilla.org/addons/2016/01/20/archiving-amo-stats/" rel="alternate" type="text/html"/>
        <title>Archiving AMO Stats</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">One of the advantages of listing an add-on or theme on addons.mozilla.org (AMO) is that you’ll get statistics on your add-on’s usage. These stats, which are covered by the Mozilla privacy policy, provide add-on developers with information such as the … <a class="go" href="https://blog.mozilla.org/addons/2016/01/20/archiving-amo-stats/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of the advantages of listing an add-on or theme on <a href="https://addons.mozilla.org" target="_blank">addons.mozilla.org</a> (AMO) is that you’ll get statistics on your add-on’s usage. These stats, which are covered by the <a href="https://www.mozilla.org/privacy/" target="_blank">Mozilla privacy policy</a>, provide add-on developers with information such as the number of downloads and daily users, among other insights.</p>
            <p>Currently, the data that generates these statistics can go back as far as 2007, as we haven’t had an archiving policy. As a result, statistics take up the vast majority of disk space in our database and require a significant amount of processing and operations time. Statistics over a year old are very rarely accessed, and the value of their generation is very low, while the costs are increasing.</p>
            <p>To reduce our operating and development costs, and increase the site’s reliability for developers, we are introducing an archiving policy.</p>
            <p>In the coming weeks, statistics data <strong>over one year old</strong> will no longer be stored in the AMO database, and reports generated from them will no longer be accessible through AMO’s add-on statistics pages. Instead, the data will be archived and maintained as plain text files, which developers can download. We will write a follow-up post when these archives become available.</p>
            <p>If you’ve chosen to keep your add-on’s statistics private, they will remain private when stats are archived. You can check your privacy settings by going to your add-on in the <a href="https://addons.mozilla.org/developers/addons" target="_blank">Developer Hub</a>, clicking on <strong>Edit Listing</strong>, and then <strong>Technical Details</strong>.</p>
            <p><a href="https://blog.mozilla.org/addons/files/2016/01/Screenshot-2016-01-20-14.52.33.png"><img alt="editlisting" class="alignnone size-large wp-image-7645" height="389" src="https://blog.mozilla.org/addons/files/2016/01/Screenshot-2016-01-20-14.52.33-600x389.png" width="600"/></a></p>
            <p>The total number of users and other cumulative counts on add-ons and themes will not be affected and these will continue to function.</p>
            <p>If you have feedback or concerns, please head to our <a href="https://discourse.mozilla-community.org/t/archiving-of-add-on-statistics/6573" target="_blank">forum post</a> on this topic.</p></div>
        </content>
        <updated>2016-01-20T23:54:09Z</updated>
        <category term="developers"/>
        <category term="policy"/>
        <author>
            <name>Andy McKay</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/addons</id>
            <link href="https://blog.mozilla.org/addons/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/addons" rel="alternate" type="text/html"/>
            <title>Mozilla Add-ons Blog</title>
            <updated>2016-01-25T20:46:40Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/the-joy-of-coding-episode-41/</id>
        <link href="https://air.mozilla.org/the-joy-of-coding-episode-41/" rel="alternate" type="text/html"/>
        <title>The Joy of Coding - Episode 41</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="The Joy of Coding - Episode 41" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/cb/68/cb68b6ac48452be7e7f25ddc7b63c959.png" width="160"/>
            mconley livehacks on real Firefox bugs while thinking aloud.
        </p></div>
        </summary>
        <updated>2016-01-20T18:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/nfroyd/?p=452</id>
        <link href="https://blog.mozilla.org/nfroyd/2016/01/20/gecko-and-c-onboarding-presentation/" rel="alternate" type="text/html"/>
        <title>gecko and c++ onboarding presentation</title>
        <summary>One of the things the Firefox team has been doing recently is having onboarding sessions for new hires. This onboarding currently covers: 1st day setup Bugzilla Building Firefox Desktop Firefox Architecture / Product Communication and Community Javascript and the DOM C++ and Gecko Shipping Software Telemetry Org structure and career development My first day consisted […]</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of the things the Firefox team has been doing recently is having onboarding sessions for new hires. This onboarding currently covers:</p>
            <ul>
                <li>1st day setup</li>
                <li>Bugzilla</li>
                <li>Building Firefox</li>
                <li>Desktop Firefox Architecture / Product</li>
                <li>Communication and Community</li>
                <li>Javascript and the DOM</li>
                <li>C++ and Gecko</li>
                <li>Shipping Software</li>
                <li>Telemetry</li>
                <li>Org structure and career development</li>
            </ul>
            <p>My first day consisted of some useful HR presentations and then I was given my laptop and a pointer to a wiki page on building Firefox.  Needless to say, it took me a while to get started!  It would have been super convenient to have an introduction to all the stuff above.</p>
            <p>I’ve been asked to do the C++ and Gecko session three times.  All of the sessions are open to whoever wants to come, not just the new hires, and I think yesterday’s session was easily the most well-attended yet: somewhere between 10 and 20 people showed up.  Yesterday’s session was the first session where I made the slides available to attendees (should have been doing that from the start…) and it seemed equally useful to make the slides available to a broader audience as well. The <a href="https://docs.google.com/presentation/d/1ZHUkNzZK2TrF5_4MWd_lqEq7Ph5B6CDbNsizIkBxbnQ/edit?usp=sharing">Gecko and C++ Onboarding slides</a> are up now!</p>
            <p>This presentation is a “living” presentation; it will get updated for future sessions with feedback and as I think of things that should have been in the presentation or better ways to set things up (some diagrams would be nice…).  If you have feedback (good, bad, or ugly) on particular things in the slides or you have suggestions on what other things should be covered, please contact me!  Next time I do this I’ll try to record the presentation so folks can watch that if they prefer.</p></div>
        </content>
        <updated>2016-01-20T16:48:29Z</updated>
        <category term="Uncategorized"/>
        <category term="c++"/>
        <category term="mozilla"/>
        <category term="onboarding"/>
        <category term="presentations"/>
        <author>
            <name>Nathan Froyd</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/nfroyd</id>
            <link href="https://blog.mozilla.org/nfroyd/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/nfroyd" rel="alternate" type="text/html"/>
            <subtitle>writing code to help other people write code</subtitle>
            <title>Nathan's Blog</title>
            <updated>2016-01-20T17:01:01Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://andreasgal.com/?p=573</id>
        <link href="http://andreasgal.com/2016/01/20/brendan-is-back-to-save-the-web/" rel="alternate" type="text/html"/>
        <title>Brendan is back to save the Web</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Brendan is back, and he has a plan to save the Web. Its a big and bold plan, and it may just work. I am pretty excited about this. If you have 5 minutes to read along I’ll explain why I think you should be as well. The Web is broken Lets face it, the Web […]<img alt="" border="0" height="1" src="http://pixel.wp.com/b.gif?host=andreasgal.com&amp;blog=891661&amp;post=573&amp;subd=andreasgal&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p class="p1">Brendan is <a href="https://github.com/brave">back</a>, and he has a <a href="http://brave.com/">plan</a> to save the Web. Its a big and bold plan, and it may just work. I am pretty excited about this. If you have 5 minutes to read along I’ll explain why I think you should be as well.</p>
            <p class="p1"><strong>The Web is broken</strong></p>
            <p class="p1">Lets face it, the Web today is a mess. Everywhere we go online we are constantly inundated with annoying ads. Often pages are more ads than content, and the more ads the industry throws at us, the more we ignore them, the more obnoxious ads get, trying to catch our attention. As Brendan explains in his blog post, the browser used to be on the user’s side—we call browsers the user agent for a reason. Part of the early success of Firefox was that it blocked popup ads. But somewhere over the last 10 years of modern Web browsers, browsers lost their way and stopped being the user’s agent alone. Why?</p>
            <p class="p1"><strong>Browsers aren’t free</strong></p>
            <p class="p1">Making a modern Web browser is not free. It takes hundreds of engineers to make a competitive modern browser engine. Someone has to pay for that, and that someone needs to have a reason to pay for it. Google doesn’t make Chrome for the good of mankind. Google makes Chrome so you can consume more Web and along with it, more Google ads. Each time you click on one, Google makes more money. Chrome is a billion dollar business for Google. And the same is true for pretty much every other browser. Every major browser out there is funded through advertisement. No browser maker can escape this dilemma. Maybe now you understand why no major browser ships with a builtin enabled by default ad-blocker, even though ad-blockers are by far the most popular add-ons.</p>
            <p class="p1"><strong>Our privacy is at stake</strong></p>
            <p class="p1">It’s not just the unregulated flood of advertisement that needs a solution. Every ad you see is often selected based on sensitive private information advertisement networks have extracted from your browsing behavior through tracking. Remember how the FBI used to track what books Americans read at the library, and it was a big scandal? Today the Googles and Facebooks of the world know almost every site you visit, everything you buy online, and they use this data to target you with advertisement. I am often puzzled why people are so afraid of the NSA spying on us but show so little concern about all the deeply personal data Google and Facebook are amassing about everyone.</p>
            <p class="p1"><strong>Blocking alone doesn’t scale</strong></p>
            <p class="p1">I wish the solution was as easy as just blocking all ads. There is a lot of great Web content out there: news, entertainment, educational content. It’s not free to make all this content, but we have gotten used to consuming it “for free”. Banning all ads without an alternative mechanism would break the economic backbone of the Web. This dilemma has existed for many years, and the big browser vendors seem to have given up on it. It’s hard to blame them. How do you disrupt the status quo without sawing off the (ad revenue) branch you are sitting on?</p>
            <p class="p1"><strong>It takes an newcomer to fix this mess</strong></p>
            <p class="p1">I think its unlikely that the incumbent browser vendors will make any bold moves to solve this mess. There is too much money at stake. I am excited to see a startup take a swipe at this problem, because they have little to lose (seed money aside). Brave is getting the user agent back into the game. Browsers have intentionally remained silent onlookers to the ad industry invading users’ privacy. With Brave, Brendan makes the user agent step up and fight for the user as it was always intended to do.</p>
            <p class="p1">Brave basically consists of two parts: part one blocks third party ad content and tracking signals. Instead of these Brave inserts alternative ad content. Sites can sign up to get a fair share of any ads that Brave displays for them. The big change in comparison to the status quo is that the Brave user agent is in control and can regulate what you see. It’s like a speed limit for advertisement on the Web, with the goal to restore balance and give sites a fair way to monetize while giving the user control through the user agent.</p>
            <p class="p1"><strong>Making money with a better Web</strong></p>
            <p class="p1">The ironic part of Brave is that its for-profit. Brave can make money by reducing obnoxious ads and protecting your privacy at the same time. If Brave succeeds, it’s going to drain money away from the crappy privacy-invasive obnoxious advertisement world we have today, and publishers and sites will start transacting in the new Brave world that is regulated by the user agent. Brave will take a cut of these transactions. And I think this is key. It aligns the incentives right. The current funding structure of major browsers encourages them to keep things as they are. Brave’s incentive is to bring down the whole diseased temple and usher in a better Web. Exciting.</p>
            <p class="p1"><strong>Quick update:</strong> I had a chance to look over the Brave GitHub repo. It looks like the Brave Desktop browser is based on Chromium, not Gecko. Yes, you read that right. <span style="text-decoration: underline;">Brave is using Google’s rendering engine, not Mozilla’s.</span> Much to write about this one, but it will definitely help Brave “hide” better in the large volume of Chrome users, making it harder for sites to identify and block Brave users. Brave for iOS seems to be a <span style="text-decoration: underline;">fork of Firefox for iOS, but it manages to block ads</span> (Mozilla says they can’t).</p><br/>Filed under: <a href="http://andreasgal.com/category/mozilla/">Mozilla</a>  <a href="http://feeds.wordpress.com/1.0/gocomments/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/godelicious/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/gostumble/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/godigg/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/andreasgal.wordpress.com/573/"/></a> <a href="http://feeds.wordpress.com/1.0/goreddit/andreasgal.wordpress.com/573/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/andreasgal.wordpress.com/573/"/></a> <img alt="" border="0" height="1" src="http://pixel.wp.com/b.gif?host=andreasgal.com&amp;blog=891661&amp;post=573&amp;subd=andreasgal&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-20T16:00:00Z</updated>
        <category term="Mozilla"/>
        <author>
            <name>Andreas</name>
        </author>
        <source>
            <id>http://andreasgal.com</id>
            <logo>http://s2.wp.com/i/buttonw-com.png</logo>
            <link href="http://andreasgal.com/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://andreasgal.com" rel="alternate" type="text/html"/>
            <link href="http://andreasgal.com/osd.xml" rel="search" title="Andreas Gal " type="application/opensearchdescription+xml"/>
            <link href="http://andreasgal.com/?pushpress=hub" rel="hub" type="text/html"/>
            <subtitle>Entrepreneur. Technologist. Former CTO Mozilla</subtitle>
            <title>Andreas Gal</title>
            <updated>2016-01-22T11:45:34Z</updated>
        </source>
    </entry>

    <entry>
        <id>https://miketaylr.com/posts/2016/01/at-media-webkit-transform-three-dee.html</id>
        <link href="https://miketaylr.com/posts/2016/01/at-media-webkit-transform-three-dee.html" rel="alternate" type="text/html"/>
        <title>🙅 @media (-webkit-transform-3d)</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><code>@media (-webkit-transform-3d)</code> is a funny thing that exists on the web.</p>

            <p>It's like, a <a href="https://drafts.csswg.org/mediaqueries-4/#mq-features">media query feature</a> in the form of a prefixed CSS property, which should tell you if your (once upon a time probably Safari-only) browser supports 3D transforms, invented back in the day before we had <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"><code>@supports</code></a>.</p>

            <p>(According to <a href="https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/OtherStandardCSS3Features.html#//apple_ref/doc/uid/TP40007601-SW3">Apple docs</a> it first appeared in Safari 4, along side the other <code>-webkit-transition</code> and <code>-webkit-transform-2d</code> hybrid-media-query-feature-prefixed-css-properties-things that you should immediately forget exist.)</p>

            <p>Older versions of Modernizr <a href="https://github.com/Modernizr/Modernizr/blob/66c694d136241d356e0d24fcbaa5c068b0b0cdae/feature-detects/css/transforms3d.js#L26-L27">used this (and only this)</a> to detect support for 3D transforms, and that seemed pretty OK. (They also did the polite thing and tested <code>@media (transform-3d)</code>, but no browser has ever actually supported that, as it turns out). And because they're so consistently polite, they've since <a href="https://github.com/patrickkettner/Modernizr/commit/a54308e47e269a058472854b1ef417bd54f4e616">updated the test</a> to prefer <code>@supports</code> too (via a pull request from Edge developer Jacob Rossi).</p>

            <p>As it turns out other browsers have been <a href="http://caniuse.com/#feat=transforms3d">updated to support 3D CSS transforms</a>, but sites didn't go back and update their version of Modernizr. So unless you support <code>@media (-webkit-transform-3d)</code> these sites break. Niche websites like <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1239136">yahoo.com</a> and <a href="https://github.com/webcompat/web-bugs/issues/2151">about.com</a>.</p>

            <p>So, anyways. I added <a href="https://compat.spec.whatwg.org/#css-media-queries-webkit-transform-3d"><code>@media (-webkit-transform-3d)</code> to the Compat Standard</a> and we <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1239799">added support for it Firefox</a> so websites stop breaking.</p>

            <p>But you shouldn't ever use it—use <code>@supports</code>. In fact, don't even share this blog post. Maybe delete it from your browser history just in case.</p></div>
        </summary>
        <updated>2016-01-20T08:00:00Z</updated>
        <author>
            <name>Mike Taylor</name>
        </author>
        <source>
            <id>https://miketaylr.com/posts</id>
            <link href="https://miketaylr.com/posts" rel="alternate" type="text/html"/>
            <link href="https://miketaylr.com/posts/rss.xml" rel="self" type="application/rss+xml"/>
            <rights>3000</rights>
            <subtitle>Erotic web browser fan-fiction.</subtitle>
            <title>Mike Taylr Dot Com Web Log</title>
            <updated>2016-01-20T19:46:39Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://globau.wordpress.com/?p=881</id>
        <link href="https://globau.wordpress.com/2016/01/20/happy-bmo-push-day-166/" rel="alternate" type="text/html"/>
        <title>happy bmo push day!</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">the following changes have been pushed to bugzilla.mozilla.org: [1236161] when converting a BMP attachment to PNG fails a zero byte attachment is created [1231918] error handler doesn’t close multi-part responses discuss these changes on mozilla.tools.bmo.Filed under: bmo, mozilla<img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=globau.wordpress.com&amp;blog=25718030&amp;post=881&amp;subd=globau&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>the following changes have been pushed to bugzilla.mozilla.org:</p>
            <ul>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1236161" target="_blank">1236161</a>] when converting a BMP attachment to PNG fails a zero byte attachment is created</li>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1231918" target="_blank">1231918</a>] error handler doesn’t close multi-part responses</li>
            </ul>
            <p>discuss these changes on <a href="https://lists.mozilla.org/listinfo/tools-bmo" target="_blank">mozilla.tools.bmo</a>.</p><br/>Filed under: <a href="https://globau.wordpress.com/category/mozilla/bmo/">bmo</a>, <a href="https://globau.wordpress.com/category/mozilla/">mozilla</a>  <img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=globau.wordpress.com&amp;blog=25718030&amp;post=881&amp;subd=globau&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-20T07:33:46Z</updated>
        <category term="bmo"/>
        <category term="mozilla"/>
        <author>
            <name>glob</name>
        </author>
        <source>
            <id>https://globau.wordpress.com</id>
            <logo>https://s2.wp.com/i/buttonw-com.png</logo>
            <link href="https://globau.wordpress.com/category/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://globau.wordpress.com" rel="alternate" type="text/html"/>
            <link href="https://globau.wordpress.com/osd.xml" rel="search" title="glob blog" type="application/opensearchdescription+xml"/>
            <link href="https://globau.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
            <title>mozilla – glob blog</title>
            <updated>2016-01-26T19:01:06Z</updated>
        </source>
    </entry>

    <entry>
        <id>https://www.alex-johnson.net/tag/mozilla/rss/85d84c54-ed0c-4ee5-beb3-8823edb3c074</id>
        <link href="https://www.alex-johnson.net/removing-honeycomb-code/" rel="alternate" type="text/html"/>
        <title>Removing Honeycomb Code</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>As an effort to reduce the APK size of Firefox for Android and to remove unnecessary code, I will be helping remove the Honeycomb code throughout the Fennec project.  Honeycomb will not be supported since Firefox 46, so this code is not necessary. <br/>
            <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1217675">Bug 1217675</a> will keep track of the</p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>As an effort to reduce the APK size of Firefox for Android and to remove unnecessary code, I will be helping remove the Honeycomb code throughout the Fennec project.  Honeycomb will not be supported since Firefox 46, so this code is not necessary. <br/>
            <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1217675">Bug 1217675</a> will keep track of the progress. <br/>
            Hopefully this will help reduce the APK size some and clean up the road for <a href="https://www.youtube.com/watch?v=NJ6kzW5t02Y">killing Gingerbread</a> hopefully sometime in the near future.</p></div>
        </content>
        <updated>2016-01-20T04:59:34Z</updated>
        <category term="Mozilla"/>
        <category term="Android"/>
        <category term="Mobile"/>
        <author>
            <name>Alex Johnson</name>
        </author>
        <source>
            <id>https://www.alex-johnson.net/</id>
            <link href="https://www.alex-johnson.net/" rel="alternate" type="text/html"/>
            <link href="https://www.alex-johnson.net/tag/mozilla/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>Open source evangelist; lover of technology and video games.</subtitle>
            <title>Mozilla - Alex Johnson</title>
            <updated>2016-01-26T19:01:53Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://www.brianbondy.com/blog/id/172</id>
        <link href="http://www.brianbondy.com/blog/172/brave-software" rel="alternate" type="text/html"/>
        <title>Brave Software</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p/><p>Since June of last year, I’ve been co-founding a new startup called <a href="https://brave.com/">Brave Software</a> with <a href="https://en.wikipedia.org/wiki/Brendan_Eich">Brendan Eich</a>.
            With our amazing team, we're developing something pretty epic.</p><p/>
            <p/><p>We're building the next-generation of browsers for smartphones and laptops as part of our new ad-tech platform.
                Our terms of use give our users control over their personal data by blocking ad trackers and third party cookies.
                We re-integrate fewer and better ads directly into programmatic ad positions, paying revenue shares to users and publishers to support both of these essential parties in the web ecosystem.</p><p/>
            <p/><p>Coming built in, we have new faster engines for tracking protection, ad block, HTTPS Everywhere, safe ads with rev-share, and more.
                We're seeing massive web page load time speedups.</p><p/>


            <p/><p>We're starting to bring people in for early developer build access on all platforms.</p><p/>
            <p/><p>I’m happy to share that the browsers we’re developing were made fully open sourced.
                We welcome contributors, and would love your help.</p><p/>
            <p/><p>Some of the repositories include:</p><p/>
            <ul>
                <li><a href="https://github.com/brave/browser-laptop">Brave OSX and Windows x64 browsers</a>: Prototyped as a Gecko based browser, but now replaced with a powerful new browser built on top of the electron framework. The electron framework is the same one in use by Slack and the Atom editor.  It uses the latest libchromiumcontent and Node.</li>
                <li><a href="https://github.com/brave/link-bubble">Brave for Android</a>: Formerly Link Bubble, working as a background service so you can use other apps as your pages load.</li>
                <li><a href="https://github.com/brave/browser-ios">Brave for iOS</a>: Originally forked from Firefox for iOS but with all of the built-in greatness described above.</li>
                <li>And many others: Website, updater code, vault, electron fork, and others.</li>
            </ul></div>
        </summary>
        <updated>2016-01-20T00:00:00Z</updated>
        <category term="brave"/>
        <category term="electron"/>
        <category term="node"/>
        <category term="firefox"/>
        <category term="firefox-ios"/>
        <category term="mozilla"/>
        <category term="gecko"/>
        <author>
            <name>Brian R. Bondy</name>
        </author>
        <source>
            <id>http://www.brianbondy.com/blog/tagged/mozilla</id>
            <logo>http://www.brianbondy.com/img/logo.png</logo>
            <link href="http://www.brianbondy.com/blog/tagged/mozilla" rel="alternate" type="text/html"/>
            <link href="http://www.brianbondy.com/feeds/rss/mozilla" rel="self" type="application/rss+xml"/>
            <subtitle>Blog posts tagged mozilla by Brian R. Bondy</subtitle>
            <title>Brian R. Bondy's feed for tag mozilla</title>
            <updated>2016-01-26T19:01:09Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://coffeeonthekeyboard.com/rss/0388d8a6-fc86-477e-a161-1b356e01fe77</id>
        <link href="http://coffeeonthekeyboard.com/piefection-slides-up/" rel="alternate" type="text/html"/>
        <title>PIEfection Slides Up</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I put <a href="https://github.com/jsocol/talks/tree/master/2016-01-13-manhattanjs-pie">the slides for my ManhattanJS talk, "PIEfection"</a> up on GitHub the other day (sans images, but there are links in the source for all of those).</p>

            <p>I completely neglected to talk about the <a href="https://en.wikipedia.org/wiki/Maillard_reaction">Maillard reaction</a>, which is responsible for food tasting good, and specifically for browning pie crusts.</p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I put <a href="https://github.com/jsocol/talks/tree/master/2016-01-13-manhattanjs-pie">the slides for my ManhattanJS talk, "PIEfection"</a> up on GitHub the other day (sans images, but there are links in the source for all of those).</p>

            <p>I completely neglected to talk about the <a href="https://en.wikipedia.org/wiki/Maillard_reaction">Maillard reaction</a>, which is responsible for food tasting good, and specifically for browning pie crusts. tl;dr: Amino acid (protein) + sugar + ~300°F (~150°C) = delicious. There are innumerable and poorly understood combinations of amino acids and sugars, but this class of reaction is responsible for everything from searing stakes to browning crusts to toasting marshmallows.</p>

            <p>Above ~330°F, you get caramelization, which is also a delicious part of the pie and crust, but you don't want to overdo it. Starting around ~400°F, you get pyrolysis (burning, charring, carbonization) and below 285°F the reaction won't occur (at least not quickly) so you won't get the delicious compounds.</p>

            <p>(All of these are, of course, temperatures measured in the material, not in the air of the oven.)</p>

            <p>So, instead of an egg wash on your top crust, try whole milk, which has more sugar to react with the gluten in the crust.</p>

            <p>I also didn't get a chance to mention a rolling technique I use, that I learned from a <a href="https://www.facebook.com/ellenspirerstaffing">cousin of mine</a>, in whose baking shadow I happily live.</p>

            <p>When rolling out a crust after it's been in the fridge, first roll it out in a long stretch, then fold it in thirds; do it again; then start rolling it out into a round. Not only do you add more layer structure (mmm, flaky, delicious layers) but it'll fill in the cracks that often form if you try to roll it out directly, resulting in a stronger crust.</p>

            <p>Those <a href="http://www.amazon.com/Cheese-Shaker-Pepper-Perforated-Stainless/dp/B007T40P28/ref=sr_1_1?ie=UTF8&amp;qid=1453236391&amp;sr=8-1&amp;keywords=pizza+shaker">pepper flake shakers</a>, filled with flour, are a great way to keep adding flour to the workspace without worrying about your buttery hands.</p>

            <p>For transferring the crust to the pie plate, try rolling it up onto your rolling pin and unrolling it on the plate. <a href="http://www.amazon.com/Ateco-20-Inch-Length-French-Rolling/dp/B000KESQ1G">Tapered (or "French") rolling pins</a> (or wine bottle) are particularly good at this since they don't have moving parts.</p>

            <p>Finally, thanks again to <a href="https://twitter.com/renrutnnej">Jenn</a> for helping me get pies from one island to another. It would not have been possible without her!</p></div>
        </content>
        <updated>2016-01-19T20:45:34Z</updated>
        <author>
            <name>James  Socol</name>
        </author>
        <source>
            <id>http://coffeeonthekeyboard.com/</id>
            <link href="http://coffeeonthekeyboard.com/" rel="alternate" type="text/html"/>
            <link href="http://coffeeonthekeyboard.com/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>Coffee on the Keyboard</subtitle>
            <title>Coffee on the Keyboard</title>
            <updated>2016-01-25T18:00:43Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/reprendre-le-controle-de-sa-vie-privee-sur-internet/</id>
        <link href="https://air.mozilla.org/reprendre-le-controle-de-sa-vie-privee-sur-internet/" rel="alternate" type="text/html"/>
        <title>Reprendre le contrôle de sa vie privée sur Internet</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Reprendre le contr&#xF4;le de sa vie priv&#xE9;e sur Internet" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/be/f6/bef62897fb87e08dc8392fe61d10bcfa.png" width="160"/>
            L'omniprésence des réseaux sociaux, des moteurs de recherches et de la publicité est-elle compatible avec notre droit à la vie privée ?
        </p></div>
        </summary>
        <updated>2016-01-19T18:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://mykzilla.org/?p=245</id>
        <link href="https://mykzilla.org/2016/01/19/new-year-new-blogware/" rel="alternate" type="text/html"/>
        <title>New Year, New Blogware</title>
        <summary>Four score and many moons ago, I decided to move this blog from Blogger to WordPress. The transition took longer than expected, but it’s finally done. If you’ve been following along at the old address, https://mykzilla.blogspot.com/, now’s the time to update your address book! If you’ve been going to https://mykzilla.org/, however, or you read the […]</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Four score and many moons ago, I decided to move this blog from Blogger to WordPress. The transition took longer than expected, but it’s finally done.</p>
            <p>If you’ve been following along at the old address, <a href="https://mykzilla.blogspot.com/">https://mykzilla.blogspot.com/</a>, now’s the time to update your address book! If you’ve been going to <a href="https://mykzilla.org/">https://mykzilla.org/</a>, however, or you read the blog on <a href="http://planet.mozilla.org/">Planet Mozilla</a>, then there’s nothing to do, as that’s the new address, and Planet Mozilla has been updated to syndicate posts from it.</p></div>
        </content>
        <updated>2016-01-19T16:56:05Z</updated>
        <category term="Mozilla"/>
        <author>
            <name>Myk Melez</name>
        </author>
        <source>
            <id>https://mykzilla.org</id>
            <logo>https://mykzilla.org/wp-content/uploads/2016/01/cropped-headshot-2014-32x32.jpg</logo>
            <link href="https://mykzilla.org/category/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://mykzilla.org" rel="alternate" type="text/html"/>
            <title>Mozilla – Mykzilla</title>
            <updated>2016-01-19T17:30:17Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://michaelkohler.info/?p=348</id>
        <link href="https://michaelkohler.info/2016/mozillas-strategische-leitlinien-fur-2016-und-danach" rel="alternate" type="text/html"/>
        <title>Mozillas strategische Leitlinien für 2016 und danach</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Dieser Beitrag wurde zuerst im Blog auf https://blog.mozilla.org/community veröffentlicht. Herzlichen Dank an Aryx und Coce für die Übersetzung! Auf der ganzen Welt arbeiten leidenschaftliche Mozillianer am Fortschritt für Mozillas Mission. Aber fragt man fünf verschiedene Mozillianer, was die Mission ist, erhält man womöglich sieben verschiedene Antworten. Am Ende des letzten Jahres legte Mozillas CEO Chris Beard klare Vorstellungen über Mozillas Mission, Vision und Rolle dar und zeigte auf, wie unsere Produkte uns diesem Ziel in den nächsten fünf Jahren näher bringen. Das Ziel dieser strategischen Leitlinien besteht darin, für Mozilla...<a class="read-more" href="https://michaelkohler.info/2016/mozillas-strategische-leitlinien-fur-2016-und-danach">read more</a><img alt="" height="0" src="http://piwik.michaelkohler.info/piwik.php?idsite=1&amp;rec=1&amp;url=https%3A%2F%2Fmichaelkohler.info%2F2016%2Fmozillas-strategische-leitlinien-fur-2016-und-danach&amp;action_name=Mozillas+strategische+Leitlinien+f%C3%BCr+2016+und+danach&amp;urlref=https%3A%2F%2Fmichaelkohler.info%2Ffeed" style="border: 0; width: 0; height: 0;" width="0"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Dieser Beitrag wurde zuerst im Blog auf<a href="https://blog.mozilla.org/community"> https://blog.mozilla.org/community</a> veröffentlicht. Herzlichen Dank an Aryx und Coce für die Übersetzung!</p>
            <p>Auf der ganzen Welt arbeiten leidenschaftliche Mozillianer am Fortschritt für Mozillas Mission. Aber fragt man fünf verschiedene Mozillianer, was die Mission ist, erhält man womöglich sieben verschiedene Antworten.</p>
            <p>Am Ende des letzten Jahres legte Mozillas CEO Chris Beard klare Vorstellungen über Mozillas Mission, Vision und Rolle dar und zeigte auf, wie unsere Produkte uns diesem Ziel in den nächsten fünf Jahren näher bringen. Das Ziel dieser strategischen Leitlinien besteht darin, für Mozilla insgesamt ein prägnantes, gemeinsames Verständnis unserer Ziele zu entwickeln, die uns als Individuen das Treffen von Entscheidungen und Erkennen von Möglichkeiten erleichtert, mit denen wir Mozilla voranbringen.</p>
            <p>Mozillas Mission können wir nicht alleine erreichen. Die Tausenden von Mozillianern auf der ganzen Welt müssen dahinter stehen, damit wir zügig und mit lauterer Stimme als je zuvor Unglaubliches erreichen können.</p>
            <p>Deswegen ist eine der sechs<a href="https://docs.google.com/presentation/d/1A3Ma9gNawAYYGbYC2bUW0wUwcpHuvyMiZvHNiMLriw0/edit#slide=id.gdaa7a0bd0_1_0"> strategischen Initiativen</a> des Participation Teams für die erste Jahreshälfte, möglichst viele Mozillianer über diese Leitlinien aufzuklären, damit wir 2016 den bisher wesentlichsten Einfluss erzielen können. Wir werden einen weiteren Beitrag veröffentlichen, der sich näher mit der Strategie des Participation Teams für das Jahr 2016 befassen wird.</p>
            <p><img alt="" class="alignnone" height="335" src="https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/community/files/2016/01/Screen-Shot-2015-12-18-at-2.02.07-PM-600x335.png" width="600"/></p>
            <p>Das Verstehen dieser Strategie wird unabdingbar sein für jeden, der bei Mozilla in diesem Jahr etwas bewirken möchte, denn sie wird bestimmen, wofür wir eintreten, wo wir unsere Ressourcen einsetzen und auf welche Projekte wir uns 2016 konzentrieren werden.</p>
            <p>Zu Jahresbeginn werden wir näher auf diese Strategie eingehen und weitere Details dazu bekanntgeben, wie die diversen Teams und Projekte bei Mozilla auf diese Ziele hinarbeiten.</p>
            <p>Der aktuelle Aufruf zum Handeln besteht darin, im Kontext Ihrer Arbeit über diese Ziele nachzudenken und darüber, wie Sie im kommenden Jahr bei Mozilla mitwirken möchten. Dies hilft, Ihre Innovationen, Ambitionen und Ihren Einfluss im Jahr 2016 zu gestalten.</p>
            <p>Wir hoffen, dass Sie mitdiskutieren und Ihre Fragen, Kommentare und Pläne für das Vorantreiben der strategischen Leitlinien im Jahr 2016<a href="https://discourse.mozilla-community.org/t/mozillas-strategic-narrative-2016/6397"> hier</a> auf Discourse teilen und Ihre Gedanken auf Twitter mit dem Hashtag <a href="https://twitter.com/search?q=%23mozilla2016strategy&amp;src=typd">#Mozilla2016Strategy</a> mitteilen.</p>
            <p> </p>
            <h3>Mission, Vision &amp; Strategie</h3>
            <p><b>Unsere Mission</b></p>
            <p>Dafür zu sorgen, dass das Internet eine weltweite öffentliche Ressource ist, die allen zugänglich ist.</p>
            <p><b>Unsere Vision</b></p>
            <p>Ein Internet, für das Menschen tatsächlich an erster Stelle stehen. Ein Internet, in dem Menschen ihr eigenes Erlebnis gestalten können. Ein Internet, in dem die Menschen selbst entscheiden können sowie sicher und unabhängig sind.</p>
            <p><b>Unsere Rolle</b></p>
            <p>Mozilla setzt sich im wahrsten Sinne des Wortes in Ihrem Online-Leben für Sie ein. Wir setzen uns für Sie ein, sowohl in Ihrem Online-Erlebnis als auch für Ihre Interessen beim Zustand des Internets.</p>
            <p><b>Unsere Arbeit</b></p>
            <p>Unsere Säulen</p>
            <ol>
                <li><b>Produkte:</b> Wir entwickeln Produkte mit Menschen im Mittelpunkt sowie Bildungsprogramme, mit deren Hilfe Menschen online ihr gesamtes Potential ausschöpfen können.</li>
                <li><b>Technologie:</b> Wir entwickeln robuste technische Lösungen, die das Internet über     verschiedene Plattformen hinweg zum Leben erwecken.</li>
                <li><b>Menschen:</b> Wir entwickeln Führungspersonen und Mitwirkende in der Gemeinschaft, die das Internet erfinden, gestalten und verteidigen.</li>
            </ol>
            <p>Wir wir positive Veränderungen in Zukunft anpacken wollen</p>
            <p>Die Arbeitsweise ist ebensowichtig wie das Ziel. Unsere Gesundheit und bleibender Einfluss hängen davon ab, wie sehr unsere Produkte und Aktivitäten:</p>
            <ol>
                <li>Interoperabilität, Open Source und offene Standards fördern,</li>
                <li>Gemeinschaften aufbauen und fördern,</li>
                <li>Für politische Veränderungen und rechtlichen Schutz eintreten sowie</li>
                <li>Netzbürger bilden und einbeziehen.</li>
            </ol>
            <p> </p>
            <img alt="" height="0" src="http://piwik.michaelkohler.info/piwik.php?idsite=1&amp;rec=1&amp;url=https%3A%2F%2Fmichaelkohler.info%2F2016%2Fmozillas-strategische-leitlinien-fur-2016-und-danach&amp;action_name=Mozillas+strategische+Leitlinien+f%C3%BCr+2016+und+danach&amp;urlref=https%3A%2F%2Fmichaelkohler.info%2Ffeed" style="border: 0; width: 0; height: 0;" width="0"/></div>
        </content>
        <updated>2016-01-19T15:27:24Z</updated>
        <category term="Mozilla"/>
        <category term="MozillaDeutsch"/>
        <author>
            <name>Michael Kohler</name>
        </author>
        <source>
            <id>https://michaelkohler.info</id>
            <link href="https://michaelkohler.info/category/mozilla/feed" rel="self" type="application/rss+xml"/>
            <link href="https://michaelkohler.info" rel="alternate" type="text/html"/>
            <title>Mozilla – Michael Kohler</title>
            <updated>2016-01-19T15:31:45Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://dlawrence.wordpress.com/?p=27</id>
        <link href="https://dlawrence.wordpress.com/2016/01/19/happy-bmo-push-day-3/" rel="alternate" type="text/html"/>
        <title>happy bmo push day!</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">the following changes have been pushed to bugzilla.mozilla.org: [1238573] Change label of “New Bug” menu to “New/Clone Bug” [1239065] Project Kickoff Form: Adjustments needed to Mozilla Infosec review portion [1240157] Fix a typo in bug.rst [1236461] Mass update mozilla-reps group discuss these changes on mozilla.tools.bmo.<img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=dlawrence.wordpress.com&amp;blog=58816&amp;post=27&amp;subd=dlawrence&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>the following changes have been pushed to bugzilla.mozilla.org:</p>
            <ul>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1238573" target="_blank">1238573</a>] Change label of “New Bug” menu to “New/Clone Bug”</li>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1239065" target="_blank">1239065</a>] Project Kickoff Form: Adjustments needed to Mozilla Infosec review portion</li>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1240157" target="_blank">1240157</a>] Fix a typo in bug.rst</li>
                <li>[<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1236461" target="_blank">1236461</a>] Mass update mozilla-reps group</li>
            </ul>
            <p>discuss these changes on <a href="https://lists.mozilla.org/listinfo/tools-bmo" target="_blank">mozilla.tools.bmo</a>.</p><br/>  <a href="http://feeds.wordpress.com/1.0/gocomments/dlawrence.wordpress.com/27/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/dlawrence.wordpress.com/27/"/></a> <img alt="" border="0" height="1" src="https://pixel.wp.com/b.gif?host=dlawrence.wordpress.com&amp;blog=58816&amp;post=27&amp;subd=dlawrence&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-19T14:49:59Z</updated>
        <category term="Uncategorized"/>
        <author>
            <name>dlawrence</name>
        </author>
        <source>
            <id>https://dlawrence.wordpress.com</id>
            <logo>https://s2.wp.com/i/buttonw-com.png</logo>
            <link href="https://dlawrence.wordpress.com/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://dlawrence.wordpress.com" rel="alternate" type="text/html"/>
            <link href="https://dlawrence.wordpress.com/osd.xml" rel="search" title="Dave's Ramblings" type="application/opensearchdescription+xml"/>
            <link href="https://dlawrence.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
            <subtitle>Thoughts somehow related to web, linux, mobile and other things I am interested in</subtitle>
            <title>Dave's Ramblings</title>
            <updated>2016-01-26T14:31:39Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://soledadpenades.com/?p=6335</id>
        <link href="http://soledadpenades.com/2016/01/19/hardware-hack-day-mozldn-1/" rel="alternate" type="text/html"/>
        <link href="https://flattr.com/submit/auto?user_id=8399&amp;popout=1&amp;url=http%3A%2F%2Fsoledadpenades.com%2F2016%2F01%2F19%2Fhardware-hack-day-mozldn-1%2F&amp;language=en_GB&amp;category=text&amp;title=Hardware+Hack+Day+%40+MozLDN%2C+1&amp;description=Last+week+we+ran+an+internal+%26%238220%3Bhack+day%26%238221%3B+here+at+the+Mozilla+space+in+London.+It+was+just+a+bunch+of+software+engineers+looking+at+various+hardware+boards+and+things...&amp;tags=arduino%2Clinux%2Cmdns%2Cmozilla%2Craspberry+pi%2Cwi-fi%2Cblog" rel="payment" title="Flattr this!" type="text/html"/>
        <title>Hardware Hack Day @ MozLDN, 1</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Last week we ran an internal “hack day” here at the Mozilla space in London. It was just a bunch of software engineers looking at various hardware boards and things and learning about them Here’s what we did! Sole I essentially kind of bricked my Arduino Duemilanove trying to get it working with Johnny Five, … <a class="more-link" href="http://soledadpenades.com/2016/01/19/hardware-hack-day-mozldn-1/">Continue reading <span class="screen-reader-text">Hardware Hack Day @ MozLDN, 1</span> <span class="meta-nav">→</span></a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Last week we ran an internal “hack day” here at the Mozilla space in London. It was just a bunch of <em>software</em> engineers looking at various <em>hardware</em> boards and things and learning about them <img alt=":-)" class="wp-smiley" src="http://soledadpenades.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em;"/></p>
            <p>Here’s what we did!</p>
            <h3><a href="http://soledadpenades.com/">Sole</a></h3>
            <p>I essentially <a href="http://soledadpenades.com/2016/01/19/kind-of-bricking-an-arduino-duemilanove-by-exhausting-its-memory/">kind of bricked my Arduino Duemilanove</a> trying to get it working with Johnny Five, but it was fine–apparently there’s a way to recover it using another Arduino, and someone offered to help with that in the next <a href="http://www.meetup.com/NodeBots-of-London/events/227890374/">NodeBots</a> London, which I’m going to attend.</p>
            <h3><a href="http://ardeenelinfierno.com/">Francisco</a></h3>
            <p>Thinks he’s having issues with cables. It seems like the boards are not reset automatically by the Arduino IDE nowadays? He found the button in the board actually resets the board when pressed i.e. it’s the RESET button.</p>
            <p>On the Raspberry Pi side of things, he was very happy to put all his old-school Linux skills in action configuring network interfaces without GUIs!</p>
            <h3><a href="http://gu.illau.me/">Guillaume</a></h3>
            <p>Played with mDNS advertising and listening to services on Raspberry Pi.</p>
            <p>(He was very quiet)</p>
            <p>(He also built a very nice LEGO case for the Raspberry Pi, but I do not have a picture, so just imagine it).</p>
            <h3><a href="http://wilsonpage.co.uk/">Wilson</a></h3>
            <blockquote><p>
                Wilson: “I got my Raspberry Pi on the Wi-Fi”</p>
                <p>Francisco: “Sorry?”</p>
                <p>Wilson: “I mean, you got my Raspberry Pi on the network. And now I’m trying to build a web app on the Pi…”</p></blockquote>
            <h3><a href="http://chrislord.net/">Chris</a></h3>
            <p>Exploring the Pebble with Linux. There’s a libpebble, and he managed to connect…</p>
            <p><del datetime="2016-01-20T11:22:33+00:00"><em><small>(sorry, I had to leave early so I do not know what else did Chris do!)</small></em></del></p>
            <p>Updated, 20 January: Chris told me he just managed to successfully connect to the Pebble watch using the bluetooth WebAPI. It requires two Gecko patches (one regression patch and one obvious logic error that he hasn’t filed yet). PROGRESS!</p>
            <p>~~~</p>
            <p>So as you can see we didn’t really get super far in just a day, and I even ended up with unusable hardware. BUT! we all learned something, and next time we know what NOT to do (or at least I DO KNOW what NOT to do!).</p>
            <p><a href="http://soledadpenades.com/?flattrss_redirect&amp;id=6335&amp;md5=40427d69faa3b9c2d1530732fd78e66d" target="_blank" title="Flattr"><img alt="flattr this!" src="http://soledadpenades.com/wp-content/plugins/flattr/img/flattr-badge-large.png"/></a></p></div>
        </content>
        <updated>2016-01-19T13:31:55Z</updated>
        <category term="Events"/>
        <category term="Hardware"/>
        <category term="arduino"/>
        <category term="linux"/>
        <category term="mdns"/>
        <category term="mozilla"/>
        <category term="raspberry pi"/>
        <category term="wi-fi"/>
        <author>
            <name>sole</name>
        </author>
        <source>
            <id>http://soledadpenades.com</id>
            <link href="http://soledadpenades.com/tag/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://soledadpenades.com" rel="alternate" type="text/html"/>
            <subtitle>repeat 4[fd 100 rt 90]</subtitle>
            <title>mozilla – soledad penadés</title>
            <updated>2016-01-26T02:46:29Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://daniel.haxx.se/blog/?p=8544</id>
        <link href="http://daniel.haxx.se/blog/2016/01/19/subject-urgent-warning/" rel="alternate" type="text/html"/>
        <title>“Subject: Urgent Warning”</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Back in December I got a desperate email from this person. A woman who said her Instagram had been hacked and since she found my contact info in the app she mailed me and asked for help. I of course replied and said that I have nothing to do with her being hacked but I … <a class="more-link" href="http://daniel.haxx.se/blog/2016/01/19/subject-urgent-warning/">Continue reading <span class="screen-reader-text">“Subject: Urgent Warning”</span> <span class="meta-nav">→</span></a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Back in December I got a desperate email from this person. A woman who said her Instagram had been hacked and since she found my contact info in the app she mailed me and asked for help. I of course replied and said that I have nothing to do with her being hacked but I also have nothing to do with Instagram other than that they use software I’ve written.</p>
            <p>Today she writes back. Clearly not convinced I told the truth before, and now she strikes back with more “evidence” of my wrongdoings.</p>
            <p><em>Dear Daniel,</em></p>
            <p><em>I had emailed you a couple months ago about my “screen dumps” aka screenshots and asked for your help with restoring my Instagram account since it had been hacked, my photos changed, and your name was included in the coding. You claimed to have no involvement whatsoever in developing a third party app for Instagram and could not help me salvage my original Instagram photos, pre-hacked, despite Instagram serving as my Photography portfolio and my career is a Photographer.</em></p>
            <p><em>Since you weren’t aware that your name was attached to Instagram related hacking code, I thought you might want to know, in case you weren’t already aware, that your name is also included in Spotify terms and conditions. I came across this information using my Spotify which has also been hacked into and would love your help hacking out of Spotify. Also, I have yet to figure out how to unhack the hackers from my Instagram so if you change your mind and want to restore my Instagram to its original form as well as help me secure my account from future privacy breaches, I’d be extremely grateful. As you know, changing my passwords did nothing to resolve the problem. Please keep in mind that Facebook owns Instagram and these are big companies that you likely don’t want to have a trail of evidence that you are a part of an Instagram and Spotify hacking ring. Also, Spotify is a major partner of Spotify so you are likely familiar with the coding for all of these illegally developed third party apps. I’d be grateful for your help fixing this error immediately.</em></p>
            <p><em>Thank you,</em></p>
            <p>[name redacted]</p>
            <p><em>P.S. Please see attached screen dump for a screen shot of your contact info included in Spotify (or what more likely seems to be a hacked Spotify developed illegally by a third party).</em></p>
            <p><a href="http://daniel.haxx.se/blog/wp-content/uploads/2016/01/IMG_7393.png" rel="attachment wp-att-8545"><img alt="Spotify credits screenshot" class="aligncenter size-medium wp-image-8545" height="450" src="http://daniel.haxx.se/blog/wp-content/uploads/2016/01/IMG_7393-253x450.png" width="253"/></a></p>
            <p>Here’s the Instagram screenshot she sent me in a previous email:</p>
            <p><a href="http://daniel.haxx.se/blog/wp-content/uploads/2016/01/IMG_2156.jpg" rel="attachment wp-att-8546"><img alt="Instagram credits screenshot" class="aligncenter size-medium wp-image-8546" height="450" src="http://daniel.haxx.se/blog/wp-content/uploads/2016/01/IMG_2156-253x450.jpg" width="253"/></a></p>
            <p>I’ve tried to respond with calm and clear reasonable logic and technical details on why she’s seeing my name there. That clearly failed. What do I try next?</p></div>
        </content>
        <updated>2016-01-19T08:37:32Z</updated>
        <category term="cURL and libcurl"/>
        <category term="Open Source"/>
        <category term="Technology"/>
        <category term="hacking"/>
        <category term="Mail"/>
        <author>
            <name>Daniel Stenberg</name>
        </author>
        <source>
            <id>http://daniel.haxx.se/blog</id>
            <logo>http://daniel.haxx.se/blog/wp-content/uploads/2015/08/cropped-Daniel-head-greenshirt-32x32.jpg</logo>
            <link href="http://daniel.haxx.se/blog/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://daniel.haxx.se/blog" rel="alternate" type="text/html"/>
            <subtitle>tech, open source and networking</subtitle>
            <title>daniel.haxx.se</title>
            <updated>2016-01-26T07:16:26Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-us">
        <id>http://edunham.net/2016/01/19/how_much_knowledge_do_you_need_to_give_a_conference_talk.html</id>
        <link href="http://edunham.net/2016/01/19/how_much_knowledge_do_you_need_to_give_a_conference_talk.html" rel="alternate" type="text/html"/>
        <title>How much knowledge do you need to give a conference talk?</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><h3>How much knowledge do you need to give a conference talk?</h3>
            <p>I was recently asked an excellent question when I promoted the <a class="reference external" href="http://www.linuxfestnorthwest.org/2016/present">LFNW CFP</a> on
                IRC:</p>
            <blockquote>
                <div>As someone who has never done a talk, but wants to, what kind of knowledge
                    do you need about a subject to give a talk on it?</div></blockquote>
            <p>If you answer “yes” to any of the following questions, you know enough to
                propose a talk:</p>
            <ul class="simple">
                <li>Do you have a <strong>hobby</strong> that most tech people aren’t experts on? Talk
                    about applying a lesson or skill from that hobby to tech! For instance, I
                    turned a habit of reading about psychology into my <a class="reference external" href="http://talks.edunham.net/scale13x/#1">Human Hacking</a> talk.</li>
                <li>Have you ever spent a bunch of hours forcing two tools to work with each
                    other, because the documentation wasn’t very helpful and Googling didn’t get
                    you very far, and built something useful? “How to build ___ with ___” makes
                    a catchy talk title, if the <strong>thing you built</strong> solves a common problem.</li>
                <li>Have you ever had a mentor sit down with you and explain a tool or
                    technique, and the new understanding improved the quality of your work or
                    code? Passing along useful <strong>lessons from your mentors</strong> is a valuable talk,
                    because it allows others to benefit from the knowledge without taking as
                    much of your mentor’s time.</li>
                <li>Have you seen a dozen newbies ask the same question over the course of a few
                    months? When your <strong>answer to a common question</strong> starts to feel like a
                    broken record, it’s time to compose it into a talk then link the newbies to
                    your slides or recording!</li>
                <li>Have you taken a really <strong>interesting class</strong> lately? Can you distill part of it
                    into a 1-hour lesson that would appeal to nerds who don’t have the time or
                    resources to take the class themselves? (thanks <a class="reference external" href="http://lucywyman.me/">lucyw</a> for adding this to
                    the list!)</li>
                <li>Have you built a cool thing that over a dozen other people use? A <strong>tutorial
                    talk</strong> can not only expand your community, but its recording can augment your
                    documentation and make the project more accessible for those who prefer to
                    learn directly from humans!</li>
                <li>Did you benefit from a really great introductory talk when you were learning
                    a tool? Consider doing your own tutorial! Any conference with beginners in
                    their target audience needs at least one Git lesson, an IRC talk, and some
                    discussions of how to use basic Unix utilities. These <strong>introductory talks</strong>
                    are actually better when given by someone who learned the technology
                    relatively recently, because newer users remember what it’s like not to know
                    how to use it. Just remember to have a more expert user look over your slides
                    before you present, in case you made an incorrect assumption about the tool’s
                    more advanced functionality.</li>
            </ul>
            <p>I personally try to propose talks I want to hear, because the dealine of a
                CFP or conference is great motivation to prioritize a cool project over
                ordinary chores.</p></div>
        </summary>
        <updated>2016-01-19T08:00:00Z</updated>
        <source>
            <id>http://edunham.net/</id>
            <author>
                <name>Emily Dunham</name>
            </author>
            <link href="http://edunham.net/" rel="alternate" type="text/html"/>
            <link href="http://edunham.net/rss.html?tag=planetmozilla" rel="self" type="application/rss+xml"/>
            <subtitle>is a "DevOps" Engineer at Mozilla Research</subtitle>
            <title>edunham</title>
            <updated>2016-01-19T08:00:00Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://quality.mozilla.org/?p=49441</id>
        <link href="https://quality.mozilla.org/2016/01/aurora-45-0-testday-results/" rel="alternate" type="text/html"/>
        <title>Aurora 45.0 Testday Results</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Howdy mozillians! Last week – on Friday, January 15th – we held Aurora 45.0 Testday; and, of course, it was another outstanding event! Thank you all – Mahmoudi Dris, Iryna Thompson, Chandrakant Dhutadmal, Preethi Dhinesh, Moin Shaikh, Ilse Macías, Hossain Al Ikram, Rezaul Huque Nayeem, Tahsan Chowdhury Akash, Kazi Nuzhat Tasnem, Fahmida … <a class="go" href="https://quality.mozilla.org/2016/01/aurora-45-0-testday-results/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Howdy mozillians!</p>
            <p>Last week – on <em>Friday, January 15th</em> – we held <a href="https://quality.mozilla.org/2016/01/firefox-45-0-aurora-testday-january-15th/">Aurora 45.0 Testday</a>; and, of course, it was another outstanding event!</p>
            <p><strong>Thank you</strong> all – <span class="author-a-oz90z4z89zz89za7qfz70zda5z87zxz85z i"><i>Mahmoudi Dris, Iryna Thompson, Chandrakant Dhutadmal, Preethi Dhinesh, Moin Shaikh, Ilse Macías, Hossain Al Ikram, Rezaul Huque Nayeem, Tahsan Chowdhury Akash, Kazi Nuzhat Tasnem, Fahmida Noor, Tazin Ahmed, Md. Ehsanul Hassan, Mohammad Maruf Islam, Kazi Sakib Ahmad, Khalid Syfullah Zaman, Asiful Kabir, Tabassum Mehnaz, Hasibul Hasan, Saddam Hossain, Mohammad Kamran Hossain, Amlan Biswas, Fazle Rabbi, Mohammed Jawad Ibne Ishaque, Asif Mahmud Shuvo, Nazir Ahmed Sabbir, Md. Raihan Ali, Md. Almas Hossain, Sadik Khan, Md. Faysal Alam Riyad, Faisal Mahmud, Md. Oliullah Sizan, Asif Mahmud Rony, Forhad Hossain </i>and<i> Tanvir Rahman </i></span>– for the participation!</p>
            <p>A big <strong>thank you</strong> to all our active moderators too!</p>
            <p><span style="color: #333333;"><span style="font-family: 'Open Sans', sans-serif;"><span style="font-size: medium;"><u>Results:</u></span></span></span></p>
            <ul>
                <li><span style="color: #333333;"><span style="font-family: 'Open Sans', sans-serif;"><span style="font-size: medium;"><strong>15</strong> issues were verified: </span></span></span><span style="color: #333333;"><span style="font-family: 'Open Sans', sans-serif;"><span style="font-size: medium;"> <span style="font-weight: 400;"><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1235821">1235821</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1228518">1228518</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1165637">1165637</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1232647">1232647</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1235379">1235379</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=842356">842356</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1222971">1222971</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=915962">915962</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1180761">1180761</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1218455">1218455</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1222747">1222747</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1210752">1210752</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1198450">1198450</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1222820">1222820</a>, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1225514">1225514</a></span></span></span></span></li>
                <li><strong>1</strong> bug was triaged: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1230789"><span style="font-weight: 400;">1230789</span></a></li>
                <li>some failures were mentioned for <i>Search Refactoring </i>feature in the etherpads (<a href="https://public.etherpad-mozilla.org/p/testday-20160115">link 1</a> and <a href="https://public.etherpad-mozilla.org/p/bangladesh.testday-15012016">link 2</a>); please feel free to add the requested details in the etherpads or, even better, join us on <a href="http://widget01.mibbit.com/?server=irc.mozilla.org&amp;channel=%23qa" target="_blank">#qa IRC channel</a> and let’s figure them out</li>
            </ul>
            <p>I <strong>strongly</strong> advise everyone of you to reach out to us, the moderators, via <a href="http://widget01.mibbit.com/?server=irc.mozilla.org&amp;channel=%23qa">#qa</a> during the events when you encountered any kind of failures. Keep up the great work! \o/</p>
            <p>And keep an eye on QMO for upcoming events! <img alt="&#x1F609;" class="wp-smiley" src="https://s.w.org/images/core/emoji/72x72/1f609.png" style="height: 1em;"/></p></div>
        </content>
        <updated>2016-01-19T07:51:57Z</updated>
        <category term="Community"/>
        <category term="Events"/>
        <category term="QMO News"/>
        <author>
            <name>Alexandra Lucinet</name>
        </author>
        <source>
            <id>https://quality.mozilla.org</id>
            <link href="https://quality.mozilla.org/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://quality.mozilla.org" rel="alternate" type="text/html"/>
            <subtitle>Driving quality across Mozilla with data, metrics and a strong community focus</subtitle>
            <title>Mozilla Quality Assurance</title>
            <updated>2016-01-26T14:46:39Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://blog.monotonous.org/?p=678</id>
        <link href="http://blog.monotonous.org/2016/01/18/its-mlk-day-and-its-not-too-late-to-do-something-about-it/" rel="alternate" type="text/html"/>
        <link href="http://blog.monotonous.org/2016/01/18/its-mlk-day-and-its-not-too-late-to-do-something-about-it/#comments" rel="replies" type="text/html"/>
        <link href="http://blog.monotonous.org/2016/01/18/its-mlk-day-and-its-not-too-late-to-do-something-about-it/feed/atom/" rel="replies" type="application/atom+xml"/>
        <title xml:lang="en">It’s MLK Day and It’s Not Too Late to Do Something About It</title>
        <summary type="xhtml" xml:lang="en"><div xmlns="http://www.w3.org/1999/xhtml">For the last three years I have had the opportunity to send out a reminder to Mozilla staff that Martin Luther King Jr. Day is coming up, and that U.S. employees get the day off. It has turned into my MLK Day eve ritual. I read his letters, listen to speeches, and then I compose […]<img alt="" border="0" height="1" src="http://pixel.wp.com/b.gif?host=blog.monotonous.org&amp;blog=34885741&amp;post=678&amp;subd=blogdotmonotonousdotorg&amp;ref=&amp;feed=1" width="1"/></div>
        </summary>
        <content type="xhtml" xml:lang="en"><div xmlns="http://www.w3.org/1999/xhtml"><p>For the last three years I have had the opportunity to send out a reminder to Mozilla staff that Martin Luther King Jr. Day is coming up, and that U.S. employees get the day off. It has turned into my MLK Day eve ritual. I read his letters, listen to speeches, and then I compose a belabored paragraph about Dr. King with some choice quotes.</p>
            <p>If you didn’t get a chance to celebrate Dr. King’s legacy and the movements he was a part of, you still have a chance:</p>
            <ul>
                <li>Watch <a href="http://www.imdb.com/title/tt1020072/" target="_blank">Selma.</a></li>
                <li>Watch <a href="http://www.imdb.com/title/tt1592527/" target="_blank">The Black Power Mixtape</a> (it’s on Netflix).</li>
                <li>Read <a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html" target="_blank">A Letter from a Birmingham Jail</a> (it’s really really good).</li>
                <li>Listen to his speech <a href="https://www.youtube.com/watch?v=3Qf6x9_MLD0" target="_blank">Beyond Vietnam</a>.</li>
                <li>Listen to his last speech <a href="https://www.youtube.com/watch?v=IDl84vusXos" target="_blank">I Have Been To The Mountaintop</a>.</li>
            </ul><br/>  <a href="http://feeds.wordpress.com/1.0/gocomments/blogdotmonotonousdotorg.wordpress.com/678/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/blogdotmonotonousdotorg.wordpress.com/678/"/></a> <img alt="" border="0" height="1" src="http://pixel.wp.com/b.gif?host=blog.monotonous.org&amp;blog=34885741&amp;post=678&amp;subd=blogdotmonotonousdotorg&amp;ref=&amp;feed=1" width="1"/></div>
        </content>
        <updated>2016-01-18T23:35:19Z</updated>
        <published>2016-01-18T23:34:26Z</published>
        <category scheme="http://blog.monotonous.org" term="Personal"/>
        <category scheme="http://blog.monotonous.org" term="Software"/>
        <category scheme="http://blog.monotonous.org" term="World Affairs"/>
        <author>
            <name>Eitan</name>
            <uri>http://mememe82.wordpress.com/</uri>
        </author>
        <source>
            <id>http://blog.monotonous.org/feed/atom/</id>
            <link href="http://blog.monotonous.org" rel="alternate" type="text/html"/>
            <link href="http://blog.monotonous.org/feed/atom/" rel="self" type="application/atom+xml"/>
            <link href="http://blog.monotonous.org/osd.xml" rel="search" title="Monotonous.org" type="application/opensearchdescription+xml"/>
            <link href="https://s1.wp.com/opensearch.xml" rel="search" title="WordPress.com" type="application/opensearchdescription+xml"/>
            <link href="http://blog.monotonous.org/?pushpress=hub" rel="hub" type="text/html"/>
            <subtitle xml:lang="en">Eitan's Pitch</subtitle>
            <title xml:lang="en">Monotonous.org</title>
            <updated>2016-01-18T23:45:54Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://www.ncameron.org/blog/rss/0e4d587c-380c-40ce-954a-7206f69bc1dd</id>
        <link href="http://www.ncameron.org/blog/libmacro/" rel="alternate" type="text/html"/>
        <title>Libmacro</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>As I outlined in an <a href="http://ncameron.org/blog/procedural-macros-framework/">earlier post</a>, libmacro is a new crate designed to be used by procedural macro authors. It provides the basic API for procedural macros to interact with the compiler. I expect higher level functionality to be provided by library crates. In this post I'll go into</p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>As I outlined in an <a href="http://ncameron.org/blog/procedural-macros-framework/">earlier post</a>, libmacro is a new crate designed to be used by procedural macro authors. It provides the basic API for procedural macros to interact with the compiler. I expect higher level functionality to be provided by library crates. In this post I'll go into a bit more detail about the API I think should be exposed here.</p>

            <p>This is a lot of stuff. I've probably missed something. If you use syntax extensions today and do something with libsyntax that would not be possible with libmacro, please let me know!</p>

            <p>I previously introduced <code>MacroContext</code> as one of the gateways to libmacro. All procedural macros will have access to a <code>&amp;mut MacroContext</code>.</p>

            <h3>Tokens</h3>

            <p>I described the <code>tokens</code> module in the last post, I won't repeat that here.</p>

            <p>There are a few more things I thought of. I mentioned a <code>TokenStream</code> which is a sequence of tokens. We should also have <code>TokenSlice</code> which is a borrowed slice of tokens (the slice to <code>TokenStream</code>'s <code>Vec</code>). These should implement the standard methods for sequences, in particular they support iteration, so can be <code>map</code>ed, etc.</p>

            <p>In the earlier blog post, I talked about a token kind called <code>Delimited</code> which contains a delimited sequence of tokens. I would like to rename that to <code>Sequence</code> and add a <code>None</code> variant to the <code>Delimiter</code> enum. The <code>None</code> option is so that we can have blocks of tokens without using delimiters. It will be used for noting unsafety and other properties of tokens. Furthermore, it is useful for macro expansion (replacing the interpolated AST tokens currently present). Although <code>None</code> blocks do not affect scoping, they do affect precedence and parsing.</p>

            <p>We should provide API for creating tokens. By default these have no hygiene information and come with a span which has no place in the source code, but shows the source of the token to be the procedural macro itself (see below for how this interacts with expansion of the current macro). I expect a <code>make_</code> function for each kind of token. We should also have API for creating macros in a given scope (which do the same thing but with provided hygiene information). This could be considered an over-rich API, since the hygiene information could be set after construction. However, since hygiene is fiddly and annoying to get right, we should make it as easy as possible to work with.</p>

            <p>There should also be a function for creating a token which is just a fresh name. This is useful for creating new identifiers. Although this can be done by interning a string and then creating a token around it, it is used frequently enough to deserve a helper function.</p>

            <h3>Emitting errors and warnings</h3>

            <p>Procedural macros should report errors, warnings, etc. via the <code>MacroContext</code>. They should avoid panicking as much as possible since this will crash the compiler (once <code>catch_panic</code> is available, we should use it to catch such panics and exit gracefully, however, they will certainly still meaning aborting compilation).</p>

            <p>Libmacro will 're-export' <code>DiagnosticBuilder</code> from <a href="https://dxr.mozilla.org/rust/source/src/libsyntax/errors/mod.rs">syntax::errors</a>. I don't actually expect this to be a literal re-export. We will use libmacro's version of <code>Span</code>, for example.</p>

            <pre><code>impl MacroContext {
                pub fn struct_error(&amp;self, &amp;str) -&gt; DiagnosticBuilder;
                pub fn error(&amp;self, Option&lt;Span&gt;, &amp;str);
                }

                pub mod errors {
                pub struct DiagnosticBuilder { ... }
                impl DiagnosticBuilder { ... }
                pub enum ErrorLevel { ... }
                }
            </code></pre>

            <p>There should be a macro <code>try_emit!</code>, which reduces a <code>Result&lt;T, ErrStruct&gt;</code> to a T or calls <code>emit()</code> and then calls <code>unreachable!()</code> (if the error is not fatal, then it should be upgraded to a fatal error).</p>

            <h3>Tokenising and quasi-quoting</h3>

            <p>The simplest function here is <code>tokenize</code> which takes a string (<code>&amp;str</code>) and returns a <code>Result&lt;TokenStream, ErrStruct&gt;</code>. The string is treated like source text. The success option is the tokenised version of the string. I expect this function must take a <code>MacroContext</code> argument.</p>

            <p>We will offer a quasi-quoting macro. This will return a <code>TokenStream</code> (in contrast to today's quasi-quoting which returns AST nodes), to be precise a <code>Result&lt;TokenStream, ErrStruct&gt;</code>. The string which is quoted may include metavariables (<code>$x</code>), and these are filled in with variables from the environment. The type of the variables should be either a <code>TokenStream</code>, a <code>TokenTree</code>, or a <code>Result&lt;TokenStream, ErrStruct&gt;</code> (in this last case, if the variable is an error, then it is just returned by the macro). For example,</p>

            <pre><code>fn foo(cx: &amp;mut MacroContext, tokens: TokenStream) -&gt; TokenStream {
                quote!(cx, fn foo() { $tokens }).unwrap()
                }
            </code></pre>

            <p>The <code>quote!</code> macro can also handle multiple tokens when the variable corresponding with the metavariable has type <code>[TokenStream]</code> (or is dereferencable to it). In this case, the same syntax as used in macros-by-example can be used. For example, if <code>x: Vec&lt;TokenStream&gt;</code> then <code>quote!(cx, ($x),*)</code> will produce a <code>TokenStream</code> of a comma-separated list of tokens from the elements of <code>x</code>.</p>

            <p>Since the <code>tokenize</code> function is a degenerate case of quasi-quoting, an alternative would be to always use <code>quote!</code> and remove <code>tokenize</code>. I believe there is utility in the simple function, and it must be used internally in any case.</p>

            <p>These functions and macros should create tokens with spans and hygiene information set as described above for making new tokens. We might also offer versions which takes a scope and uses that as the context for tokenising.</p>

            <h3>Parsing helper functions</h3>

            <p>There are some common patterns for tokens to follow in macros. In particular those used as arguments for attribute-like macros. We will offer some functions which attempt to parse tokens into these patterns. I expect there will be more of these in time; to start with:</p>

            <pre><code>pub mod parsing {
                // Expects `(foo = "bar"),*`
                pub fn parse_keyed_values(&amp;TokenSlice, &amp;mut MacroContext) -&gt; Result&lt;Vec&lt;(InternedString, String)&gt;, ErrStruct&gt;;
                // Expects `"bar"`
                pub fn parse_string(&amp;TokenSlice, &amp;mut MacroContext) -&gt; Result&lt;String, ErrStruct&gt;;
                }
            </code></pre>

            <p>To be honest, given the token design in the last post, I think <code>parse_string</code> is unnecessary, but I wanted to give more than one example of this kind of function. If <code>parse_keyed_values</code> is the only one we end up with, then that is fine.</p>

            <h3>Pattern matching</h3>

            <p>The goal with the pattern matching API is to allow procedural macros to operate on tokens in the same way as macros-by-example. The pattern language is thus the same as that for macros-by-example.</p>

            <p>There is a single macro, which I propose calling <code>matches</code>. Its first argument is the name of a <code>MacroContext</code>. Its second argument is the input, which must be a <code>TokenSlice</code> (or dereferencable to one). The third argument is a pattern definition. The macro produces a <code>Result&lt;T, ErrStruct&gt;</code> where <code>T</code> is the type produced by the pattern arms. If the pattern has multiple arms, then each arm must have the same type. An error is produced if none of the arms in the pattern are matched.</p>

            <p>The pattern language follows the language for defining macros-by-example (but is slightly stricter). There are two forms, a single pattern form and a multiple pattern form. If the first character is a <code>{</code> then the pattern is treated as a multiple pattern form, if it starts with <code>(</code> then as a single pattern form, otherwise an error (causes a panic with a <code>Bug</code> error, as opposed to returning an <code>Err</code>).</p>

            <p>The single pattern form is <code>(pattern) =&gt; { code }</code>. The multiple pattern form is <code>{(pattern) =&gt; { code } (pattern) =&gt; { code } ... (pattern) =&gt; { code }}</code>. <code>code</code> is any old Rust code which is executed when the corresponding pattern is matched. The pattern follows from macros-by-example - it is a series of characters treated as literals, meta-variables indicated with <code>$</code>, and the syntax for matching multiple variables. Any meta-variables are available as variables in the righthand side, e.g., <code>$x</code> becomes available as <code>x</code>. These variables have type <code>TokenStream</code> if they appear singly or <code>Vec&lt;TokenStream&gt;</code> if they appear multiply (or <code>Vec&lt;Vec&lt;TokenStream&gt;&gt;</code> and so forth).</p>

            <p>Examples:</p>

            <pre><code>matches!(cx, input, (foo($x:expr) bar) =&gt; {quote(cx, foo_bar($x).unwrap()}).unwrap()

                matches!(cx, input, {
                () =&gt; {
                cx.err("No input?");
                }
                (foo($($x:ident),+ bar) =&gt; {
                println!("found {} idents", x.len());
                quote!(($x);*).unwrap()
                }
                }
                })
            </code></pre>

            <p>Note that since we match AST items here, our backwards compatibility story is a bit complicated (though hopefully not much more so than with current macros).</p>

            <h3>Hygiene</h3>

            <p>The intention of the design is that the actual hygiene algorithm applied is irrelevant. Procedural macros should be able to use the same API if the hygiene algorithm changes (of course the result of applying the API might change). To this end, all hygiene objects are opaque and cannot be directly manipulated by macros.</p>

            <p>I propose one module (<code>hygiene</code>) and two types: <code>Context</code> and <code>Scope</code>.</p>

            <p>A <code>Context</code> is attached to each token and contains all hygiene information about that token. If two tokens have the same <code>Context</code>, then they may be compared syntactically. The reverse is not true - two tokens can have different <code>Context</code>s and still be equal. <code>Context</code>s can only be created by applying the hygiene algorithm and cannot be manipulated, only moved and stored.</p>

            <p><code>MacroContext</code> has a method <code>fresh_hygiene_context</code> for creating a new, fresh <code>Context</code> (i.e., a <code>Context</code> not shared with any other tokens).</p>

            <p><code>MacroContext</code> has a method <code>expansion_hygiene_context</code> for getting the <code>Context</code> where the macro is defined. This is equivalent to <code>.expansion_scope().direct_context()</code>, but might be more efficient (and I expect it to be used a lot).</p>

            <p>A <code>Scope</code> provides information about a position within an AST at a certain point during macro expansion. For example,</p>

            <pre><code>fn foo() {
                a
                {
                b
                c
                }
                }
            </code></pre>

            <p><code>a</code> and <code>b</code> will have different <code>Scope</code>s. <code>b</code> and <code>c</code> will have the same <code>Scope</code>s, even if <code>b</code> was written in this position and <code>c</code> is due to macro expansion. However, a <code>Scope</code> may contain more information than just the syntactic scopes, for example, it may contain information about pending scopes yet to be applied by the hygiene algorithm (i.e., information about <code>let</code> expressions which are in scope).</p>

            <p>Note that a <code>Scope</code> means a scope in the macro hygiene sense, not the commonly used sense of a scope declared with <code>{}</code>. In particular, each <code>let</code> statement starts a new scope and the items and statements in a function body are in different scopes.</p>

            <p>The functions <code>lookup_item_scope</code> and <code>lookup_statement_scope</code> take a <code>MacroContext</code> and a path, represented as a <code>TokenSlice</code>, and return the <code>Scope</code> which that item defines or an error if the path does not refer to an item, or the item does not define a scope of the right kind.</p>

            <p>The function <code>lookup_scope_for</code> is similar, but returns the <code>Scope</code> in which an item is declared.</p>

            <p><code>MacroContext</code> has a method <code>expansion_scope</code> for getting the scope in which the current macro is being expanded.</p>

            <p><code>Scope</code> has a method <code>direct_context</code> which returns a <code>Context</code> for items declared directly (c.f., via macro expansion) in that <code>Scope</code>.</p>

            <p><code>Scope</code> has a method <code>nested</code> which creates a fresh <code>Scope</code> nested within the receiver scope.</p>

            <p><code>Scope</code> has a static method <code>empty</code> for creating an empty scope, that is one with no scope information at all (note that this is different from a top-level scope).</p>

            <p>I expect the exact API around <code>Scope</code>s and <code>Context</code>s will need some work. <code>Scope</code> seems halfway between an intuitive, algorithm-neutral abstraction, and the scopes from the sets of scopes hygiene algorithm. I would prefer a <code>Scope</code> should be more abstract, on the other hand, macro authors may want fine-grained control over hygiene application.</p>

            <h4>Manipulating hygiene information on tokens,</h4>

            <pre><code>pub mod hygiene {
                pub fn add(cx: &amp;mut MacroContext, t: &amp;Token, scope: &amp;Scope) -&gt; Token;
                // Maybe unnecessary if we have direct access to Tokens.
                pub fn set(t: &amp;Token, cx: &amp;Context) -&gt; Token;
                // Maybe unnecessary - can use set with cx.expansion_hygiene_context().
                // Also, bad name.
                pub fn current(cx: &amp;MacroContext, t: &amp;Token) -&gt; Token;
                }
            </code></pre>

            <p><code>add</code> adds <code>scope</code> to any context already on <code>t</code> (<code>Context</code> should have a similar method). Note that the implementation is a bit complex - the nature of the <code>Scope</code> might mean we replace the old context completely, or add to it.</p>

            <h4>Applying hygiene when expanding the current macro</h4>

            <p>By default, the current macro will be expanded in the standard way, having hygiene applied as expected. Mechanically, hygiene information is added to tokens when the macro is expanded. Assuming the sets of scopes algorithm, scopes (for example, for the macro's definition, and for the introduction) are added to any scopes already present on the token. A token with no hygiene information will thus behave like a token in a macro-by-example macro. Hygiene due to nested scopes created by the macro do not need to be taken into account by the macro author, this is handled at expansion time.</p>

            <p>Procedural macro authors may want to customise hygiene application (it is common in Racket), for example, to introduce items that can be referred to by code in the call-site scope.</p>

            <p>We must provide an option to expand the current macro without applying hygiene; the macro author must then handle hygiene. For this to work, the macro must be able to access information about the scope in which it is applied (see <code>MacroContext::expansion_scope</code>, above) and to supply a <code>Scope</code> indicating scopes that should be added to tokens following the macro expansion.</p>

            <pre><code>pub mod hygiene {
                pub enum ExpansionMode {
                Automatic,
                Manual(Scope),
                }
                }

                impl MacroContext {
                pub fn set_hygienic_expansion(hygiene::ExpansionMode);
                }
            </code></pre>

            <p>We may wish to offer other modes for expansion which allow for tweaking hygiene application without requiring full manual application. One possible mode is where the author provides a <code>Scope</code> for the macro definition (rather than using the scope where the macro is actually defined), but hygiene is otherwise applied automatically. We might wish to give the author the option of applying scopes due to the macro definition, but not the introduction scopes.</p>

            <p>On a related note, might we want to affect how spans are applied when the current macro is expanded? I can't think of a use case right now, but it seems like something that might be wanted.</p>

            <p>Blocks of tokens (that is a <code>Sequence</code> token) may be marked (not sure how, exactly, perhaps using a distinguished context) such that it is expanded without any hygiene being applied or spans changed. There should be a function for creating such a <code>Sequence</code> from a <code>TokenSlice</code> in the <code>tokens</code> module. The primary motivation for this is to handle the tokens representing the body on which an annotation-like macro is present. For a 'decorator' macro, these tokens will be untouched (passed through by the macro), and since they are not touched by the macro, they should appear untouched by it (in terms of hygiene and spans).</p>

            <h3>Applying macros</h3>

            <p>We provide functionality to expand a provided macro or to lookup and expand a macro.</p>

            <pre><code>pub mod apply {
                pub fn expand_macro(cx: &amp;mut MacroContext,
                expansion_scope: Scope,
                macro: &amp;TokenSlice,
                macro_scope: Scope,
                input: &amp;TokenSlice)
                -&gt; Result&lt;(TokenStream, Scope), ErrStruct&gt;;
                pub fn lookup_and_expand_macro(cx: &amp;mut MacroContext,
                expansion_scope: Scope,
                macro: &amp;TokenSlice,
                input: &amp;TokenSlice)
                -&gt; Result&lt;(TokenStream, Scope), ErrStruct&gt;;
                }
            </code></pre>

            <p>These functions apply macro hygiene in the usual way, with <code>expansion_scope</code> dictating the scope into which the macro is expanded. Other spans and hygiene information is taken from the tokens. <code>expand_macro</code> takes pending scopes from <code>macro_scope</code>, <code>lookup_and_expand_macro</code> uses the proper pending scopes. In order to apply the hygiene algorithm, the result of the macro must be parsable. The returned scope will contain pending scopes that can be applied by the macro to subsequent tokens.</p>

            <p>We could provide versions that don't take an <code>expansion_scope</code> and use <code>cx.expansion_scope()</code>. Probably unnecessary.</p>

            <pre><code>pub mod apply {
                pub fn expand_macro_unhygienic(cx: &amp;mut MacroContext,
                macro: &amp;TokenSlice,
                input: &amp;TokenSlice)
                -&gt; Result&lt;TokenStream, ErrStruct&gt;;
                pub fn lookup_and_expand_macro_unhygienic(cx: &amp;mut MacroContext,
                macro: &amp;TokenSlice,
                input: &amp;TokenSlice)
                -&gt; Result&lt;TokenStream, ErrStruct&gt;;
                }
            </code></pre>

            <p>The <code>_unhygienic</code> variants expand a macro as in the first functions, but do not apply the hygiene algorithm or change any hygiene information. Any hygiene information on tokens is preserved. I'm not sure if <code>_unhygienic</code> are the right names - using these is not necessarily unhygienic, just that we are automatically applying the hygiene algorithm.</p>

            <p>Note that all these functions are doing an eager expansion of macros, or in Scheme terms they are <code>local-expand</code> functions. </p>

            <h3>Looking up items</h3>

            <p>The function <code>lookup_item</code> takes a <code>MacroContext</code> and a path represented as a <code>TokenSlice</code> and returns a <code>TokenStream</code> for the item referred to by the path, or an error if name resolution failed. I'm not sure where this function should live.</p>

            <h3>Interned strings</h3>

            <pre><code>pub mod strings {
                pub struct InternedString;

                impl InternedString {
                pub fn get(&amp;self) -&gt; String;
                }

                pub fn intern(cx: &amp;mut MacroContext, s: &amp;str) -&gt; Result&lt;InternedString, ErrStruct&gt;;
                pub fn find(cx: &amp;mut MacroContext, s: &amp;str) -&gt; Result&lt;InternedString, ErrStruct&gt;;
                pub fn find_or_intern(cx: &amp;mut MacroContext, s: &amp;str) -&gt; Result&lt;InternedString, ErrStruct&gt;;
                }
            </code></pre>

            <p><code>intern</code> interns a string and returns a fresh <code>InternedString</code>. <code>find</code> tries to find <em>an</em> existing <code>InternedString</code>.</p>

            <h3>Spans</h3>

            <p>A span gives information about where in the source code a token is defined. It also gives information about where the token came from (how it was generated, if it was generated code).</p>

            <p>There should be a <code>spans</code> module in libmacro, which will include a <code>Span</code> type which can be easily inter-converted with the <code>Span</code> defined in libsyntax. Libsyntax spans currently include information about stability, this will not be present in libmacro spans.</p>

            <p>If the programmer does nothing special with spans, then they will be 'correct' by default. There are two important cases: tokens passed to the macro and tokens made fresh by the macro. The former will have the source span indicating where they were written and will include their history. The latter will have no source span and indicate they were created by the current macro. All tokens will have the history relating to expansion of the current macro added when the macro is expanded. At macro expansion, tokens with no source span will be given the macro use-site as their source.</p>

            <p><code>Span</code>s can be freely copied between tokens.</p>

            <p>It will probably useful to make it easy to manipulate spans. For example, rather than point at the macro's defining function, point at a helper function where the token is made. Or to set the origin to the current macro when the token was produced by another which should an implementation detail. I'm not sure what such an interface should look like (and is probably not necessary in an initial library).</p>

            <h3>Feature gates</h3>

            <pre><code>pub mod features {
                pub enum FeatureStatus {
                // The feature gate is allowed.
                Allowed,
                // The feature gate has not been enabled.
                Disallowed,
                // Use of the feature is forbidden by the compiler.
                Forbidden,
                }

                pub fn query_feature(cx: &amp;MacroContext, feature: Token) -&gt; Result&lt;FeatureStatus, ErrStruct&gt;;
                pub fn query_feature_by_str(cx: &amp;MacroContext, feature: &amp;str) -&gt; Result&lt;FeatureStatus, ErrStruct&gt;;
                pub fn query_feature_unused(cx: &amp;MacroContext, feature: Token) -&gt; Result&lt;FeatureStatus, ErrStruct&gt;;
                pub fn query_feature_by_str_unused(cx: &amp;MacroContext, feature: &amp;str) -&gt; Result&lt;FeatureStatus, ErrStruct&gt;;

                pub fn used_feature_gate(cx: &amp;MacroContext, feature: Token) -&gt; Result&lt;(), ErrStruct&gt;;
                pub fn used_feature_by_str(cx: &amp;MacroContext, feature: &amp;str) -&gt; Result&lt;(), ErrStruct&gt;;

                pub fn allow_feature_gate(cx: &amp;MacroContext, feature: Token) -&gt; Result&lt;(), ErrStruct&gt;;
                pub fn allow_feature_by_str(cx: &amp;MacroContext, feature: &amp;str) -&gt; Result&lt;(), ErrStruct&gt;;
                pub fn disallow_feature_gate(cx: &amp;MacroContext, feature: Token) -&gt; Result&lt;(), ErrStruct&gt;;
                pub fn disallow_feature_by_str(cx: &amp;MacroContext, feature: &amp;str) -&gt; Result&lt;(), ErrStruct&gt;;
                }
            </code></pre>

            <p>The <code>query_*</code> functions query if a feature gate has been set. They return an error if the feature gate does not exist. The <code>_unused</code> variants do not mark the feature gate as used. The <code>used_</code> functions mark a feature gate as used, or return an error if it does not exist.</p>

            <p>The <code>allow_</code> and <code>disallow_</code> functions set a feature gate as allowed or disallowed for the current crate. These functions will only affect feature gates which take affect after parsing and expansion are complete. They do not affect feature gates which are checked during parsing or expansion.</p>

            <p>Question: do we need the <code>used_</code> functions? Could just call <code>query_</code> and ignore the result.</p>

            <h3>Attributes</h3>

            <p>We need some mechanism for setting attributes as used. I don't actually know how the unused attribute checking in the compiler works, so I can't spec this area. But, I expect <code>MacroContext</code> to make available some interface for reading attributes on a macro use and marking them as used.</p></div>
        </content>
        <updated>2016-01-18T21:40:42Z</updated>
        <category term="Mozilla"/>
        <category term="Rust"/>
        <author>
            <name>Nick Cameron</name>
        </author>
        <source>
            <id>http://www.ncameron.org/blog/</id>
            <link href="http://www.ncameron.org/blog/" rel="alternate" type="text/html"/>
            <link href="http://www.ncameron.org/blog/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>I'm a research engineer at Mozilla working on Rust: the language, compiler, and tools.  @nick_r_cameron</subtitle>
            <title>featherweight musings</title>
            <updated>2016-01-21T08:46:18Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://geekyogre.com/rss/63eb682d-66b4-447d-8fb6-f4ed448019df</id>
        <link href="http://geekyogre.com/skizze-progress-and-repl/" rel="alternate" type="text/html"/>
        <title>Skizze progress and REPL</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><img align="center" height="190" src="http://i.imgur.com/9z47NdA.png" width="600"/> <br/>
            <br/> <br/>
            Over the last 3 weeks, based on feedback we proceeded fledging out the concepts and the code behind <a href="https://github.com/skizzehq/skizze">Skizze</a>. <br/>
            <a href="https://medium.com/@njpatel/">Neil Patel</a> suggested the following:</p>

            <hr/>

            <p><em>So I've been thinking about the server API. I think we want to choose one thing and do it as well as possible, instead of having</em></p></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><img align="center" height="190" src="http://i.imgur.com/9z47NdA.png" width="600"/> <br/>
            <br/> <br/>
            Over the last 3 weeks, based on feedback we proceeded fledging out the concepts and the code behind <a href="https://github.com/skizzehq/skizze">Skizze</a>. <br/>
            <a href="https://medium.com/@njpatel/">Neil Patel</a> suggested the following:</p>

            <hr/>

            <p><em>So I've been thinking about the server API. I think we want to choose one thing and do it as well as possible, instead of having six ways to talk to the server. I think that helps to keep things sane and simple overall.</em></p>

            <p><em>Thinking about usage, I can only really imagine Skizze in an environment like <a href="https://xamarin.com/insights">ours</a>, which is high-throughput. I think that is it's 'home' and we should be optimising for that all day long.</em></p>

            <p><em>Taking that into account, I believe we have two options:</em></p>

            <ol>
                <li><p><em>We go the gRPC route, provide .proto files and let people use the existing gRPC tooling to build support for their favourite language. That means we can happily give Ruby/Node/C#/etc devs a real way to get started up with Skizze almost immediately, piggy-backing on the gRPC docs etc.</em></p></li>
                <li><p><em>We absorb the Redis Protocol. It does everything we need, is very lean, and we can (mostly) easily adapt it for what we need to do. The downside is that to get support from other libs, there will have to be actual libraries for every language. This could slow adoption, or it might be easy enough if people can reuse existing REDIS code. It's hard to tell how that would end up.</em></p></li>
            </ol>

            <p><em>gRPC is interesting because it's built already for distributed systems, across bad networks, and obviously is bi-directional etc. Without us having to spend time on the protocol, gRPC let's us easily add features that require streaming. Like, imagine a client being able to listen for changes in count/size and be notified instantly. That's something that gRPC is built for right now.</em></p>

            <p><em>I think gRPC is a bit verbose, but I think it'll pay off for ease of third-party lib support and as things grow.</em></p>

            <p><em>The CLI could easily be built to work with gRPC, including adding support for streaming stuff etc. Which could be pretty exciting.</em></p>

            <hr/>

            <p>That being said, we gave Skizze <a href="https://github.com/skizzehq/">a new home</a>, where based on feedback we developed .proto files and started rewriting big chunks of the code.</p>

            <p>We added a new wrapper called "domain" which represents a stream. It wraps around Count-Min-Log, Bloom Filter, Top-K and HyperLogLog++, so when feeding it values it feeds all the sketches. Later we intend to allow attaching and detaching sketches from "domains" (We need a better name).</p>

            <p>We also implemented a gRPC API which should allow easy wrapper creation in other languages.</p>

            <p>Special thanks go to <a href="https://twitter.com/martinpintob">Martin Pinto</a> for helping out with unit tests and <a href="http://dopeness.org">Soren Macbeth</a> for thorough feedback and ideas about the "domain" concept. <br/>
                Take a look at our initial REPL work there:</p>

            <p><a href="http://geekyogre.com/content/images/2016/01/MBCY64aaKL.gif"><img alt="Link to this page" border="0" src="http://geekyogre.com/content/images/2016/01/skizze-1.png"/></a> <br/>
                <a href="http://geekyogre.com/content/images/2016/01/MBCY64aaKL.gif">click for GIF</a></p></div>
        </content>
        <updated>2016-01-18T17:41:43Z</updated>
        <category term="Big Data"/>
        <category term="Data Science"/>
        <author>
            <name>Seif Lotfy</name>
        </author>
        <source>
            <id>http://geekyogre.com/</id>
            <link href="http://geekyogre.com/" rel="alternate" type="text/html"/>
            <link href="http://geekyogre.com/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>The geekiest ogre alive</subtitle>
            <title>Geeky Ogre</title>
            <updated>2016-01-18T18:16:25Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://dougbelshaw.com/blog/?p=39986</id>
        <link href="http://dougbelshaw.com/blog/2016/01/18/open-badges-persona/" rel="alternate" type="text/html"/>
        <title>What a post-Persona landscape means for Open Badges</title>
        <summary>Why you shouldn't worry about Mozilla's recent announcement.</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em><strong>Note:</strong> I don’t work for Mozilla any more, so (like <a href="https://www.youtube.com/watch?v=YQHsXMglC9A">Adele</a>) these are my thoughts ‘from the outside’…</em></p>
            <hr/>
            <h3>Introduction</h3>
            <p><a href="http://openbadges.org">Open Badges</a> is no longer a <a href="http://mozilla.org">Mozilla</a> project. In fact, it hasn’t been for a while — the <a href="http://badgealliance.org">Badge Alliance</a> was set up a couple of years ago to promote the specification on a both a technical and community basis. As I stated in a recent post, this is a <strong>good</strong> thing and means that <a href="http://dougbelshaw.com/blog/2015/11/08/bright-future-badges/">the future is bright for Open Badges</a>.</p>
            <p>However, Mozilla <em>is</em> still involved with the Open Badges project: Mark Surman, Executive Director of the Mozilla Foundation, sits on the board of the Badge Alliance. Mozilla also pays for contractors to work on the <a href="http://backpack.openbadges.org">Open Badges backpack</a> and there were badges earned at the <a href="http://mozillafestival.org">Mozilla Festival</a> a few months ago.</p>
            <p>Although it may seem strange for those used to corporates interested purely in profit, Mozilla creates what the open web needs at any given time. Like any organisation, sometimes it gets these wrong, either because the concept was flawed, or because the execution was poor. Other times, I’d argue, Mozilla doesn’t give ideas and concepts enough time to gain traction.</p>
            <h3>The end of Persona at Mozilla</h3>
            <p>Open Badges, at its very essence, is a technical specification. It allows credentials with metadata hard-coded into them to be issued, exchanged, and displayed. This is done in a secure, standardised manner.</p>
            <p><img alt="OBI diagram" class="alignnone wp-image-39987 size-full" src="http://i1.wp.com/dougbelshaw.com/blog/wp-content/uploads/2016/01/obi-diagram.png?w=100%25"/></p>
            <p>For users to be able to access their ‘backpack’ (i.e. the place they store badges) they needed a secure login system.Back in 2011 at the start of the Open Badges project it made sense to make use of Mozilla’s nascent <a href="https://www.mozilla.org/en-US/persona/">Persona</a> project. This aimed to provide a way for users to easily sign into sites around the web without using their Facebook/Google logins. These ‘social’ sign-in methods mean that users are tracked around the web — something that Mozilla was obviously against.</p>
            <p>By 2014, Persona wasn’t seen to be having the kind of ‘growth trajectory’ that Mozilla wanted. The project was transferred to <a href="http://identity.mozilla.com/post/78873831485/transitioning-persona-to-community-ownership">community ownership</a> and most of the team left Mozilla in 2015. It was <a href="https://groups.google.com/forum/#!msg/mozilla.dev.identity/mibOQrD6K0c/kt0NdMWbEQAJ">announced</a> that Persona would be shutting down as a Mozilla service in November 2016. While Persona will exist as an open source project, it won’t be hosted by Mozilla.</p>
            <h3>What this means for Open Badges</h3>
            <p>Although I’m not aware of an official announcement from the Badge Alliance, I think it’s worth making three points here.</p>
            <h5>1. You can still use Persona</h5>
            <p>If you’re a developer, you can still use Persona. It’s open source. It works.</p>
            <h5>2. Persona is not central to the Open Badges Infrastructure</h5>
            <p>The Open Badges backpack is <em>one</em> place where users can store their badges. There are others, including the <a href="https://openbadgepassport.com/">Open Badge Passport</a> and <a href="https://www.openbadgeacademy.com/">Open Badge Academy</a>. MacArthur, who seed-funded the Open Badges ecosystem, have a new platform launching through <a href="https://www.lrng.org/">LRNG</a>.</p>
            <p>It is up to the organisations behind these various solutions as to how they allow users to authenticate. They may choose to allow social logins. They may force users to create logins based on their email address. They may decide to use an open source version of Persona. It’s entirely up to them.</p>
            <h5>3. A post-Persona badges system has its advantages</h5>
            <p>The Persona authentication system runs off email addresses. This means that transitioning <em>from</em> Persona to another system is relatively straightforward. It has, however, meant that for the past few years we’ve had a recurrent problem: what do you do with people being issued badges to multiple email addresses?</p>
            <p>Tying badges to emails seemed like the easiest and fastest way to get to a critical mass in terms of Open Badge adoption. Now that’s worked, we need to think in a more nuanced way about allowing users to tie multiple identities to a single badge.</p>
            <h4>Conclusion</h4>
            <p>Persona was always a slightly awkward fit for Open Badges. Although, for a time, it made sense to use Persona for authentication to the Open Badges backpack, we’re now in a post-Persona landscape. This brings with it certain advantages.</p>
            <p>As Nate Otto wrote in his post <a href="https://medium.com/badge-alliance/open-badges-in-2016-a-look-ahead-3cfe5c3c9878#.l5mhiztwx">Open Badges in 2016: A Look Ahead</a>, the project is growing up. It’s time to move beyond what was expedient at the dawn of Open Badges and look to the future. I’m sad to see the decline of Persona, but I’m excited what the future holds!</p>
            <p style="text-align: right;"><em>Header image CC BY-NC-SA <a href="https://www.flickr.com/photos/blmiers2/6904758951/">Barbara</a></em></p></div>
        </content>
        <updated>2016-01-18T11:34:19Z</updated>
        <category term="Open Badges"/>
        <category term="Badge Alliance"/>
        <category term="future"/>
        <category term="Mozilla"/>
        <category term="Persona"/>
        <author>
            <name>Doug Belshaw</name>
        </author>
        <source>
            <id>http://dougbelshaw.com/blog</id>
            <logo>http://dougbelshaw.com/blog/wp-content/plugins/podpress/images/powered_by_podpress_large.jpg</logo>
            <category scheme="http://www.itunes.com/" term="education,"/>
            <category scheme="http://www.itunes.com/" term="technology,"/>
            <category scheme="http://www.itunes.com/" term="productivity,"/>
            <category scheme="http://www.itunes.com/" term="leadership,"/>
            <category scheme="http://www.itunes.com/" term="Mozilla"/>
            <category scheme="http://www.itunes.com/" term="Education"/>
            <category scheme="http://www.itunes.com/" term="Education Technology"/>
            <category scheme="http://www.itunes.com/" term="Technology"/>
            <category scheme="http://www.itunes.com/" term="Society &amp; Culture"/>
            <category scheme="http://www.itunes.com/" term="Philosophy"/>
            <author>
                <name>Doug Belshaw</name>
                <email>dajbelshaw@gmail.com</email>
            </author>
            <link href="http://dougbelshaw.com/blog/tag/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://dougbelshaw.com/blog" rel="alternate" type="text/html"/>
            <rights>Copyright © Open Educational Thinkering 2013</rights>
            <subtitle>Doug Belshaw's blog</subtitle>
            <title>Mozilla – Doug Belshaw’s blog</title>
            <updated>2016-01-23T07:46:17Z</updated>
        </source>
    </entry>

    <entry>
        <id>tag:this-week-in-rust.org,2016-01-18:blog/2016/01/18/this-week-in-rust-114/</id>
        <link href="http://this-week-in-rust.org/blog/2016/01/18/this-week-in-rust-114/" rel="alternate" type="text/html"/>
        <title>This Week in Rust 114</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello and welcome to another issue of <em>This Week in Rust</em>!
            <a href="http://rust-lang.org">Rust</a> is a systems language pursuing the trifecta:
            safety, concurrency, and speed. This is a weekly summary of its progress and
            community. Want something mentioned? Tweet us at <a href="https://twitter.com/ThisWeekInRust">@ThisWeekInRust</a> or <a href="mailto:corey@octayn.net?subject=This%20Week%20in%20Rust%20Suggestion">send us an
                email</a>!
            Want to get involved? <a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md">We love
                contributions</a>.</p>
            <p><em>This Week in Rust</em> is openly developed <a href="https://github.com/cmr/this-week-in-rust">on GitHub</a>.
                If you find any errors in this week's issue, <a href="https://github.com/cmr/this-week-in-rust/pulls">please submit a PR</a>.</p>
            <p>This week's edition was edited by: <a href="https://github.com/nasa42">nasa42</a>, <a href="https://github.com/brson">brson</a>, and <a href="https://github.com/llogiq">llogiq</a>.</p>
            <h3>Updates from Rust Community</h3>
            <h4>News &amp; Blog Posts</h4>
            <ul>
                <li><a href="http://gregchapple.com/contributing-to-the-rust-compiler/">Guide: Contributing to the Rust compiler</a>.</li>
                <li><a href="http://www.ncameron.org/blog/a-type-safe-and-zero-allocation-library-for-reading-and-navigating-elf-files/">A type-safe and zero-allocation library for reading and navigating ELF files</a>.</li>
                <li>[podcast] <a href="http://www.newrustacean.com/show_notes/e009/">New Rustacean podcast episode 09</a>. Getting into the nitty-gritty with Rust's traits.</li>
                <li><a href="https://jadpole.github.io/arcaders/arcaders-1-12/">ArcadeRS 1.12: Brawl, at last</a>! Part of the series <a href="https://jadpole.github.io/arcaders/arcaders-1-0/">ArcadeRS 1.0: The project</a> - a series whose objective is to explore the Rust programming language and ecosystem through the development of a simple, old-school shooter.</li>
                <li><a href="https://blog.thiago.me/raspberry-pi-bare-metal-programming-with-rust/">Raspberry Pi bare metal programming with Rust</a>.</li>
                <li><a href="http://blog.servo.org/2016/01/11/twis-47/">This week in Servo 47</a>.</li>
                <li><a href="http://www.redox-os.org/news/this-week-in-redox-10/">This week in Redox OS 10</a>.</li>
            </ul>
            <h4>Notable New Crates &amp; Project Updates</h4>
            <ul>
                <li><a href="https://github.com/ebkalderon/amethyst">Amethyst</a>. Data-oriented game engine written in Rust.</li>
                <li><a href="https://www.rust-lang.org/">Rust website</a> has received some <a href="https://www.reddit.com/r/rust/comments/40zxey/major_website_updates/">major updates</a>.</li>
                <li><a href="https://packages.debian.org/stretch/rustc">Rust</a> and <a href="https://packages.debian.org/stretch/cargo">Cargo</a> are now available in Debian stretch.</li>
                <li><a href="https://community.particle.io/t/rust-on-particle-call-for-contributors/19090">Rust on Particle: Call for contributors</a>.</li>
                <li><a href="https://dwrensha.github.io/capnproto-rust/2016/01/11/async-rpc.html">capnp-rpc-rust rewritten to use async I/O</a>.</li>
                <li><a href="https://github.com/Ogeon/palette">Palette</a>. A Rust library for linear color calculations and conversion.</li>
            </ul>
            <h3>Updates from Rust Core</h3>
            <p>164 pull requests were <a href="https://github.com/issues?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2016-01-11..2016-01-18">merged in the last week</a>.</p>
            <p>See the <a href="https://internals.rust-lang.org/t/triage-digest-tue-jan-05-2016/3052">triage digest</a> and <a href="https://internals.rust-lang.org/t/subteam-reports-2016-01-08/3067">subteam reports</a> for more details.</p>
            <h4>Notable changes</h4>
            <ul>
                <li><a href="https://github.com/rust-lang/rust/pull/30943">std: Stabilize APIs for the 1.7 release</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/27807">Refactor and improve: Arena, TypedArena</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/29498">Let <code>str::replace</code> take a pattern</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30295">rustc_resolve: Fix bug in duplicate checking for extern crates</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30426">Rewrite BTreeMap to use parent pointers</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30446">Support generic associated consts</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30509">Add an <code>impl</code> for <code>Box&lt;Error&gt;</code> from String</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30533">Introduce "obligation forest" data structure into fulfillment to track backtraces</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30538">Remove negate_unsigned feature gate</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30567">llvm: Add support for vectorcall (X86_VectorCall) convention</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30676">Make coherence more tolerant of error types</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30740">Add fast path for ASCII in UTF-8 validation</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30753">Downgrade unit struct match via S(..) warnings to errors</a>.</li>
                <li><a href="https://github.com/rust-lang/rust/pull/30930">Move const block checks before lowering step</a>.</li>
            </ul>
            <h4>New Contributors</h4>
            <ul>
                <li>Anton Blanchard</li>
                <li>Jonas Tepe</li>
                <li>Jörg Krause</li>
                <li>Joshua Olson</li>
                <li>kalita.alexey</li>
                <li>Pierre Krieger</li>
                <li>Sergey Veselkov</li>
                <li>Simon Martin</li>
                <li>Steffen</li>
                <li>tomaka</li>
            </ul>
            <h4>Approved RFCs</h4>
            <p>Changes to Rust follow the Rust <a href="https://github.com/rust-lang/rfcs#rust-rfcs">RFC (request for comments)
                process</a>. These
                are the RFCs that were approved for implementation this week:</p>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1331">RFC 1331: <code>src/grammar</code> for the canonical grammar of the Rust language</a>.</li>
            </ul>
            <h4>Final Comment Period</h4>
            <p>Every week <a href="https://rust-lang.org/team.html">the team</a> announces the
                'final comment period' for RFCs and key PRs which are reaching a
                decision. Express your opinions now. <a href="https://github.com/rust-lang/rfcs/labels/final-comment-period">This week's FCPs</a> are:</p>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1462">Add <code>[</code> to the FOLLOW(ty) in macro future-proofing rules</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1457">Rewrite <code>for</code> loop desugaring to use language items</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1320">Amend 1192 (RangeInclusive) to use an enum</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/243">Trait-based exception handling</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1361">Improve Cargo target-specific dependencies</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1129">Add a <code>IndexAssign</code> trait that allows overloading "indexed assignment" expressions like <code>a[b] = c</code></a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1196">Allow eliding more type parameters</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1296">Add an <code>alias</code> attribute to <code>#[link]</code> and <code>-l</code></a>.</li>
            </ul>
            <h4>New RFCs</h4>
            <ul>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1459">Add a used attribute to prevent symbols from being discarded</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1461">Move some net2 functionality into libstd</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1465">Add <code>some!</code> macro for unwrapping Option more safely</a>.</li>
                <li><a href="https://github.com/rust-lang/rfcs/pull/1467">Stabilize the <code>volatile_load</code> and <code>volatile_store</code> intrinsics as <code>ptr::volatile_read</code> and <code>ptr::volatile_write</code></a>.</li>
            </ul>
            <h3>Upcoming Events</h3>
            <ul>
                <li><a href="http://www.meetup.com/Rust-Meetup-Hamburg/events/227838367/">1/19. Rust Hack and Learn Hamburg @ Ponton</a>.</li>
                <li><a href="http://www.meetup.com/Rust-Bay-Area/events/227841778/">1/21. SF Bay Area: Rust Concurrency and Parallelism</a>.</li>
                <li><a href="http://www.meetup.com/opentechschool-berlin/">1/27. OpenTechSchool Berlin: Rust Hack and Learn</a>.</li>
            </ul>
            <p>If you are running a Rust event please add it to the <a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com">calendar</a> to get
                it mentioned here. Email <a href="mailto:erick.tryzelaar@gmail.com">Erick Tryzelaar</a> or <a href="mailto:banderson@mozilla.com">Brian
                    Anderson</a> for access.</p>
            <h3>fn work(on: RustProject) -&gt; Money</h3>
            <ul>
                <li><a href="http://maidsafe.net/rust_engineer.html">Rust Engineer</a> at MaidSafe.</li>
                <li><a href="https://careers.mozilla.org/en-US/position/ozy21fwU">Research Engineer - Servo</a> at Mozilla.</li>
                <li><a href="https://careers.mozilla.org/en-US/position/o0H41fww">Senior Research Engineer - Rust</a> at Mozilla.</li>
                <li><a href="http://plv.mpi-sws.org/rustbelt/">PhD and postdoc positions</a> at MPI-SWS.</li>
            </ul>
            <p><em>Tweet us at <a href="https://twitter.com/ThisWeekInRust">@ThisWeekInRust</a> to get your job offers listed here!</em></p>
            <h3>Crate of the Week</h3>
            <p>This week's Crate of the Week is <a href="https://github.com/alexcrichton/toml-rs">toml</a>, a crate for all our configuration needs, simple yet effective.</p>
            <p>Thanks to <a href="https://users.rust-lang.org/users/stebalien">Steven Allen</a> for the suggestion.</p>
            <p><a href="https://users.rust-lang.org/t/crate-of-the-week/2704">Submit your suggestions for next week</a>!</p>
            <h3>Quote of the Week</h3>
            <blockquote>
                <p>Borrow/lifetime errors are usually Rust compiler bugs.
                    Typically, I will spend 20 minutes detailing the precise conditions of
                    the bug, using language that understates my immense knowledge, while
                    demonstrating sympathetic understanding of the pressures placed on a
                    Rust compiler developer, who is also probably studying for several exams
                    at the moment. The developer reading my bug report may not understand
                    this stuff as well as I do, so I will carefully trace the lifetimes of
                    each variable, where memory is allocated on the stack vs the heap, which
                    struct or function owns a value at any point in time, where borrows
                    begin and where they... oh yeah, actually that variable really doesn't
                    live long enough.</p>
            </blockquote>
            <p>— <a href="https://www.reddit.com/r/rust/comments/4084yx/my_trick_when_i_get_stuck_as_a_beginner/cysqz3s">peterjoel on /r/rust</a>.</p>
            <p>Thanks to <a href="https://users.rust-lang.org/users/WaDelma">Wa Delma</a> for the suggestion.</p>
            <p><a href="http://users.rust-lang.org/t/twir-quote-of-the-week/328">Submit your quotes for next week</a>!</p></div>
        </summary>
        <updated>2016-01-18T05:00:00Z</updated>
        <author>
            <name>Corey Richardson</name>
        </author>
        <source>
            <id>http://this-week-in-rust.org/</id>
            <link href="http://this-week-in-rust.org/" rel="alternate" type="text/html"/>
            <link href="http://this-week-in-rust.org/atom.xml" rel="self" type="application/atom+xml"/>
            <title>This Week in Rust</title>
            <updated>2016-01-25T05:00:00Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://nikkisquared.github.io/2016/01/17/what-does-your-work-mean-part-2.html</id>
        <link href="http://nikkisquared.github.io/2016/01/17/what-does-your-work-mean-part-2.html" rel="alternate" type="text/html"/>
        <title>Okay, But What Does Your Work Actually Mean, Nikki? Part 2: The Fetch Standard and Servo</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In my previous post, I started discussing in more detail what my internship entails, by talking about my first contribution to Servo. As a refresher, my first contribution was as part of my application to Outreachy, which I later revisited during my internship after a change I introduced to the HTML Standard it relied on. I’m going to expand on that last point today- specifically, how easy it is to introduce changes in <a href="https://wiki.whatwg.org/wiki/FAQ#What_is_the_WHATWG.3F">WHATWG</a>’s various standards. I’m also going to talk about how this accessibility to changing web standards affects how I can understand it, how I can help improve it, and my work on Servo.</p>

            <h3>Two Ways To Change</h3>

            <p>There are many ways to <a href="https://wiki.whatwg.org/wiki/What_you_can_do">get involved with WHATWG</a>, but there are two that I’ve become the most familiar with: firstly, by opening a discussion about a perceived issue and asking how it should be resolved; secondly, by taking on an issue approved as needing change and making the desired change. I’ve almost entirely only done the former, and the latter only for some minor typos. Any changes that relate directly to my work, however minor, are significant for me though! Like I discussed in my previous post, I brought attention to <a href="https://github.com/whatwg/html/issues/296">an inconsistency</a> that was resolved, giving me a new task of updating my first contribution to Servo to reflect the change in the HTML Standard. I’ve done that several times since, for the Fetch Standard.</p>

            <h3>Understanding Fetch</h3>

            <p>My first two weeks of my internship were spent on reading through the majority of the <a href="https://fetch.spec.whatwg.org/">Fetch Standard</a>, primarily the various Fetch functions. I took many notes describing the steps to myself, annotated with questions I had and the answers I got from either other people on the Servo team who had worked with Fetch (including my internship mentor, of course!) or people from WHATWG who were involved in the Fetch Standard. Getting so familiar with Fetch meant a few things: I would notice minor errors (such as an out of date link) that I could submit a <a href="https://github.com/whatwg/fetch/pull/173">simple fix for</a>, or a bigger issue that I couldn’t resolve myself.</p>

            <h3>Discussions &amp; Resolutions</h3>

            <p>I’m going to go into more detail about some of those bigger issues. From my perspective, when I start a discussion about a piece of documentation (such as the Fetch Standard, or reading about a programming library Servo uses), I go into it thinking “Either this documentation is incorrect, or my understanding is incorrect”. Whichever the answer is, it doesn’t mean that the documentation is bad, or that I’m bad at reading comprehension. I understand best by building up a model of something in my head, putting that to practice, and asking a lot of questions along the way. I learn by getting things wrong and figuring out why I was wrong, and sometimes in the process I uncover a point that could be made more clear, or an inconsistency! I have good examples of both of the different outcomes I listed, which I’ll cover over the next two sections.</p>

            <h5>Looking For The Big Picture</h5>

            <p>Early on in my initial review of the Fetch Standard’s several protocols, I found a major step that seemed to have no use. I understood that since I was learning Fetch on a step-by-step basis, I did not have a view of the bigger picture, so I asked around what I was missing that would help me understand this. One of the people I work with on implementing Fetch agreed with me that the step seemed to have no purpose, and so we decided to <a href="https://github.com/whatwg/fetch/issues/174">open an issue</a> asking about removing it from the standard. It turned out that I had actually missed the meaning of it, as we learned. However, instead of leaving it there, I shifted the issue into asking for some explanatory notes on why this step is needed, which was fulfilled. This meant that I would have a reference to go back to should I forget the significance of the step, and that people reading the Fetch Standard in the future would be much less likely to come to the same incorrect conclusion I had.</p>

            <h5>A Confusing Order</h5>

            <p>Shortly after I had first discovered that apparent issue, I found myself struggling to comprehend a sequence of actions in another Fetch protocol. The specification seemed to say that part of an early step was meant to only be done after the final step. I unfortunately don’t remember details of the discussion I had about this- if there was a reason for why it was organized like this, I forget what it was. Regardless, it was agreed that <a href="https://github.com/whatwg/fetch/issues/176">moving those sub-steps</a> to be actually listed after the step they’re supposed to run after would be a good change. This meant that I would need to re-organize my notes to reflect the re-arranged sequence of actions, as well as have an easier time being able to follow this part of the Fetch Standard.</p>

            <h3>A Living Standard</h3>

            <p>Like I said at the start of this post, I’m going to talk about how changes in the Fetch Standard affects my work on Servo itself. What I’ve covered so far has mostly been how changes affect my understanding of the standard itself. A key aspect in understanding the Fetch protocols is reviewing them for updates that impact me. WHATWG labels every standard they author as a “<a href="https://wiki.whatwg.org/wiki/FAQ#What_does_.22Living_Standard.22_mean.3F">Living Standard</a>” for good reason. It was one thing for me to learn how easy it is to introduce changes, while knowing exactly what’s going on, but it’s another for me to understand that anybody else can, and often does, make changes to the Fetch Standard!</p>

            <h5>Changes Over Time</h5>

            <p>When an update is made to the Fetch Standard, it’s not so difficult to deal with as one might imagine. The Fetch Standard always notes the last day it was updated at the top of the document, I follow a Twitter account that <a href="https://twitter.com/fetchstandard">posts about updates</a>, and all the history can be <a href="https://github.com/whatwg/fetch/commits">seen on GitHub</a> which will show me exactly what has been changed as well as some discussion on what the change does. All of these together alert me to the fact that the Fetch Standard has been modified, and I can quickly see what was revised. If it’s relevant to what I’m going to be implementing, I update my notes to match it. Occasionally, I need to change existing code to reflect the new Standard, which is also easily done by comparing my new notes to the Fetch implementation in Servo!</p>

            <h5>Snapshots</h5>

            <p>From all of this, it might sound like the Fetch Standard is unfinished, or unreliable/inconsistent. I don’t mean to misrepresent it- the many small improvements help make the Fetch Standard, like all of WHATWG’s standards, better and more reliable. You can think of the status of the Fetch Standard at any point in time as a single, working snapshot. If somebody implemented all of Fetch as it is now, they’d have something that works by itself correctly. A different snapshot of Fetch is just that- different. It will have an improvement or two, but that doesn’t obsolete anybody who implemented it previously. It just means if they revisit the implementation, they’ll have things to update.</p>

            <p>Third post over.</p></div>
        </summary>
        <updated>2016-01-17T20:20:27Z</updated>
        <category term="outreachy,"/>
        <category term="planet"/>
        <source>
            <id>http://nikkisquared.github.io/</id>
            <author>
                <name>Nikki Bee</name>
            </author>
            <link href="http://nikkisquared.github.io/" rel="alternate" type="text/html"/>
            <link href="http://nikkisquared.github.io/feed.xml" rel="self" type="application/rss+xml"/>
            <subtitle>Hi! I'm currently doing an internship for Outreachy. Wow!</subtitle>
            <title>Nikki Bee Blog</title>
            <updated>2016-01-18T05:28:11Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-us">
        <id>http://ngokevin.com/blog/aframe-component/</id>
        <link href="http://ngokevin.com/blog/aframe-component/" rel="alternate" type="text/html"/>
        <title>How to Write an A-Frame VR Component</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><img align="left" hspace="5" src="http://thevrjump.com/assets/img/articles/aframe-system/aframe-example.jpg" width="320"/>Abstract representation of components by @rubenmueller of thevrjump.com.

            <p><a href="http://ngokevin.com/blog/aframe">A-Frame</a> is a WebVR framework that introduces the
                <a href="http://ngokevin.com/blog/aframe-vs-3dml">entity-component system</a> (<a href="http://ngokevin.com/rss/docs">docs</a>) to the DOM. The
                entity-component system treats every <strong>entity</strong> in the scene as a placeholder
                object which we apply and mix <strong>components</strong> to in order to add appearance,
                behavior, and functionality. A-Frame comes with some standard components out of
                the box like camera, geometry, material, light, or sound. However, people can
                write, publish, and register their own components to do <strong>whatever</strong> they want
                like have entities <a href="https://github.com/dmarcos/a-invaders/tree/master/js/components">collide/explode/spawn</a>, be controlled by
                <a href="https://github.com/ngokevin/aframe-physics-components">physics</a>, or <a href="https://jsbin.com/dasefeh/edit?html,output">follow a path</a>. Today, we'll be going through
                how we can write our own A-Frame components.</p>
            <blockquote>
                <p>Note that this tutorial will be covering the upcoming release of <a href="https://github.com/aframevr/aframe/blob/dev/CHANGELOG.md#dev">A-Frame
                    0.2.0</a> which vastly improves the component API.</p>
            </blockquote>
            <h3>Table of Contents</h3>
            <ul>
                <li><a href="http://ngokevin.com/rss/index.xml#what-a-component-looks-like">What a Component Looks Like</a><ul>
                    <li><a href="http://ngokevin.com/rss/index.xml#from-the-dom">From the DOM</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#under-the-hood">Under the Hood</a></li>
                </ul>
                </li>
                <li><a href="http://ngokevin.com/rss/index.xml#defining-the-schema">Defining the Schema</a><ul>
                    <li><a href="http://ngokevin.com/rss/index.xml#property-types">Property Types</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#single-property-schemas">Single-Property Schemas</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#multiple-property-schemas">Multiple-Property Schemas</a></li>
                </ul>
                </li>
                <li><a href="http://ngokevin.com/rss/index.xml#defining-the-lifecycle-methods">Defining the Lifecycle Methods</a><ul>
                    <li><a href="http://ngokevin.com/rss/index.xml#component-init-set-up">Component.init() - Set Up</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#component-update-olddata-do-the-magic">Component.update(oldData) - Do the Magic</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#component-remove-tear-down">Component.remove() - Tear Down</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#component-tick-time-background-behavior">Component.tick() - Background Behavior</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#component-pause-and-component-play-stop-and-go">Component.pause() and Component.play() - Stop and Go</a></li>
                </ul>
                </li>
                <li><a href="http://ngokevin.com/rss/index.xml#boilerplate">Boilerplate</a></li>
                <li><a href="http://ngokevin.com/rss/index.xml#examples">Examples</a><ul>
                    <li><a href="http://ngokevin.com/rss/index.xml#text-component">Text Component</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#physics-components">Physics Components</a></li>
                    <li><a href="http://ngokevin.com/rss/index.xml#layout-component">Layout Component</a></li>
                </ul>
                </li>
            </ul>
            <h3>What a Component Looks Like</h3>
            <p>A component contains a bucket of data in the form of component properties. This
                data is used to modify the entity. For example, we might have an <em>engine</em>
                component. Possible properties might be <em>horsepower</em> or <em>cylinders</em>.</p>
            <p><img alt="" src="http://thevrjump.com/assets/img/articles/aframe-system/aframe-system.jpg"/>
            </p><div class="page-caption"><span>
                Abstract representation of a component by @rubenmueller of thevrjump.com.
            </span></div><p/>
            <h4>From the DOM</h4>
            <p>Let's first see what a component looks like from the DOM.</p>
            <p>For example, the <a href="https://aframe.io/docs/components/light.html">light component</a> has properties such as type, color,
                and intensity. In A-Frame, we register and configure a component to an entity
                using an HTML attribute and a style-like syntax:</p>
            <div class="highlight"><pre><span class="p">&lt;</span><span class="nt">a-entity</span> <span class="na">light</span><span class="o">=</span><span class="s">"type: point; color: crimson; intensity: 2.5"</span><span class="p">&gt;&lt;/</span><span class="nt">a-entity</span><span class="p">&gt;</span>
            </pre></div>


            <p>This would give us a light in the scene. To demonstrate composability, we could
                give the light a spherical representation by mixing in the <a href="https://aframe.io/docs/components/geometry.html">geometry
                    component</a>.</p>
            <div class="highlight"><pre><span class="p">&lt;</span><span class="nt">a-entity</span> <span class="na">geometry</span><span class="o">=</span><span class="s">"primitive: sphere; radius: 5"</span>
                <span class="na">light</span><span class="o">=</span><span class="s">"type: point; color: crimson; intensity: 2.5"</span><span class="p">&gt;&lt;/</span><span class="nt">a-entity</span><span class="p">&gt;</span>
            </pre></div>


            <p>Or we can configure the position component to move the light sphere a bit to the right.</p>
            <div class="highlight"><pre><span class="p">&lt;</span><span class="nt">a-entity</span> <span class="na">geometry</span><span class="o">=</span><span class="s">"primitive: sphere; radius: 5"</span>
                <span class="na">light</span><span class="o">=</span><span class="s">"type: point; color: crimson; intensity: 2.5"</span>
                <span class="na">position</span><span class="o">=</span><span class="s">"5 0 0"</span><span class="p">&gt;&lt;/</span><span class="nt">a-entity</span><span class="p">&gt;</span>
            </pre></div>


            <p>Given the style-like syntax and that it modifies the appearance and behavior of
                DOM nodes, component properties can be thought of as a rough analog to CSS. In
                the near future, I can imagine component property stylesheets.</p>
            <h4>Under the Hood</h4>
            <p>Now let's see what a component looks like <strong>under the hood</strong>. A-Frame's most
                basic component is the <a href="https://aframe.io/docs/components/position.html">position component</a>:</p>
            <div class="highlight"><pre><span class="nx">AFRAME</span><span class="p">.</span><span class="nx">registerComponent</span><span class="p">(</span><span class="s1">'position'</span><span class="p">,</span> <span class="p">{</span>
                <span class="nx">schema</span><span class="o">:</span> <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">'vec3'</span> <span class="p">},</span>

                <span class="nx">update</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">object3D</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">object3D</span><span class="p">;</span>
                <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
                <span class="nx">object3D</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">z</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="p">});</span>
            </pre></div>


            <p>The position component uses only a tiny subset of the component API, but what
                this does is register the component with the name "position", define a <code>schema</code>
                where the component's value with be parsed to an <code>{x, y, z}</code> object, and when
                the component initializes or the component's data updates, set the position of
                the entity with the <code>update</code> callback. <code>this.el</code> is a reference from the
                component to the DOM element, or entity, and <code>object3D</code> is the entity's
                <a href="http://threejs.org/">three.js</a>. Note that A-Frame is built on top of three.js so many
                components will be using the three.js API.</p>
            <p>So we see that components consist of a name and a definition, and then they can
                be registered to A-Frame. We saw the the position component definition defined
                a <code>schema</code> and an <code>update</code> handler. Components simply consist of the <code>schema</code>,
                which defines the shape of the data, and several handlers for the component to
                modify the entity in reaction to different types of events.</p>
            <p>Here is the current list of properties and methods of a component definition:</p>
            <table class="pure-table-striped">
                <tbody><tr>
                    <th>Property</th>
                    <th>Description</th>
                </tr>
                    <tr>
                        <td>data</td>
                        <td>Data of the component derived from the schema default values, mixins, and the entity's attributes.</td>
                    </tr>
                    <tr>
                        <td>el</td>
                        <td>Reference to the <a href="https://aframe.io/docs/core/entity.html">entity</a> element.</td>
                    </tr>
                    <tr>
                        <td>schema</td>
                        <td>Names, types, and default values of the component property value(s)</td>
                    </tr>
                </tbody></table>

            <table class="pure-table-striped">
                <tbody><tr><th>Method</th><th>Description</th></tr>
                    <tr>
                        <td>init</td>
                        <td>Called once when the component is initialized.</td>
                    </tr>
                    <tr>
                        <td>update</td>
                        <td>Called both when the component is initialized and whenever the component's data changes (e.g, via <i>setAttribute</i>).</td>
                    </tr>
                    <tr>
                        <td>remove</td>
                        <td>Called when the component detaches from the element (e.g., via <i>removeAttribute</i>).</td>
                    </tr>
                    <tr>
                        <td>tick</td>
                        <td>Called on each render loop or tick of the scene.</td>
                    </tr>
                    <tr>
                        <td>play</td>
                        <td>Called whenever the scene or entity plays to add any background or dynamic behavior.</td>
                    </tr>
                    <tr>
                        <td>pause</td>
                        <td>Called whenever the scene or entity pauses to remove any background or dynamic behavior.</td>
                    </tr>
                </tbody></table>

            <h3>Defining the Schema</h3>
            <p>The component's schema defines what type of data it takes. A component can
                either be single-property or consist of multiple properties. And properties
                have <em>property types</em>. Note that single-property schemas and property types are
                being released in A-Frame <code>v0.2.0</code>.</p>
            <p>A property might look like:</p>
            <div class="highlight"><pre><span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">'int'</span><span class="p">,</span> <span class="k">default</span><span class="o">:</span> <span class="mi">5</span> <span class="p">}</span>
            </pre></div>


            <p>And a schema consisting of multiple properties might look like:</p>
            <div class="highlight"><pre><span class="p">{</span>
                <span class="nx">color</span><span class="o">:</span> <span class="p">{</span> <span class="k">default</span><span class="o">:</span> <span class="s1">'#FFF'</span> <span class="p">},</span>
                <span class="nx">target</span><span class="o">:</span> <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s1">'selector'</span> <span class="p">},</span>
                <span class="nx">uv</span><span class="o">:</span> <span class="p">{</span>
                <span class="k">default</span><span class="o">:</span> <span class="s1">'1 1'</span><span class="p">,</span>
                <span class="nx">parse</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">value</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">' '</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="p">},</span>
                <span class="p">}</span>
            </pre></div>


            <p>Since components in the entity-component system are just buckets of data that
                are used to affect the appearance or behavior of the entity, the schema plays a
                crucial role in the definition of the component.</p>
            <h4>Property Types</h4>
            <p>A-Frame comes with several built-in property types such as <code>boolean</code>, <code>int</code>,
                <code>number</code>, <code>selector</code>, <code>string</code>, or <code>vec3</code>. Every single property is assigned a
                type, whether explicitly through the <code>type</code> key or implictly via inferring the
                value. And each type is used to assign <code>parse</code> and <code>stringify</code> functions. The
                parser deserializes the incoming string value from the DOM to be put into the
                component's data object. The stringifier is used when using <code>setAttribute</code> to
                serialize back to the DOM.</p>
            <p>We can actually define and register our own property types:</p>
            <div class="highlight"><pre><span class="nx">AFRAME</span><span class="p">.</span><span class="nx">registerPropertyType</span><span class="p">(</span><span class="s1">'radians'</span><span class="p">,</span> <span class="p">{</span>
                <span class="nx">parse</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>

                <span class="p">}</span>

                <span class="c1">// Default stringify is .toString().</span>
                <span class="p">});</span>
            </pre></div>


            <h4>Single-Property Schemas</h4>
            <p>If a component has only one property, then it must either have a <code>type</code> or a
                <code>default</code> value. If the type is defined, then the type is used to parse and
                coerce the string retrieved from the DOM (e.g., <code>getAttribute</code>). Or if the
                default value is defined, the default value is used to infer the type.</p>
            <p>Take for instance the <a href="https://aframe.io/docs/components/visible.html">visible component</a>. The schema property
                definition implicitly defines it as a boolean:</p>
            <div class="highlight"><pre><span class="nx">AFRAME</span><span class="p">.</span><span class="nx">registerComponent</span><span class="p">(</span><span class="s1">'visible'</span><span class="p">,</span> <span class="p">{</span>
                <span class="nx">schema</span><span class="o">:</span> <span class="p">{</span>
                <span class="c1">// Type will be inferred to be boolean.</span>
                <span class="k">default</span><span class="o">:</span> <span class="kc">true</span>
                <span class="p">},</span>

                <span class="c1">// ...</span>
                <span class="p">});</span>
            </pre></div>


            <p>Or the <a href="https://aframe.io/docs/components/rotation.html">rotation component</a> which explicitly defines the value as a <code>vec3</code>:</p>
            <div class="highlight"><pre><span class="nx">AFRAME</span><span class="p">.</span><span class="nx">registerComponent</span><span class="p">(</span><span class="s1">'rotation'</span><span class="p">,</span> <span class="p">{</span>
                <span class="nx">schema</span><span class="o">:</span> <span class="p">{</span>
                <span class="c1">// Default value will be 0, 0, 0 as defined by the vec3 property type.</span>
                <span class="nx">type</span><span class="o">:</span> <span class="s1">'vec3'</span>
                <span class="p">}</span>

                <span class="c1">// ...</span>
                <span class="p">});</span>
            </pre></div>


            <p>Using these defined property types, schemas are processed by
                <code>registerComponent</code> to inject default values, parsers, and stringifiers for
                each property. So if a default value is not defined, the default value will be
                whatever the property type defines as the "default default value".</p>
            <h4>Multiple-Property Schemas</h4>
            <p>If a component has multiple properties (or one named property), then it consists of
                one or more property definitions, in the form described above, in an object keyed by
                property name. For instance, a physics body component might define a schema:</p>
            <div class="highlight"><pre><span class="nx">AFRAME</span><span class="p">.</span><span class="nx">registerComponent</span><span class="p">(</span><span class="s1">'physics-body'</span><span class="p">,</span> <span class="p">{</span>
                <span class="nx">schema</span><span class="o">:</span> <span class="p">{</span>
                <span class="nx">boundingBox</span><span class="o">:</span> <span class="p">{</span>
                <span class="nx">type</span><span class="o">:</span> <span class="s1">'vec3'</span><span class="p">,</span>
                <span class="k">default</span><span class="o">:</span> <span class="p">{</span> <span class="nx">x</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">z</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span>
                <span class="p">},</span>
                <span class="nx">mass</span><span class="o">:</span> <span class="p">{</span>
                <span class="k">default</span><span class="o">:</span> <span class="mi">0</span>
                <span class="p">},</span>
                <span class="nx">velocity</span><span class="o">:</span> <span class="p">{</span>
                <span class="nx">type</span><span class="o">:</span> <span class="s1">'vec3'</span>
                <span class="p">}</span>
                <span class="p">}</span>
                <span class="p">}</span>
            </pre></div>


            <p>Having multiple properties is what makes the component take the syntax in the
                form of <code>physics="mass: 2; velocity: 1 1 1"</code>.</p>
            <p>With the schema defined, all data coming into the component will be passed
                through the schema for parsing. Then in the lifecycle methods, the component
                has access to <code>this.data</code> which in a single-property schema is a value and in a
                multiple-propery schema is an object.</p>
            <h3>Defining the Lifecycle Methods</h3>
            <h4>Component.init() - Set Up</h4>
            <p><code>init</code> is called once in the component's lifecycle when it is mounted to the
                entity. <code>init</code> is generally used to set up variables or members that may used
                throughout the component or to set up state. Though not every component will
                need to define an <code>init</code> handler. Sort of like the component-equivalent method
                to <code>createdCallback</code> or <code>React.ComponentDidMount</code>.</p>
            <p>For example, the <code>look-at</code> component's <code>init</code> handler sets up some variables:</p>
            <div class="highlight"><pre><span class="nx">init</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">target3D</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">vector</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">();</span>
                <span class="p">},</span>

                <span class="c1">// ...</span>
            </pre></div>


            <h4>Component.update(oldData) - Do the Magic</h4>
            <p>The <code>update</code> handler is called both at the beginning of the component's
                lifecycle with the initial <code>this.data</code> <em>and</em> every time the component's data
                changes (generally during the entity's <code>attributeChangedCallback</code> like with a
                <code>setAttribute</code>). The update handler gets access to the previous state of the
                component data passed in through <code>oldData</code>. The previous state of the component
                can be used to tell exactly which properties changed to do more granular
                updates.</p>
            <p>The update handler uses <code>this.data</code> to modify the entity, usually interacting
                with three.js APIs. One of the simplest update handlers is the
                <a href="https://aframe.io/docs/components/visible.html">visible</a> component's:</p>
            <div class="highlight"><pre><span class="nx">update</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">object3D</span><span class="p">.</span><span class="nx">visible</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
                <span class="p">}</span>
            </pre></div>


            <p>A slightly more complex update handler might be the <a href="https://aframe.io/docs/components/light.html">light</a> component's,
                which we'll show via abbreviated code:</p>
            <div class="highlight"><pre><span class="nx">update</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">oldData</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">diffData</span> <span class="o">=</span> <span class="nx">diff</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">oldData</span> <span class="o">||</span> <span class="p">{});</span>

                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">light</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">(</span><span class="s1">'type'</span> <span class="k">in</span> <span class="nx">diffData</span><span class="p">))</span> <span class="p">{</span>
                <span class="c1">// If there is an existing light and the type hasn't changed, update light.</span>
                <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">diffData</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">property</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">light</span><span class="p">[</span><span class="nx">property</span><span class="p">]</span> <span class="o">=</span> <span class="nx">diffData</span><span class="p">[</span><span class="nx">property</span><span class="p">];</span>
                <span class="p">});</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="c1">// No light exists yet or the type of light has changed, create a new light.</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">light</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getLight</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">));</span>

                <span class="c1">// Register the object3D of type `light` to the entity.</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">setObject3D</span><span class="p">(</span><span class="s1">'light'</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">light</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="p">}</span>
            </pre></div>


            <p>The entity's <code>object3D</code> is a plain THREE.Object3D. Other three.js object types
                such as meshes, lights, and cameras can be set with <code>setObject3D</code> where they
                will be appeneded to the entity's <code>object3D</code>.</p>
            <h4>Component.remove() - Tear Down</h4>
            <p>The <code>remove</code> handler is called when the component detaches from the entity such
                as with <code>removeAttribute</code>. This is generally used to remove all modifications,
                listeners, and behaviors to the entity that the component added.</p>
            <p>For example, when the <a href="https://aframe.io/docs/components/light.html">light component</a> detaches, it removes the light
                it previously attached from the entity and thus the scene:</p>
            <div class="highlight"><pre><span class="nx">remove</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">removeObject3D</span><span class="p">(</span><span class="s1">'light'</span><span class="p">);</span>
                <span class="p">}</span>
            </pre></div>


            <h4>Component.tick(time) - Background Behavior</h4>
            <p>The <code>tick</code> handler is called on every single tick or render loop of the scene.
                So expect it to run on the order of 60-120 times for second. The global uptime of
                the scene in seconds is passed into the tick handler.</p>
            <p>For example, the <a href="https://aframe.io/docs/components/look-at.html">look-at</a> component, which instructs an entity to
                look at another target entity, uses the tick handler to update the rotation in
                case the target entity changes its position:</p>
            <div class="highlight"><pre><span class="nx">tick</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// target3D and vector are set from the update handler.</span>
                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">target3D</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">object3D</span><span class="p">.</span><span class="nx">lookAt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vector</span><span class="p">.</span><span class="nx">setFromMatrixPosition</span><span class="p">(</span><span class="nx">target3D</span><span class="p">.</span><span class="nx">matrixWorld</span><span class="p">));</span>
                <span class="p">}</span>
                <span class="p">}</span>
            </pre></div>


            <h4>Component.pause() and Component.play() - Stop and Go</h4>
            <p>To support pause and play, just as with a video game or to toggle entities for
                performance, components can implement <code>play</code> and <code>pause</code> handlers. These are
                invoked when the component's entity runs its <code>play</code> or <code>pause</code> method. When an
                entity plays or pauses, all of its child entities are also played or paused.</p>
            <p>Components should implement play or pause handlers if they register any
                dynamic, asynchronous, or background behavior such as animations, event
                listeners, or tick handlers.</p>
            <p>For example, the <code>look-controls</code> component simply removes its event listeners
                such that the camera does not move when the scene is paused, and it adds its
                event listeners when the scene starts playing or is resumed:</p>
            <div class="highlight"><pre><span class="nx">pause</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">removeEventListeners</span><span class="p">()</span>
                <span class="p">},</span>

                <span class="nx">play</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">addEventListeners</span><span class="p">()</span>
                <span class="p">}</span>
            </pre></div>


            <h3>Boilerplate</h3>
            <p>I suggest that people start off with my <a href="https://github.com/ngokevin/aframe-component-boilerplate">component boilerplate</a>,
                even hardcore tool junkies. This will get you straight into building a
                component and comes with everything you will need to publish your component
                into the wild. The boilerplate handles creating a stubbed component, build
                steps for both NPM and browser distribution files, and publishing to Github
                Pages.</p>
            <p>Generally with boilerplates, it is better to start from scratch and build your
                own boilerplate, but the A-Frame component boilerplate contains a lot of tribal
                inside knowledge about A-Frame and is updated frequently to reflect new things
                landing on A-Frame. The only possibly opinionated pieces about the boilerplate
                is the development tools it internally uses that are hidden away by NPM
                scripts.</p>
            <h3>Examples</h3>
            <p>Under construction. Stay tuned!</p>
            <h4>Text Component</h4>
            <p><a href="https://github.com/ngokevin/aframe-text-component">Text component</a></p>
            <h4>Physics Components</h4>
            <p><a href="https://github.com/ngokevin/aframe-physics-components">Physics components</a></p>
            <h4>Layout Component</h4>
            <p><a href="https://github.com/ngokevin/aframe-layout-component">Layout component</a></p></div>
        </summary>
        <updated>2016-01-17T00:00:00Z</updated>
        <source>
            <id>http://ngokevin.com/rss</id>
            <author>
                <name>Kevin Ngo</name>
            </author>
            <link href="http://ngokevin.com/rss" rel="self" type="application/rss+xml"/>
            <link href="http://ngokevin.com/rss" rel="alternate" type="text/html"/>
            <updated>2016-01-26T18:09:34Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.gerv.net/?p=3527</id>
        <link href="http://feedproxy.google.com/~r/HackingForChrist/~3/DN054t04_dE/" rel="alternate" type="text/html"/>
        <link href="http://blog.gerv.net/2016/01/convenient-and-creepy/#comments" rel="replies" type="text/html"/>
        <link href="http://blog.gerv.net/2016/01/convenient-and-creepy/feed/atom/" rel="replies" type="application/atom+xml"/>
        <title xml:lang="en-US">Convenient… and Creepy</title>
        <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">The last Mozilla All-Hands was at one of the hotels in the Walt Disney World Resort in Florida. Every attendee was issued with one of these (although their use was optional): It’s called a “Magic Band”. You register it online … <a href="http://blog.gerv.net/2016/01/convenient-and-creepy/">Continue reading <span class="meta-nav">→</span></a></div>
        </summary>
        <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>The last Mozilla All-Hands was at one of the hotels in the Walt Disney World Resort in Florida. Every attendee was issued with one of these (although their use was optional):<br/>
            <a href="http://blog.gerv.net/files/2016/01/Disneys_MagicBand.jpg"><img class="alignnone size-large wp-image-3530" src="http://blog.gerv.net/files/2016/01/Disneys_MagicBand-1024x832.jpg" width="292"/></a></p>
            <p>It’s called a “Magic Band”. You register it online and connect it to your Disney account, and then it can be used for park entry, entry to pre-booked rides so you don’t have to queue (called “FastPass+”), payment, picking up photos, as your room key, and all sorts of other convenient features. Note that it has no UI whatsoever – no lights, no buttons. Not even a battery compartment. (It does contain a battery, but it’s not replaceable.) These are specific design decisions – the aim is for ultra-simple convenience.</p>
            <p>One of the talks we had at the All Hands was from one of the Magic Band team. The audience reactions to some of the things he said was really interesting. He gave the example of Cinderella wishing you a Happy Birthday as you walk round the park. “Cinderella just knows”, he said. Of course, in fact, her costume’s tech prompts her when it silently reads your Magic Band from a distance. This got some initial impressed applause, but it was noticeable that after a few moments, it wavered – people were thinking “Cool… er, but creepy?”</p>
            <p>The Magic Band also has range sufficient that Disney can track you around the park. This enables some features which are good for both customers and Disney – for example, they can use it for load balancing. If one area of the park seems to be getting overcrowded, have some characters pop up in a neighbouring area to try and draw people away. But it means that they always know where you are and where you’ve been.</p>
            <p>My take-away from learning about the Magic Band is that it’s really hard to have a technical solution to this kind of requirement which allows all the Convenient features but not the Creepy features. Disney does offer an RFID-card-based solution for the privacy-conscious which does some of these things, but not all of them. And it’s easier to lose. It seems to me that the only way to distinguish the two types of feature, and get one and not the other, is policy – either the policy of the organization, or external restrictions on them (e.g. from a watchdog body’s code of conduct they sign up to, or from law). And it’s often not in the organization’s interest to limit themselves in this way.</p>
            <img alt="" height="1" src="http://feeds.feedburner.com/~r/HackingForChrist/~4/DN054t04_dE" width="1"/></div>
        </content>
        <updated>2016-01-16T12:18:38Z</updated>
        <published>2016-01-16T12:18:38Z</published>
        <category scheme="http://blog.gerv.net" term="Mozilla"/>
        <category scheme="http://blog.gerv.net" term="Syndicate"/><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://blog.gerv.net/2016/01/convenient-and-creepy/</feedburner:origLink>
        <author>
            <name>gerv</name>
        </author>
        <source>
            <id>http://blog.gerv.net/feed/atom/</id>
            <link href="http://blog.gerv.net" rel="alternate" type="text/html"/>
            <link href="http://feeds.feedburner.com/HackingForChrist" rel="self" type="application/atom+xml"/>
            <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
            <subtitle xml:lang="en-US">Gervase Markham</subtitle>
            <title xml:lang="en-US">Syndicate – Hacking for Christ</title>
            <updated>2016-01-16T12:18:38Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://www.christianheilmann.com/?p=4957</id>
        <link href="https://www.christianheilmann.com/2016/01/16/dont-tell-me-what-my-browser-cant-do/" rel="alternate" type="text/html"/>
        <title>Don’t tell me what my browser can’t do!</title>
        <summary>Chances are, your guess is wrong! Arrogance towards possible customers never pays out – as shown in “Pretty Woman” There is nothing more frustrating than being capable of something and not getting a chance to do it. The same goes for being blocked out from something although you are capable of consuming it. Or you’re […]</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em class="markup--em markup--p-em">Chances are, your guess is wrong!</em></p>

            <p/><figure><img alt="you are obviously in the wrong place" src="https://d262ilb51hltx0.cloudfront.net/max/800/1*l9jPbOyAl00kjPhyNYA-IQ.jpeg" width="100%"/>Arrogance towards possible customers never pays out – as shown in “Pretty Woman”</figure><p/>

            <p>There is nothing more frustrating than being capable of something and not getting a chance to do it. The same goes for being blocked out from something although you are capable of consuming it. Or you’re even willing to put some extra effort or even money in and you still don’t get to consume it.</p>

            <p>For example, I’d happily pay $50 a month to get access to Netflix’s world-wide library from any country I’m in. But the companies Netflix get their content from won’t go for that. Movies and TV show are budgeted by predicted revenue in different geographical markets with month-long breaks in between the releases. A world-wide network capable of delivering content in real time? Preposterous — let’s shut that down.</p>

            <p>On a less “let’s break a 100 year old monopoly” scale of annoyance, <a href="https://twitter.com/codepo8/status/687616620529844224">I tweeted yesterday something glib and apparently cruel</a>:</p>

            <p/><blockquote>“Sorry, but your browser does not support WebGL!” – sorry, you are a shit coder.</blockquote><p/>

            <p><strong>And I stand by this</strong>. I went to a web site that promised me some cute, pointless animation and technological demo. I was using Firefox Nightly — a WebGL capable browser. I also went there with Microsoft Edge — another WebGL capable browser. Finally, using Chrome, I was able to delight in seeing an animation.</p>

            <p><strong>I’m not saying the creators of that thing lack in development capabilities</strong>. The demo was slick, beautiful and well coded. They still do lack in two things developers of <em>web products </em>(and I count apps into that) should have: empathy for the end user and an understanding that they are not in control.</p>

            <p>Now, I am a pretty capable technical person. When you tell me that I might be lacking WebGL, I know what you mean. I don’t lack WebGL. I was blocked out because the web site did browser sniffing instead of capability testing. But I know what could be the problem.</p>

            <p>A normal user of the web has no idea what WebGL is and — if you’re lucky — will try to find it on an app store. If you’re not lucky all you did is confuse a person. A person who went through the effort to click a link, open a browser and wait for your thing to load. A person that feels stupid for using your product as they have no clue what WebGL is and won’t ask. Humans hate feeling stupid and we do anything not to appear it or show it.</p>

            <p>This is what I mean by empathy for the end user. Our problems should never become theirs.</p>

            <p/><blockquote>A cryptic error message telling the user that they lack some technology helps nobody and is sloppy development at best, sheer arrogance at worst.</blockquote><p/>

            <p>The web is, sadly enough, littered with unhelpful error messages and assumptions that it is the user’s fault when they can’t consume the thing we built.</p>

            <p>Here’s a reality check — this is what our users should have to do to consume the things we build:</p>

            <p><img alt="" height="600" src="https://d262ilb51hltx0.cloudfront.net/max/800/1*DXtRIWTu-UzRb0YB-h8SmA.png" width="10"/></p>

            <p><strong>That’s right. Nothing</strong>. This is the web. Everybody is invited to consume, contribute and create. This is what made it the success it is. This is what will make it outlive whatever other platform threatens it with shiny impressive interactions. Interactions at that time impossible to achieve with web technologies.</p>

            <p>Whenever I mention this, the knee-jerk reaction is the same:</p>

            <p/><blockquote class="graf--blockquote graf-after--p" id="79d6" name="79d6">How can you expect us to build delightful experiences close to magic (and whatever other soundbites were in the last Apple keynote) if we keep having to support old browsers and users with terrible setups?</blockquote><p/>

            <p>You don’t have to support old browsers and terrible setups. But you are not allowed to block them out. It is a simple matter of giving a usable interface to end users. A button that does nothing when you click it is not a good experience. Test if the functionality is available, then create or show the button. <strong class="markup--strong markup--p-strong">This is as simple as it is.</strong></p>

            <p>If you really have to rely on some technology then show people what they are missing out on and tell them how to upgrade. A screenshot or a video of a WebGL animation is still lovely to see. A message telling me I have no WebGL less so.</p>

            <p>Even more on the black and white scale, what the discussion boils down to is in essence:</p>

            <p/><blockquote class="graf--blockquote graf-after--p" id="a775" name="a775">But it is 2016 — surely we can expect people to have JavaScript enabled — it is after all “the assembly language of the web”</blockquote><p/>

            <p>Despite the cringe-worthy <a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">misquote of the assembly language</a> thing, here is a harsh truth:</p>

            <p/><blockquote>You can absolutely expect JavaScript to be available on your end users computers in 2016. At the same time it is painfully <strong>naive</strong> to expect it to work under all circumstances.</blockquote><p/>

            <p><strong>JavaScript is brittle</strong>. <span class="caps">HTML</span> and <span class="caps">CSS</span> both are <em>fault tolerant</em>. If something goes wrong in <span class="caps">HTML</span>, browsers either display the content of the element or try to fix minor issues like unclosed elements for you. <span class="caps">CSS</span> skips lines of code it can’t understand and merrily goes on its way to show the rest of it. JavaScript breaks on errors and tells you that something went wrong. It will not execute the rest of the script, but throws in the towel and tells you to get your house in order first.</p>

            <p>There <a href="http://kryogenix.org/code/browser/everyonehasjs.html">are many outside influences</a> that will interfere with the execution of your JavaScript. That’s why a non-naive and non-arrogant — a dedicated and seasoned web developer — will never rely on it. Instead, you treat it as an enhancement and in an almost paranoid fashion test for the availability of everything before you access it.</p>

            <p><strong>Sorry (not sorry) — this will never go away</strong>. This is the nature of JavaScript. And it is a good thing. It means we can access new features of the language as they come along instead of getting stuck in a certain state. It means we have to think about using it every time instead of relying on libraries to do the work for us. It means that we need to keep evolving with the web — a living and constantly changing medium, and not a software platform. That’s just part of it.</p>

            <p>This is why the whole discussion about JavaScript enabled or disabled is a massive waste of time. It is not the availability of JavaScript we need to worry about. It is our products breaking in perfectly capable environments because we rely on perfect execution instead of writing defensive code. A tumblr like <a class="markup--anchor markup--p-anchor" href="http://sighjavascript.tumblr.com/" rel="nofollow">Sigh, JavaScript</a> is fun, but is pithy finger-pointing.</p>

            <p/><blockquote>There is nothing wrong with using JavaScript to build things. Just be aware that the error handling is your responsibility.</blockquote><p/>

            <p>Any message telling the user that they have to turn on JavaScript to use a certain product is a proof that you care more about your developer convenience than your users.</p>

            <p/><blockquote>It is damn hard these days to turn off JavaScript – you are complaining about a almost non-existent issue and tell the confused user to do something they don’t know how to.</blockquote><p/>

            <p>The chance that something in the JavaScript execution of any of your dozens of dependencies went wrong is much higher – and this is your job to fix. This is why advice like <a href="http://webdesign.tutsplus.com/tutorials/quick-tip-dont-forget-the-noscript-element--cms-25498">using noscript to provide alternative content</a> is terrible. It means you double your workload instead of enhancing what works. Who knows? If you start with something not JavaScript dependent (or running it server side) you might find that you don’t need the complex solution you started with in the first place. Faster, smaller, easier. Sounds good, right?</p>

            <p>So, please, stop sniffing my browser, you will fail and tell me lies. Stop pretending that working with a brittle technology is the user’s fault when something goes wrong.</p>

            <p/><blockquote>As web developers we work in the service industry. We deliver products to people. And keeping these people happy and non-worried is our job. Nothing more, nothing less.</blockquote><p/>

            <p>Without users, your product is nothing. Sure, we are better paid and well educated and we are not flipping burgers. But we have no right whatsoever to be arrogant and not understanding that our mistakes are not the fault of our end users.</p>

            <p>Our demeanor when complaining about how stupid our end users and their terrible setups are reminds me of <a href="https://www.youtube.com/watch?v=CSj5stmFkQ0">this Mitchell and Webb sketch</a>.</p>

            <p/>

            <p><strong class="markup--strong markup--p-strong">Don’t be that person. </strong>Our job is to enable people to consume, participate and create the web. This is magic. This is beautiful. This is incredibly rewarding. The next markets we should care about are ready to be as excited about the web as we were when we first encountered it. Browsers are good these days. Use what they offer after testing for it and enjoy what you can achieve. Don’t tell the user when things go wrong – they can not fix what you messed up.</p>


            <img alt="" height="1" src="http://feeds.feedburner.com/~r/chrisheilmann/~4/vqtqgcNQXy8" width="1"/></div>
        </content>
        <updated>2016-01-16T11:28:10Z</updated>
        <category term="General"/>
        <author>
            <name>Chris Heilmann</name>
        </author>
        <source>
            <id>https://www.christianheilmann.com</id>
            <link href="https://www.christianheilmann.com" rel="alternate" type="text/html"/>
            <link href="http://feeds.feedburner.com/chrisheilmann" rel="self" type="application/rss+xml"/>
            <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
            <subtitle>For a better web with more professional jobs - can talk, will travel</subtitle>
            <title>Christian Heilmann</title>
            <updated>2016-01-16T11:46:15Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://glandium.org/blog/?p=3510</id>
        <link href="http://glandium.org/blog/?p=3510" rel="alternate" type="text/html"/>
        <title>Announcing git-cinnabar 0.3.1</title>
        <summary>This is a brown paper bag release. It turns out I managed to break the upgrade path only 10 commits before the release. What’s new since 0.3.0? git cinnabar fsck doesn’t fail to upgrade metadata. The remote.$remote.cinnabar-draft config works again. Don’t fail to clone an empty repository. Allow to specify mercurial configuration items in a […]</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This is a brown paper bag release. It turns out I managed to break the upgrade<br/>
            path only 10 commits before the release.</p>
            <h3>What’s new since 0.3.0?</h3>
            <ul>
                <li><code>git cinnabar fsck</code> doesn’t fail to upgrade metadata.</li>
                <li>The <code>remote.$remote.cinnabar-draft</code> config works again.</li>
                <li>Don’t fail to clone an empty repository.</li>
                <li>Allow to specify mercurial configuration items in a .git/hgrc file.</li>
            </ul></div>
        </content>
        <updated>2016-01-16T11:26:45Z</updated>
        <category term="cinnabar"/>
        <category term="p.m.o"/>
        <category term="en"/>
        <author>
            <name>glandium</name>
        </author>
        <source>
            <id>http://glandium.org/blog</id>
            <link href="http://glandium.org/blog/?feed=rss2&amp;cat=25&amp;tag=en" rel="self" type="application/rss+xml"/>
            <link href="http://glandium.org/blog" rel="alternate" type="text/html"/>
            <subtitle>glandium.org</subtitle>
            <title>p.m.o – glandium.org</title>
            <updated>2016-01-16T11:30:43Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-us">
        <id>http://edunham.net/2016/01/16/buildbot_and_eoferror.html</id>
        <link href="http://edunham.net/2016/01/16/buildbot_and_eoferror.html" rel="alternate" type="text/html"/>
        <title>Buildbot and EOFError</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><h3>Buildbot and EOFError</h3>
            <p>More SEO-bait, after tracking down an poorly documented problem:</p>
            <div class="highlight-python"><div class="highlight"><pre># buildbot start master
                Following twistd.log until startup finished..
                2016-01-17 04:35:49+0000 [-] Log opened.
                2016-01-17 04:35:49+0000 [-] twistd 14.0.2 (/usr/bin/python 2.7.6) starting up.
                2016-01-17 04:35:49+0000 [-] reactor class: twisted.internet.epollreactor.EPollReactor.
                2016-01-17 04:35:49+0000 [-] Starting BuildMaster -- buildbot.version: 0.8.12
                2016-01-17 04:35:49+0000 [-] Loading configuration from '/home/user/buildbot/master/master.cfg'
                2016-01-17 04:35:53+0000 [-] error while parsing config file:
                Traceback (most recent call last):
                File "/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py", line 577, in _runCallbacks
                current.result = callback(current.result, *args, **kw)
                File "/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py", line 1155, in gotResult
                _inlineCallbacks(r, g, deferred)
                File "/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py", line 1099, in _inlineCallbacks
                result = g.send(result)
                File "/usr/local/lib/python2.7/dist-packages/buildbot/master.py", line 189, in startService
                self.configFileName)
                --- &lt;exception caught here&gt; ---
                File "/usr/local/lib/python2.7/dist-packages/buildbot/config.py", line 156, in loadConfig
                exec f in localDict
                File "/home/user/buildbot/master/master.cfg", line 415, in &lt;module&gt;
                extra_post_params={'secret': HOMU_BUILDBOT_SECRET},
                File "/usr/local/lib/python2.7/dist-packages/buildbot/status/status_push.py", line 404, in __init__
                secondaryQueue=DiskQueue(path, maxItems=maxDiskItems))
                File "/usr/local/lib/python2.7/dist-packages/buildbot/status/persistent_queue.py", line 286, in __init__
                self.secondaryQueue.popChunk(self.primaryQueue.maxItems()))
                File "/usr/local/lib/python2.7/dist-packages/buildbot/status/persistent_queue.py", line 208, in popChunk
                ret.append(self.unpickleFn(ReadFile(path)))
                exceptions.EOFError:

                2016-01-17 04:35:53+0000 [-] Configuration Errors:
                2016-01-17 04:35:53+0000 [-]   error while parsing config file:  (traceback in logfile)
                2016-01-17 04:35:53+0000 [-] Halting master.
                2016-01-17 04:35:53+0000 [-] Main loop terminated.
                2016-01-17 04:35:53+0000 [-] Server Shut Down.
            </pre></div>
            </div>
            <p>This happened after the buildmaster’s disk filled up and a bunch of stuff was
                manually deleted. There were no changes to master.cfg since it worked
                perfectly.</p>
            <p>The fix was to examine <span class="docutils literal"><span class="pre">master.cfg</span></span> to see <a class="reference external" href="https://github.com/servo/saltfs/blob/master/buildbot/master/master.cfg#L413">where the HttpStatusPush was
                created</a>,
                of the form:</p>
            <div class="highlight-python"><div class="highlight"><pre><span class="n">c</span><span class="p">[</span><span class="s">'status'</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">HttpStatusPush</span><span class="p">(</span>
                <span class="n">serverUrl</span><span class="o">=</span><span class="s">'http://build.servo.org:54856/buildbot'</span><span class="p">,</span>
                <span class="n">extra_post_params</span><span class="o">=</span><span class="p">{</span><span class="s">'secret'</span><span class="p">:</span> <span class="n">HOMU_BUILDBOT_SECRET</span><span class="p">},</span>
                <span class="p">))</span>
            </pre></div>
            </div>
            <p>Digging in the Buildbot source reveals that <span class="docutils literal"><span class="pre">persistent_queue.py</span></span> wants to
                unpickle a cache file from <span class="docutils literal"><span class="pre">/events_build.servo.org/-1</span></span> if there was nothing
                in <span class="docutils literal"><span class="pre">/events_build.servo.org/</span></span>. To fix this the right way, create that file
                and make sure Buildbot has <span class="docutils literal"><span class="pre">+rwx</span></span> on it.</p>
            <p>Alternately, you can give up on writing your status push cache to disk
                entirely by adding the line <span class="docutils literal"><span class="pre">maxDiskItems=0</span></span> to the creation of the
                HttpStatusPush, giving you:</p>
            <div class="highlight-python"><div class="highlight"><pre><span class="n">c</span><span class="p">[</span><span class="s">'status'</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">HttpStatusPush</span><span class="p">(</span>
                <span class="n">serverUrl</span><span class="o">=</span><span class="s">'http://build.servo.org:54856/buildbot'</span><span class="p">,</span>
                <span class="n">maxDiskItems</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
                <span class="n">extra_post_params</span><span class="o">=</span><span class="p">{</span><span class="s">'secret'</span><span class="p">:</span> <span class="n">HOMU_BUILDBOT_SECRET</span><span class="p">},</span>
                <span class="p">))</span>
            </pre></div>
            </div>
            <p>The real moral of the story is “remember to use <a class="reference external" href="http://www.linuxcommand.org/man_pages/logrotate8.html">logrotate</a>.</p></div>
        </summary>
        <updated>2016-01-16T08:00:00Z</updated>
        <source>
            <id>http://edunham.net/</id>
            <author>
                <name>Emily Dunham</name>
            </author>
            <link href="http://edunham.net/" rel="alternate" type="text/html"/>
            <link href="http://edunham.net/rss.html?tag=planetmozilla" rel="self" type="application/rss+xml"/>
            <subtitle>is a "DevOps" Engineer at Mozilla Research</subtitle>
            <title>edunham</title>
            <updated>2016-01-19T08:00:00Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>urn:md5:41d039bb28fb15c761578cba0b1454fa</id>
        <link href="http://www.glazman.org/weblog/dotclear/index.php?post/2016/01/16/Ebook-pagination-and-CSS" rel="alternate" type="text/html"/>
        <title>Ebook pagination and CSS</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Let's suppose you have a rather long document, for instance a book chapter, and you want to render it in your browser <em>à la</em> iBooks/Kindle. That's rather easy with just a dash of CSS:</p>
            <pre>body {
                height: calc(100vh - 24px);
                column-width: 45vw;
                overflow: hidden;
                margin-left: calc(-50vw * attr(currentpage integer));
                }</pre>
            <p>Yes, yes, I know that no browser implements that <code>attr()</code>extended syntax. So put an inline style on your body for <code>margin-left: calc(-50vw * <em>&lt;n&gt;</em>)</code> where <em><code>&lt;n&gt;</code></em> is the page number you want minus 1.</p>
            <p>Then add the fixed positioned controls you need to let user change page, plus gesture detection. Add a transition on margin-left to make it nicer. Done. Works perfectly in Firefox, Safari, Chrome and Opera. I don't have a Windows box handy so I can't test on Edge.</p></div>
        </summary>
        <updated>2016-01-16T03:43:00Z</updated>
        <category term="CSS and style"/>
        <author>
            <name>glazou</name>
        </author>
        <source>
            <id>http://www.glazman.org/weblog/dotclear/index.php</id>
            <link href="http://www.glazman.org/weblog/dotclear/index.php" rel="alternate" type="text/html"/>
            <link href="http://glazman.org/weblog/dotclear/?feed/planetmoz" rel="self" type="application/rss+xml"/>
            <subtitle>Un Glazman, un blog, un Glazblog</subtitle>
            <title>&lt;Glazblog/&gt;</title>
            <updated>2016-01-25T16:34:47Z</updated>
        </source>
    </entry>

    <entry xml:lang="fr-FR">
        <id>https://repeer.org/?p=48</id>
        <link href="https://repeer.org/2016/01/16/mozilla-cultural-revolution-from-radical-participation-to-radical-user-centric/" rel="alternate" type="text/html"/>
        <title>Mozilla cultural revolution: from ‘radical participation’ to ‘radical user-centric’</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This post has been written about the Mozilla Foundation (MoFo) 2020 strategy. The ideas developed in this post are in different levels: some are global, some focus on particular points of the proposed draft. But in my point of view, they all carry a transversal meaning: articulation (as piece connected to a structure allowing movement) <a class="read-more" href="https://repeer.org/2016/01/16/mozilla-cultural-revolution-from-radical-participation-to-radical-user-centric/">[…]</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This post has been written about the <a href="http://marksurman.commons.ca/2015/12/21/mofo2020/">Mozilla Foundation (MoFo) 2020 strategy</a>.</p>
            <p>The ideas developed in this post are in different levels: some are global, some focus on particular points of the proposed draft. But in my point of view, they all carry a transversal meaning: articulation (as piece connected to a structure allowing movement) with others and consistency with our mission.</p>
            <h3>Summary</h3>
            <p>On the way to <a href="http://marksurman.commons.ca/2015/01/09/what-is-radical-participation/">radical participation</a>, Mozilla should be radical <sup class="footnote"><a href="https://repeer.org/tag/mozilla/feed/#fn-48-1" id="fnref-48-1">1</a></sup> user-centric. Mozilla should not go against the social understanding of the (tech and whole society) situation because it’s what is massively shared and what polarizes the prism of understanding of the society. <strong>We should built solutions for it and transform (develop and change) it on the way. Our responsibility is to build <em>inclusivity</em> (inclusion strengths) everywhere, to gather for multiplying our impact.</strong> We must build (progressive) victories instead of battles (of static positions and postures).<br/>
                If we don’t do it, we go against users self-perceived need: use. We value our differences more than our commonalities and <strong>consider ethic more as an absolute objective than a concrete process</strong>: we divide, separate, compete. Our solutions get irrelevant, we get rejected and marginalized, we reject compromises that improve the current situation for the ideal, we loose influence and therefore impact on the definition of the present and future. We already done it for the good and the bad in the past (H.264+Daala, pocket integration, Hello login, no Firefox for iOS, Google fishing vs Disconnect, FxOS Notes app which sync is evernote only, …).<br/>
                To get a consistent and impactful ability to integrate and transform the social understanding, there are four domains where we can take and articulate (connected structure allowing movement) action:</p>
            <ul>
                <li><strong>People</strong>: identity is the key to grow consciousness, understanding, skills, voice, representation and to articulate global/local, personal/common. <strong>[Activate]</strong></li>
                <li><strong>Technology</strong>: universality is key for a platform (for resilience) with interfaces (for modularity) where services, features and front-ends can plug-in and communicate to provide (inter)active support ; Decouple conditions of fulfillment with execution (content/appearance/policy ; material/immaterial) to support remix (policy continuity, consistency thought providers, …). <strong>[Unlock]</strong></li>
                <li><strong>Product</strong>: persona and (current and emerging) use via user-agents are the keys. Be on all major platforms depending on use, ethical alignment and opportunities, emerging newness to provide continuity (task, device) to users and leading on new practices. Features should be about products parity and opening new possibilities carrying our values to the action at a massive scale. <strong>[Build]</strong></li>
                <li><strong>Organizations/institutions</strong>: sociological innovation for participation is the key. Research on historical (evolution) and sociological (human organizations, social institutions and social behaviors) analysis based on social networks (link as social interactions), in the perspective of producing commons. <strong>[Drive]</strong></li>
            </ul>
            <p>Our front has two sides: <strong>propose and protect</strong>. But each of them are connected and can have different strategic expressions, if our actions generate improving (progressive) curves:</p>
            <ul>
                <li>For the <strong>action taking</strong>: consciousness, understanding, symbolic actions, behavior change, behavior advocacy (evangelism)</li>
                <li>For the <strong>action mode</strong>: promotion (spreading the idea), incitement (giving a competitive advantage to people involved), collaboration (open interactions to make a win-win exchange; process-centric), contractualization (formalize domains where a win-win exchange is made; object-centric), coercion (giving a competitive disadvantage to people not involved).</li>
            </ul>
            <p>Social history is a history of social values.<strong> The way we understand and tell the problem determine the solution we can create</strong>: we need, all the way long, a shared understanding. Tools and technologies are not tied, bound forever to their social value, which depends on people’s social representations that evolve over time.</p>
            <ul>
                <li><strong>The social behavior</strong> is a first key. It is the narrative, and therefore its <strong>inclusion in the social history that we make, which converges the product with the values that it stands for</strong>. Here is the articulation of product with people and technology, of product with leadership network and advocacy engine (it could be less persistent and inclusive: marketing).</li>
                <li><strong>The social organization</strong> is a second key. It is about how the process, the tools, the architecture, the governance and the opportunities/constraints have changed for Mozilla (org) and Mozillians (people). <strong>Here comes the question of being open</strong>. It is not enough because it is about availability (passive) and not inclusivity (active). The high level of automation coming is a challenge. We should level-up the meaning to differentiate from others: <strong>Mozilla should activate and unlock societal progress to build fair technical progress</strong>. Mozilla need to <strong>identify its resilient backbone</strong> (not only a technology, the web, but something that articulate people, technology and products) and make it more universal (through people and products). But our goals can’t be absolutely achieved because they have to be considered in a dynamic context. However, the brand engagement is persistent, if it’s included in the product, visible, and centered on easing the user’s action.<br/>
                    Linked to the ‘being open’ question, the advocacy engine could be a thing to unlock societal progress. People are satisfied of narrow hills of choice until they understand it’s not socially neutral. It’s the case with technology: they accept things about technology to be build top-down. <strong>A successful advocacy, even one about technology, is always built bottom-up</strong>, as its function is to give back the voice to the people, to get them involved, not to make them fulfill our predefined aims. The top-down method is too organization centric and administrative content centric: it can’t massively drive people that are not already committed to the org. It’s usually named advertisement or propaganda. <strong>If we want to have an impact, we should listen to people needs, not tell them to listen to ours</strong>. People want (first) to be empowered, not to empower an org. We need to have content and user centric (not org and it’s process) tools/platform for advocates and leaders: let’s build the technology advocacy plan together. Yes it’s slower, but much more massive, inclusive and persistent. The impact will be higher because it will carry a meaning for people and it wont be too org centric. So it will be qualitatively better: not just an amount, <strong>accumulation is not our goal, but impact, that comes from articulation</strong>. Likewise we should be careful to not use best practice as absolute solutions, but as solutions in a context, if we want to transpose them massively: when we unify we should avoid to homogenize. On the narrative side, our preoccupation should be about building short, medium and long term narrative to get action.</li>
                <li><strong>The social institutions</strong> are the third key. Here is the articulation of the leadership network with the advocacy engine.  <strong>Leaders build new solutions (products) and Advocates new voices (rallying), they are both about personal development and empower commons.</strong>  Leadership=learn+create and advocacy=teach+spread commons. Leaders are projects/orgs leaders, the ones that traduce DNA (values) in products (concrete ability and availability). Advocates are values advocates, the ones that traduce DNA (values) in actions (behavior). As they are both targeting commons, they both produce the same social organization (collaboration instead of competition). They are both involved in creating (different) representations (institutions) and organizations (foundation/firms) but <strong>with a different DNA (values) processing</strong>: from public good to personal benefit or from personal interest to public benefit. If Mozilla cares about public good resilience, <strong>the articulation of their domains of values is critical</strong>. So, on the social organization side, their articulation’s expression and the revision process must be said and clear: from hierarchy or contract or different autonomy levels (internal incubation and external advocacy), or … to criteria to start a revision. About the narrative, and hence about the social behavior side, leaders carry a lot of legitimacy and avoid the stay-experimental or non-massive (unique) thoughts. And we need legitimacy to get impact. But this legitimacy is already present if we<strong> make clear that our actions are about commons</strong>. We should name them creators (compositors or managers) to make it clear that the creative process is a collaboration, made by a team and that the public good do not have the same role in the process and outcome. Full circle.</li>
                <li><strong>The social networks</strong> are the keystone. Let’s shortly take an example based on social networks (link as social interactions) with the perspective of producing people, technological and product commons. <strong>We need better tools for collaboration and participation</strong>: tools that merge discussion channels, capitalize on the discussion and preview the results to build a plan. From evolving the wiki discussion page to feature document production into peer-to-peer discussion.</li>
            </ul>
            <p>An analysis of the creation process is another way to the articulation of product with people and technology.<br/>
                Platforms move closer to strict ‘walled garden’ ecosystems. We need bridges from lab to home that carry different mix of customization and reliability to support the emancipation curve. We need to build pathways thought audiences and thought IT layers (content, software, hardware, distant service). <strong>We should find a convergence between customization</strong> (dev code patch to users add-ons) <strong>and reliability</strong> (self made to mass product), <strong>between first time experience, support and add-ons thought all our users’ persona by building bridges, pathways</strong>. Mozilla should find ways to <strong>integrate learning</strong> in its products, in-content, as we have code comment on code: on-boarding levels, progression from simple to high level techniques, reproducible/universal next task/skill building.</p>
            <h3>Detailed discussion content</h3>
            <p>Here are the developed ideas, with more reference to our allies and detractors’ products.</p>
            <h4>People, the sociological side</h4>
            <h5>From focused to systemic action</h5>
            <p>First of all, I think <strong>the strategy move Mozilla is doing is the right one</strong> as it embraces more our real life. People are not defined by one characteristic, we are complex: ex. we can be pedestrian, car driver, biker, Public Transport user… we think and do simultaneously. So why Mozilla should restrict its strategy by targeting people on skills, through education, thought better material only (the Mozilla Academy program). Education, even popular education, can’t do everything for the people to build change. <strong>We need a plan that balance intellectual and practical (abstraction/action, think/do) integrating progressive paths to massively scale so we get an impact: build change.</strong></p>
            <h5>Real life: Social history, individuals and institutions as an articulation founding the action.</h5>
            <p>Let’s start by some definitions based on my understanding of some <a href="https://fr.wikipedia.org/wiki/Sociologie">Wikipedia articles</a>. Sociology is the study of the evolution of societies: human organizations and social institutions. It is about <strong>the impact of the social dimension on humans representations (ways of thinking) and behaviors (ways of acting)</strong>. It allows to study the conceptions of social relations according to fundamental criteria (structuralism, functionalism, conventionalism, etc.) and the hooks to reality (interactionism, institutionalism, regulationisme, actionism, etc.), to think and shape the modernity. Currently (and this is key for Mozilla’s positioning), the combination of models replace the models’ unity, which aims to assume the multidimensionality. There are three major sociological paradigms, including one emerging:</p>
            <ul>
                <li><strong>The holistic paradigm</strong>: Society is a whole that is greater than the sum of its parts, it exists before the individual and individuals are governed by it. In this context, the Society includes the individual and the individual consciousness is seen only as a fragment of the collective consciousness. The emphasis is on the social fact, whose cause must be sought in earlier social facts. The social fact is part of a system of interlocking institutions that govern individuals. It is external to the individual and constraint it. Sociology is then the science of institutional invariants in which are the observable phenomenas.</li>
                <li><strong>The atomistic paradigm</strong>: each individual is a social atom. The atoms act according to self motives, interests, emotions and are linked to other atoms. A system of constant interaction between atoms produces and reproduces Society. The emphasis is on the cause of social actions and the meaning given by individuals to their actions. A horizon of meanings serve as reference instead of the arrangements of institutions. The institution is there but it serves the motives and interests of agents. Sociology is then the study of the social action.</li>
                <li>The recent emergence of a sociological analysis based on <strong>social networks</strong> (which are a collection of individuals or organizations connected by regular social interactions) suggest lines of research <strong>beyond the opposition between the holistic and the atomistic approaches</strong>. The theory of social networks conceives social relationships in terms of nodes and links. The nodes are usually social actors in the network but can also represent institutions, and links are the relationships between these nodes. There may be several kinds of links between nodes and their analysis determines social capital of the social actors.</li>
            </ul>
            <p>Consequently, Mozilla should build its strategy on <strong>historical</strong> (evolution) and <strong>sociological</strong> (human organizations, social institutions and social behaviors) analysis based on <strong>social networks</strong> (links as social interactions), in the perspective of producing <strong>commons</strong>. That is to say as an <strong>engine of transition from a model of value</strong> on its last leg (rarity capitalism) to the emerging one (new articulation of the individual and the collective: commons).<br/>
                It is important and strategic to propose a sociological articulation supporting our mission and its purpose (commons) since <strong>the sociological concept (the paradigm) reveals an ideological characteristic</strong>: because it participates in societal movements made in the Society, it serves an ideal. The societal domain, what’s making society, a political object, should be a stake for Mozilla.</p>
            <h5>Build on a basement: current tech challenge articulated with current social meaning/perception</h5>
            <p><strong>We should articulate ‘our real life’ with the nowadays tech challenge</strong>: how to get back control over our data at the time of IoT, cloud, big data, convergence (multi-devices/form factor)? From a user point of view, we have devices and want them convenient, easy and nice. The big moves in the tech industry (IoT, cloud, big data, convergence) free us for somethings and lock us for others. The lock key is that our devices don’t compute anymore our data that are in silos. From a developer point of view, the innovation is going very fast and it’s hard to have a complete open source toolbox that we can share, mostly because we don’t lead: Open has turn to be more open-releasing.<br/>
                We should articulate our new strategy with the tech industry moves: for example, <strong>as a user, how can I get (email) encryption on all my devices?</strong> Should I follow (fragmented) different kind of howtos/tools/apps to achieve that? How do I know these are consistent together? How can I be sure it won’t brake my continuous workflow? (app silo? social silo? level of trust and reliability?)<br/>
                Mozilla have the skills to answer this as we already faced and solved some of these issues on particular points: like how to ease the installation of Firefox for Android for Firefox desktop users, open and discoverable choice of search engines, synchronization across devices, …<br/>
                <strong>Mozilla’s challenge is to not be marginalized by the change of practices. Having an impact is embracing the new practice and give it an alternative.</strong> Mozilla already made that move by saying « <em>Firefox will go where users are</em>« , by trying to balance the advertisement practice between adds companies and users, by integrating H.264 and developing Daala. But <strong>Mozilla never stated that clearly as a strategy</strong>.</p>
            <h5>A backbone to make our mission resilient in it expressions</h5>
            <p>If we think about the <strong>Facebook’s strategy, they first built a network of people whiling to share</strong> (no matter what they share) and then use this <strong>transversal backbone to power vertical business segments</strong> (search, donation, local market selling, …). Google with its search engine and its open source policy have a similar (in a way) strategy. The difference here is that the backbone is people’s data and control over digital formats. In both cases, the level of use (of the social network, search engine, mobile OS, …) is the key (with fast innovation) to have an impact. And that’s a major obstacle to build successful alternatives.<br/>
                The proposed Mozilla’s strategy is built in the opposite way, and that’s questioning. <strong>We try to build people network depending on some shared matters</strong>. Then, is our strategy able to scale enough to compete against GAFAM, or are we trying to build a third way ?<br/>
                For the products, the Mozilla’s strategy is still (and has always been) inclusive: everybody can use the product and then benefit of its open web values. A good product that answer people needs, plus giving people back/new power (allow new use) build a big community. For the network, should we build our global force of people based on concentric circles (of shared matters) or based on a (Mozilla own) transversal backbone (matter agnostic)? It seems to me the actual presentation of the strategy do not answer clearly enough this big question: <strong>which <em>inclusivity</em> (inclusion strengths) mechanism in the strategy?</strong><br/>
                And that <strong>call back to our product strategy</strong>: build a community that shares values, that is used to spread outcomes (product) OR build a community that shares a product, that is used to spread values. This is not a question on what matters more (product VS values) but on the strategy to get to a point, an objective (many web citizens). Shouldn’t we use our product to built a people network backbone ? Back to GAFAM: what can we learn from the Google try with Google+?<br/>
                If our core is not enough transversal (the backbone), more new web/tech market there will be, more we will be marginalized, because focused on our circles center not taking in account that the war front (the context) have changed. <strong>Mozilla have to be resilient: mutability of the means, stability in the objectives.</strong><br/>
                The document is the MoFo strategy, and so it doesn’t say anything about ‘build Firefox’ (aka the product strategy) and so don’t articulate our main product (Firefox) with our main people network building effort and values sharing engine. We should do it: at a strategic scale and a particular scale (articulating the agenda-setting with main product features).</p>
            <h5>Brand engagement, a psychological backbone on the user side ?</h5>
            <p>It seems that our GAFAM challengers get big and have impact by not educating (that much) people, and that’s what makes them not involved in the web citizenship. Or only when they are pushed by their customers. At the opposite, making people aware about web citizenship at first, makes it hard to have that much people involved and so to have impact. However, there is <strong>an other prism that drive people: the brand perceived values</strong>. Google is seen as a tech pioneer innovator and doing the good because of its open policy, free model, fast innovation… Facebook is seen as really cool firm trying to help people by connecting them…<br/>
                Is the increase of marketing of Mozilla doing good enough to gains back users ? Is this resilient compared to the next-tech-thing coming ?<br/>
                Most of the time when I meet Goggle Chrome users and ask then why they use it and don’t switch to Firefox, they answer about use allowed (sync thought devices, apps everywhere that run only on GC, …). Sometimes, they argue that they make effort on other areas, and that they want to keep they digital life simple. They <strong>experience is not centered in a product/brand, but more on the person</strong>: on that Google Chrome with its Person (with one click ‘auto-login’ to all Google services) is far superior than Firefox.</p>
            <h5>User-agent or products ?</h5>
            <p>A user-agent is an intermediary acting on behalf of a supplier. As a representative, it is the contact point with customers; It’s role is to manage, to administer the affairs; it is entrusted with a mission by one or more persons; it both acts and produce an effect.<br/>
                So, the user-agent can be describe with three criteria. It is: an intermediate (user/technology) ; a tool (used to manage and administrate depending on the user’s skills) ; a representative (mission bearer, values vector, for a group of people). It exceeds partly the contradiction between being active and passive.<br/>
                A <strong>user-agent articulate personal-identity with technology-identity</strong> and give informations about available skills over these domains. It’s much more universal than a product that is about featuring a user-agent. <strong>If we target resilience, user-agent should be the target</strong>.</p>
            <h4>Social history, marketing: how we understand things to make choices</h4>
            <h5>History of the social value</h5>
            <p>The way we look at the past and current facts shape our understanding and determine if we open new ways to solve the issues identified. That’s the way to understand the challenges that come on the way and to agree on an adaptation of the strategy instead of splitting things. The way we understand and tell the problem determine the solution we can create: we need, all the way long, <strong>a shared understanding.</strong><br/>
                <strong>Tools and technologies are not necessarily tied to their social value, which depends on social representations. The social value can be built upstream and evolve downstream.</strong> It also depends on the perspective in which we look at it, on the understanding of the action and therefore on past or current history. Example: the social value of a weapon can be a potential danger or defense, creative (liberating) or destructive. The nuclear bomb is a weapon of mass destruction (negative), whose social value was (ingeniously built as) freedom (positive).</p>
            <h5>Impact in our strategy: a missing root</h5>
            <p>To engage the public, before to « <em>Focus on creative campaigns that use media + software to engage the public.</em> » we need to step back, in our speeding world, for understanding together the big picture and the big movement.<br/>
                Mozilla want to fuel a movement and propose a strong and consistent strategy. However, I think <strong>this plan miss a key point, a root point: build a common (hi)story.</strong> This should be an objective, not just an action.<br/>
                Also, that’s maybe a missing root for the State of the web report: how do we understand what we want to evaluate? But it’s not only a missing root for an (annual?) report (a ‘Reporters without borders’ Press-Freedom like?), it’s a missing root for a new grow of our products’ market share.<br/>
                For example, I do think that most users don’t know and understand that Mozilla is a foundation, Firefox build by a community as a product to keep the web healthy: <strong>they don’t imagine any meaning about technology</strong>, because they see it as a neutral tool at its root, so as a tool that should just fit they producing needs.<br/>
                Firefox, its technologies and its features are not bound for ever. It is the narrative, and therefore their inclusion in the social history that we make, which converges Firefox with the values that it stand for. <strong>Stoping or changing the deep narrative means cutting the source of common understanding and making stronger other consistencies captured by other objects, turning as centrifugal forces for Firefox.</strong><br/>
                Marketing is a way to change what we socially say about things: that’s why Google Chrome marketing campaign (and consistent features maturity) has been the decreasing starting point of Firefox. <strong>Our message has been scrambled.</strong></p>
            <h4>From participation to emancipation: values, people and org relationships</h4>
            <p>How to emancipate people in the digital world ?</p>
            <h5>Keeping the open open</h5>
            <p>Being open is not a thing we can achieve, it’s a constant process. « <em>Mozilla needs to engage on both fronts, tackling the big problems but also fuelling the next wave of open.</em> » Yes, but <strong>Mozilla should say too how the next wave of open can stay under people’s control and rally new people</strong>. Not only open code, but open participation, open governance, open organization. Being open is not a releasing policy about objects, it’s a mutation to participation process: a metamorphosis. It’s not reached by expanding, but by shifting. It’s not only about an amount, but about values: it’s qualitative.<br/>
                Maybe <strong>open is not enough</strong>, because it doesn’t say enough about who control and how, about the governance, and says too much about <strong>availability (passive)</strong> and not enough <strong>about <em>inclusivity</em> (active ; inclusion strengths)</strong>. It doesn’t say how the power is organized and articulated to the people (ex. think about how closed is the open Android). We may need to change the wording: indie web, the web that fuel autonomy, is a try, but it doesn’t say enough about <em>inclusivity</em> compared to openness &amp; opportunity. Emancipation is the concept. It’s strategic because it says what is aligned to what, especially how to articulate values and uses. It’s important because it tells what are the sufficient conditions of realization to ‘open/indie’. That’s key to get ‘open/indie at small and large scales, from Internet people to Internet institutions, thought all ‘open/indie’ detractors in the always-current situation: a resilient ecosystem.<br/>
                My intuition is that <strong>the leadership network and advocacy engine promoting open will be efficient if we clarify ‘open’ while keeping it universal</strong>. We can do it by looking back at the raw material that we have worked for years, our DNA in action. Because after all, we are experts about it and wish others to become experts too. It does not mean to essentialize it (opposing its nature and its culture), <strong>but to define its conditions of continuous achievement in our social context</strong>.</p>
            <h5>Starting point: exemplary projects that tell a lot about the evolution of our DNA in action</h5>
            <p>Clarifying the idea of ‘open’ is strategic to our action because it outlines the constitution of ‘open’, its high ‘rules’, like with laws in political regimes. It clarifies for all, if you are part of it or not, and it tells you what to change to get in. It can reinforce the brand by differentiating from the big players that are the GAFAM: <strong>it’s a way to drive, not to be driven by others lowering the meaning to catch the social impact. We should say that ‘open’ at Mozilla means more than ‘open’ at GAFAM</strong>. I wish Mozilla to speak about its openness, not as an ‘equal in opportunity’ but as an ‘equal in participation’, because it fits openness not only for a moment (on boarding) or for a person, but during the whole process of people’s interaction.<br/>
                <a href="https://www.rust-lang.org/">Rust</a> and <a href="https://servo.org/">Servo</a> or <a href="https://firefoxos.mozilla.community/">Firefox OS</a> (since the Mozilla’s shift to radical participation) seem to be very good examples of projects with participation &amp; impact centric rules, tools, process (RFC, new team and owners, …). Think about how Rust and <a href="http://arc.applause.com/2015/03/27/google-dart-virtual-machine-chrome/">Dart emerged and are evolving</a>. Think about how stronger has been the locked-open Android with partnership than the open-locked FxOS. We should tell those stories, not as recipes that can be reproduced, but as process based on a Constitution (inclusive rules) that make a political regime (open) and define a mode of government (participation). That’s key to social understanding and therefore to transpose and advocate for it.<br/>
                As projects<strong> compared to ‘original Mozilla’, Rust, Servo and FxOS could say a lot</strong> about how different they implemented learning/interaction/participation at the roots of the project. How the process, the tools, the architecture, the governance and the opportunities/constraints have changed for Mozilla and participants. This could definitely help to setup our curriculum resources, database and workshop at a personal (e.g., “How to teach / facilitate / organize / lead in the open like Mozilla.”) and orgs levels, with personal and orgs policies.</p>
            <h5>Spreading the high meanings in our strategy to consolidate it consistency</h5>
            <p>Clarifying the constitution of ‘open’ calls to clarify other related wordings.<br/>
                I’m satisfied to read back (social) ‘movement’ instead of ‘community’, because it means that our goal can’t be achieve forever (is static), but we should protect it by acting. And it seems more inclusive, less ‘folds on itself’ and less ‘build the alternative beside’ than ‘community’: the alternative can be everywhere the actual system is. It can make a system. It can get global, convergent, continuous, … all at the same time. Because it’s roots are decentralized _and_ consistent, collaborating, …</p>
            <p>About participation, we should think too (again) about engagement VS contribute VS participate: how much am I engaged ? Free about defining and receiving cost/gains? What is the impact of my actions ? … <strong>These different words carry different ideas about how we connect the ‘open’</strong>: spread is not enough because it diffuses, _be_ everywhere is more permanent. Applied to Mozilla’s own actions, <strong>funding open projects and leaders, is maybe not enough and there should be others areas where we can connect</strong> inside products, technology, people and organizations that build emancipation. So that say something about getting control (who, how, …).</p>
            <h5>IA: a challenge for ‘open’</h5>
            <p>IA is first developed to help us by improving our interactions. However, this seems to start to shift into taking decisions instead of us. This is problematic because these are indirect and direct ways for us to loose control, to be locked. And that can be as far as computers smarter than humans. The problem is that technical progress is made without any consideration of the societal progress it should made.<br/>
                That’s an other point, why open is not enough: automation should be build-in with superior humanization. <strong>Mozilla should activate and unlock societal progress to build fair technical progress.</strong></p>
            <h5>Digital integration &amp; democracy</h5>
            <p>The digital (&amp; virtual) world is gaining control over the physical world in many domains of our society (economy to finance, mail to email, automatic car, voting machine, …). It’s getting more and more integrated to our lives without getting back our (imperfect) democracy integrated into them. Public benefit and public good are turning ‘self benefit’ and ‘own sake’ because citizens don’t have control over private companies. <strong>We should build a digital democracy if we don’t want to loose at all the democratic governing of society.</strong> We must overcome the poses and postures battles about private and public. We need to build.</p>
            <h4>‘Leader’ &amp; ‘Leadership’ need a clarification</h4>
            <h5>Why a clarification?</h5>
            <p>At some level, I’m not the only one to ask this question:</p>
            <blockquote><p>How do CRM requirements for Leadership and Advocacy overlap / differ? What’s our email management / communications platform for Leadership?</p></blockquote>
            <p>Connect leaders to lead what ? How ? To whose benefit ? Do we want to connect leaders or initiatives (people or orgs) ? Will the leaders be emerging ones (building new networks) or established ones (use they influence to rally more people)? Are Leaders leaders of something part of Mozilla (like can be Reps) or outside of Mozilla (leaders of project, companies, newspaper: tech leaders, news leaders, …) ? This is especially important depending on what is the desire for the leaders to become in the future. <strong>The MoFo’s document should be more precise</strong> about this and go forward than « <em>Mozilla must attract, develop, and support a global network of diverse leaders who use their expertise to collaboratively advance points-of-view, policies and practices that maintain the overall health of the Internet.</em> »<br/>
                We should do it because <strong>the confusion about the leadership impact the advocacy engine</strong>: « <em>The shared themes also provide explicit opportunities for our Leadership and Advocacy efforts to work together.</em> » Regarding Mozilla, is the leaders role to be advocacy leaders ? It seems as they share themes and key initiatives (even if not worded the same sometimes). Or in other words, who Drives the Advocacy engine?</p>
            <h5>Iterations with the actual definition: creators</h5>
            <p>Here are my iterations on the definition of ‘Leaders’:</p>
            <ul>
                <li>The Leaders could be the people platform (the community) and the advocacy engine the tool/themes/actions platform (the product).</li>
                <li>Leaders could build at the end new solutions (products) and Advocates new voices (rallying), that could be translated in a learning area divided like Leadership=learn+create and advocacy=teach+spread.</li>
                <li>Leadership: personal development to produce (turn into) new commons or add new facets to commons. Advocacy: personal development to protect established/identified commons.</li>
            </ul>
            <p>With these definitions, then Leaders are maybe more a Lab, R&amp;D place, incubation tool (if we think about start-up incubators, then it shows a tool-set that we will need to inspire for the future). But if we want to keep the emphasis on people, <strong>we could name them ‘creators’</strong> (compositors or managers ; not commoners, because leaders and advocates are commoners ; yes, traditionally creators are craftspersons and intellectual designers). This make sens with the examples given in the MoFo 2020 strategy 0.8 document, where all persona are involved in a building-something-new process.</p>
            <p>However, it’s interesting to understand why we choose at first ‘Leaders’. <strong>Leaders build new solutions (products) and Advocates new voices (rallying), they are both about personal development and empower commons.</strong> Leadership=learn+create and advocacy=teach+spread commons. Leaders are projects/orgs leaders, the ones that traduce DNA (values) in products (concrete ability and availability). Advocates are values advocates, the ones that traduce DNA (values) in actions (behavior). As they are both targeting commons, they both produce the same social organization (collaboration instead of competition). They are both involved to create (different) representation (institutions) and organization (foundation/firms) but <strong>with a different DNA (values) processing</strong>: from public good to personal interest or the opposite. If Mozilla cares about public good resilience, <strong>the articulation of they domains of values is critical. So their articulation’s expression and the revision process must be said and clear</strong>: from hierarchy vs contract vs different autonomy levels (internal incubation and external advocacy), vs … to criteria to start a revision.</p>
            <h5>The network effect</h5>
            <p>Another argument for the switch from Leader to Creator is that the Leader word it too much tight to a single-person-made innovation. <strong>Creator make more clear that the innovation is possible not because of one genius, but because of a team</strong>, a group, a collective: personS (where there could also be genius). The value is made by the collaboration of people (especially in an open project, especially in a network).<br/>
                That’s important because that could impact how well we do the convening part: not self-promoting, not-advertising, but sharing skills and knowledge for people and catalysing projects.<br/>
                <strong>The same for the wording ‘talent’</strong>: alone, a talent can do nothing that has an impact. At least, we need two talents, a team (plus some assistants at some point).</p>
            <h5>The cultural prism</h5>
            <p>Again, this seems to be an open question:</p>
            <blockquote><p>Define and articulate “leadership.” Hone our story, ethos and definition for what we mean by “leadership development” (including cultural / localization aspects).</p></blockquote>
            <p>In my culture, Leader carry positive (take action) and negative (dominate) meanings. That’s another reason why I prefer another naming.<br/>
                I understand too that it carries a lot of legitimacy (ex. market leader) in our societies and it avoids the stay-experimental or non-massive (unique) thoughts. And we need legitimacy to get impact.<br/>
                But the way Mozilla has an impact thought all cultures, its <strong>legitimacy, is by creating or expanding a common</strong>. To do this, depending on the maturity, Mozilla could follow the market proposing an alternative with superior usability OR opening a new market by adding a vertical segment.</p>
            <h5>Existing tool-set opportunities</h5>
            <p>If Leadership is « <em>a year-round MozFest + Lab</em>« , so it’s a social network + an incubation place. Then, we already have a social network for people involved with Mozilla: Which kind of link should have the leadership network with <strong>mozillians.org</strong> ? What can we learn from this project and other specialized social network projects (linkedin, viadeo, …) to build the leadership network ?</p>
            <h4>Advocacy engine: make it clear</h4>
            <h5>What it is &amp; how it works</h5>
            <p>Mozilla is doing a great effort to build its advocacy engine on collaboration (« <em>Develop new partnerships and build on current partnerships</em>« , « <em>begin collaboration</em>« , « <em>build alliances with similar orgs</em>« ) but at the same time affirms that Mozilla should be « <em>Part of a broader movement, be the boldest, loudest and most effective advocates</em> » that could be seen as too centralized, too exclusive.<br/>
                While this can be consistent (or contradictory), <strong>the consistency has to be explained</strong> looking at orgs and people, global and local, abstract and real, with a complementarity/competitive grid.<br/>
                First, <strong>the articulation with other orgs has to be explained</strong>. What about others orgs doing things global (<a href="https://eff.org/">EFF</a>, <a href="https://fsf.org/">FSF</a>, …) and local (<a href="http://www.laquadrature.net/">Quadrature du net</a>, CCC, …) ? What about the value they give and that Mozilla doesn’t have (juridic expertise for example) ? What about other advocate engines (<a href="https://change.org/">change.org</a>, <a href="https://secure.avaaz.org/">Avaaz</a>…) ? That should not be at an administrative level only like « <em>Develop an affiliate policy. Defining what MoFo does / does not offer to effectively govern relationships w. affiliated partners and networks (e.g., for issues like branding, fundraising, incentives, participation guidelines, in-kind resources.)</em> »<br/>
                Second, this is key for users to understand and <strong>articulate the global level of the brand engagement and their local preoccupations and engagement</strong>. How the engine will be used for local (non-US) battles ? In the past Mozilla totally involved against PIPA, SOPA by taking action, and hesitate a lot to take position and just published a blog post (and too late to gain traction and get impact) against French spying law for example.<br/>
                Third, <strong>the articulation ‘action(own agenda)/reaction’ should be clarified</strong> in the objectives and functioning of the advocacy engine. Especially because other orgs, allies or detractors, try to to setup the social agenda. It’s important because it can change the social perception of our narrative (alternative promotion/issue fighting) and therefore people’s contributions.<br/>
                People think the technology is socially neutral. People are satisfied of narrow hills of choice (not the meaning, the aim, but only the ability to show your favorite avatar). <strong>People don’t want to feel guilty or oppressed</strong>, they don’t want new constraints, they are looking for solution only: they want to use, not to do more, they want they things to be done. Part of the problem is about understanding (literacy, education), part of it is about the personal/common duality, part of it is about being hopeless about having an impact, part of it is about expressing change as a positive goal and a new possible way (alternative), not a fight against an issue. About the advocacy engine, I think <strong>our preoccupation should be people-centric and the aim to give them a short, medium and long term narrative to get action without being individuals-centric</strong>.</p>
            <h5>How we build it ?</h5>
            <p>How to build a social movement ? How it has been built in the past ? Is it the same today ? Can it be transposed to the digital domain from others social domains ? How strong are the cultural differences between nations? These are the main questions we should answer, and our pivot era gives us many examples in diverse domains (climate change advocates, Syriza &amp; Podemos, NSA &amp; surveillance services in Europe, empowered syndicates in Venezuela, <a href="http://blogs.valvesoftware.com/economics/why-valve-or-what-do-we-need-corporations-for-and-how-does-valves-management-structure-fit-into-todays-corporate-world/#more-252">Valve corp. internal organization</a>…) to set a search terrain. However, I will go strait to my intuitive understanding below.<br/>
                I’m kind of worried that it’s imagined to build the advocacy engine themes by a top-down method. <strong>I think a successful advocacy is always built bottom-up</strong>, as its function is to give back the voice to the people, to get them involved, not to make them fulfill our predefined aims. The top-down method is too organization centric: it can’t massively drive people that are not already committed to the org. It’s usually named advertisement or propaganda. If we want to have impact, <strong>we should listen to people needs, not tell them to listen to ours. People want (first) to be empowered, not to empower an org</strong>. So let’s organize the infrastructure, set the agenda and draw the horizon (strategic understanding) participative: make people fill them with content of their experience. It seems to me it is the only way, the only successful method, if we want to build a movement, and not just a shifting moment (that could be built by the top, with a good press campaign locally relayed for example ; that’s what happen in old style politics: the aim is short term, to cleave).<br/>
                <strong>Isn’t the advocacy engine a new Drumbeat ?</strong> We shifted from Drumbeat to Webmaker+web literacy to Mozilla Academy and now to Leadership plus advocacy: it could be good to tell that story now that we are shifting again and learn from it.<br/>
                <strong>Mozilla should support, behave as a platform</strong>, not define, not focus. Letting the people set the agenda makes them more involved and is a good way to build a network of shared aims with other orgs, that is not invasive or alienating, but a support relationship in a win-win move. The strength comes from the all agendas sewed. So at an org level, let’s on-board allies organizations as soon as plan building-time (now), to build it together. Yes it’s slower, but much more massive, inclusive and persistent.</p>
            <h5>How we evaluate it: cultural bias &amp; qualitative analysis</h5>
            <p>First, about the agenda-setting KPI for 2016, should these KPI be an evaluation of the inclusion and rank in others strategic agendas, governance systems and productions (outcome/products) ? Others org could be from different domains: political, social, economy orgs.<br/>
                Then, as a wide size audience KPI, Mozilla wants « <em>celebration of our campaigns with ‘headline KPIs’ including number of actions, and number of advocates.</em>« . While doing this could be the right thing to do for some cultures, it could be the worst for others. I think that these KPI don’t carry a meaning for people and are too org centric. In a way, they are to generic: it’s just an amount. <strong>Accumulation is not our goal: we want impact that is the grow of articulated actions</strong> made by diverse people toward the same aim. <strong>We need our massive KPI to be more qualitative</strong>, or at least find a way to present them in a more qualitative way: interactive map ? a global to local prism that engages people for the next step ?</p>
            <h5>Best practices &amp; massive impact</h5>
            <p>Selecting best practices are an appealing method when we want to have a fast and strong impact in a wide area. However, <strong>when we unify we should avoid to homogenize</strong>. The gain in area by scaling-up is always at the cost of loosing local impact because it is not corresponding to local specificities, hence to local expectations. Federating instead of scaling-up is a way to solve this challenge. So we should be careful to not <strong>use best practice as absolute solutions, but as solutions in a context</strong> if we want to transpose them massively.</p>
            <h5>Tools &amp; platform balanced between user-centric and org-centric outcomes</h5>
            <p>It’s good to hear that we will build a advocacy platform. As we ‘had’ bugzilla+svn then mercurial (hg)+… and are going to the <strong>integrated</strong>, <strong>pluggable</strong> and <strong>content-centric</strong> (but non-free; admin tools are closed source) github (targeting more coder than users, but with a lower entry price for users still), we need to be able to have the same kind of tool for advocates and leaders. Something inspired maybe at some levels by the remixing tools we built in Webmakers for web users.</p>
            <h4>From experiment to production: support (self made to mass product) + modularity (dev code patch to users add-ons).</h4>
            <p><strong>We need pathways from lab to home that carry different mix of customization and reliability to support the emancipation curve.</strong><br/>
                Users want things to work, because they want to use it. Geeks want to be able to modify a lot and accept to put their hands in the engine to build growing reliability. Advanced users want to customize their experience and keep control and understanding on working status. They want to be able to fix the reliability at a medium/low technical cost. They are OK to gain more control at these prices. Users want to use things to do what they need and want to trust a reliability maintained for them. They are OK to gain control at a no technical cost. Depending on the matter we all have different skill levels, so we are all geeks, advanced users and users depending on our position or on the moment. And depending on our aspirations, we all want to be able to move from one category to an other. That’s what we need to build: we don’t just need to « <em>better articulate the value to our audiences</em>« , <strong>we need to build pathways thought audiences and thought IT layers</strong> (content, software, hardware, distant service). <strong>We should find a convergence between customization and reliability, between first time experience, support and add-ons thought all our users’ persona by building bridges, pathways</strong>. So, « <em>better articulate the value to our audiences</em> » should not be restrained in our minds to the Mozilla Leadership Network.<br/>
                <strong>Part of this is being done in other projects outside of Mozilla in the commons movement.</strong> There are many, but let’s take just one example, the <a href="https://www.fairphone.com/">Fairphone</a> project: modularity, howtos, … all this help to break the product-to-use walls and drive appropriation/emancipation. <strong>Products are less product and brand centric and more people/user centric</strong>.<br/>
                Part of this has been done inside Mozilla, like integrating learning in our products, in-content, as we have code comment on code. I think <strong>the <a href="https://wiki.mozilla.org/Firefox_OS/Spark">Spark</a> project on Firefox OS is on a promising path</strong>, even if maybe immature: it maybe has not been released mainstream because it misses bridges/pathways (on-boarding levels, progression from simple to high level techniques, and no or not enough reproducible/universal next task/skill building).<br/>
                So some solutions start to emerge, the direction is here, but has never been conceived and implemented that globally, as there isn’t integrated pathways with choice and opportunity and a strategy embracing all products and technologies (platform, tools, …).</p>
            <h4>Better tools for collaboration and participation: task-centric to process-centric (use) infrastructure</h4>
            <p><strong>The open community should definitely improve the collaboration tools and infrastructure to ease participation.</strong><br/>
                <strong><a href="http://www.discourse.org">Discourse</a> ‘merged’ discussion channels</strong>: email+forum(+instant, messaging, … and others peer-to-peer discussion?). <strong><a href="http://stackexchange.com">Stack exchange</a> merged the questioning/solving process</strong> and added a vote mechanism to rank answers: it eased the collaboration on editing the statement and the results while staying synchronous with the discussion and keeping the discussion history. We need such kind of possibilities with discourse: <strong>capitalize on the discussion and preview the results to build a plan.</strong><br/>
                This exist in document oriented software (that added collaboration editing tools), but not that much in collaboration software (that don’t produce documents). For example, while discussing the future plan for Fx/FxOS be supported to keep track on a doc about the proposals plans + criteria &amp; dependencies. In action, it is from <a href="https://mail.mozilla.org/pipermail/firefox-dev/2015-July/003063.html">this</a> plus all the discussion taking place to <a href="https://mail.mozilla.org/pipermail/firefox-dev/2015-July/003119.html">that</a>.<br/>
                This is maybe something like integrating Discourse+Wiki, maybe with the need to have competing and ranked (both for content and underlaying meaning of content=strategy?) plan/page proposals. <strong>From evolving the wiki discussion page to featuring document production into peer-to-peer discussion.</strong></p>
            <h4>A recovering strategy: from fail to win</h4>
            <p>There is maybe one thing that is in the shadow in this plan: <strong>what do we do when/if we (partially) fail ?</strong><br/>
                I think at least we should say that <strong>we document</strong> (keep research going on) to be able to outline and spread the outcomes of what we tried to fight against. So we still try to built consciousness to be ready for the next round.</p>
            <p> </p>
            <p><em>If you see some contradiction in my thoughts, let’s say it’s my state of thinking right now: please voice them so we can go forward.</em><br/>
                <em> The same for thoughts that are voiced definitive (like users are): take it as a first attempt with my bias: let’s state these bias to go forward.</em></p>
            <div class="footnotes" id="footnotes-48">
                <div class="footnotedivider"/>
                <ol>
                    <li id="fn-48-1"> ‘<em>Radical</em>‘ can be in some cultures an euphemism to ‘<em>violent</em>‘. Let’s be clear that the change by increasing violence is done to make a popular uprising of some part against others. While it does not help the majority to magically understand that the minority is right, it stigmatize the radical-violent-changers and in the way it discredits the alternative proposed. <span class="footnotereverse"><a href="https://repeer.org/tag/mozilla/feed/#fnref-48-1">↩</a></span></li>
                </ol>
            </div></div>
        </content>
        <updated>2016-01-16T00:27:13Z</updated>
        <category term="Mozilla"/>
        <category term="Technologie"/>
        <category term="[EN]"/>
        <category term="Firefox"/>
        <category term="Firefox OS"/>
        <category term="Rust"/>
        <category term="Servo"/>
        <category term="Social networks"/>
        <author>
            <name>Nicolas</name>
        </author>
        <source>
            <id>https://repeer.org</id>
            <link href="https://repeer.org/tag/mozilla/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://repeer.org" rel="alternate" type="text/html"/>
            <subtitle>Reprenez le pouvoir !</subtitle>
            <title>Repeer » Mozilla</title>
            <updated>2016-01-16T00:46:46Z</updated>
        </source>
    </entry>

    <entry xml:lang="en">
        <id>http://bluesock.org/%7Ewillkg/blog/pyvideo/status_20160115.html</id>
        <link href="http://bluesock.org/%7Ewillkg/blog/pyvideo/status_20160115.html" rel="alternate" type="text/html"/>
        <title>pyvideo status: January 15th, 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div class="section" id="what-is-pyvideo-org">
            <h3>What is pyvideo.org</h3>
            <p><a class="reference external" href="http://pyvideo.org/">pyvideo.org</a> is an index of Python-related conference and user-group videos on
                the Internet. Saw a session you liked and want to share it? It's likely you can
                find it, watch it, and share it with pyvideo.org.</p>
            <p>This is the latest status report for all things happening on the site.</p>
            <p>It's also an announcement about the end.</p>
            <p><a href="http://bluesock.org/~willkg/blog/pyvideo/status_20160115.html">Read more…</a> (5 mins to read)</p></div></div>
        </summary>
        <updated>2016-01-15T23:30:00Z</updated>
        <category term="dev"/>
        <category term="python"/>
        <category term="pyvideo"/>
        <category term="richard"/>
        <author>
            <name>Will Kahn-Greene</name>
        </author>
        <source>
            <id>http://bluesock.org/%7Ewillkg/blog/</id>
            <link href="http://bluesock.org/%7Ewillkg/blog/" rel="alternate" type="text/html"/>
            <link href="http://bluesock.org/~willkg/blog/rss.xml" rel="self" type="application/rss+xml"/>
            <subtitle>Will Kahn-Greene's blog of Python, Mozilla, GNU/Linux, random content, dennis, Input, SUMO, and other projects mixed in there ad hoc, half-baked and with a twist of lemon</subtitle>
            <title>Will's blog</title>
            <updated>2016-01-16T16:31:16Z</updated>
        </source>
    </entry>

    <entry>
        <id>http://coopcoopbware.tumblr.com/post/137371863755</id>
        <link href="http://coopcoopbware.tumblr.com/post/137371863755" rel="alternate" type="text/html"/>
        <title>RelEng &amp; RelOps Weekly Highlights - January 15, 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of releng’s big goals for Q1 is to deliver a beta via <a href="https://bugzil.la/release-promotion" target="_blank">build promotion</a>. It was great to have some tangible progress there this week with bouncer submission.</p>

            <p>Lots of other stuff in-flight, more details below!
            </p><p><b>Modernize infrastructure</b>:</p>

            <p>Dustin worked with Armen and Joel Maher to run Firefox tests in TaskCluster on an older EC2 instance type where the tests seem to fail less often, perhaps because they are single-CPU or slower.</p>

            <p><b>Improve CI pipeline</b>:</p>

            <p>We turned off automation for b2g 2.2 builds this week, which allowed us to remove some code, reduce some complexity, and regain some small amount of capacity. Thanks to Vlad and Alin on buildduty for helping to land those patches. (<a href="https://bugzil.la/1236835" target="_blank">https://bugzil.la/1236835</a> and <a href="https://bugzil.la/1237985" target="_blank">https://bugzil.la/1237985</a>)</p>

            <p>In a similar vein, Callek landed code to disable all b2g desktop builds and tests on all trees. Another win for increased capacity and reduced complexity! (<a href="https://bugzil.la/1236835" target="_blank">https://bugzil.la/1236835</a>)</p>

            <p><b>Release</b>:</p>

            <p>Kim finished integrating bouncer submission with our release promotion project. That’s one more blocker out of the way! (<a href="https://bugzil.la/1215204" target="_blank">https://bugzil.la/1215204</a>)</p>

            <p>Ben landed several enhancements to our update server: adding aliases to update rules (<a href="https://bugzil.la/1067402" target="_blank">https://bugzil.la/1067402</a>), and allowing fallbacks for rules with whitelists (<a href="https://bugzil.la/1235073" target="_blank">https://bugzil.la/1235073</a>).</p>

            <p><b>Operational</b>:</p>
            <p>There was some excitement last Sunday when all the trees were closed due to timeouts connectivity issues between our SCL3 datacentre and AWS. (<a href="https://bugzil.la/238369" target="_blank">https://bugzil.la/238369</a>)</p>

            <p><b>Build config</b>:</p>

            <p>Mike released v0.7.4 of <a href="http://gittup.org/tup/" target="_blank">tup</a>, and is working on generating the tup backend from moz.build. We hope to offer tup as an alternative build backend sometime soon.</p>

            <p>See you all next week!</p></div>
        </summary>
        <updated>2016-01-15T22:44:13Z</updated>
        <category term="Mozilla"/>
        <category term="releng"/>
        <category term="highlights"/>
        <source>
            <id>http://coopcoopbware.tumblr.com/</id>
            <author>
                <name>Chris Cooper</name>
            </author>
            <link href="http://coopcoopbware.tumblr.com/" rel="alternate" type="text/html"/>
            <link href="http://coopcoopbware.tumblr.com/tagged/Mozilla/rss" rel="self" type="application/rss+xml"/>
            <title>Five different types of fried cheese</title>
            <updated>2016-01-22T21:00:12Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/webdev-beer-and-tell-january-2016/</id>
        <link href="https://air.mozilla.org/webdev-beer-and-tell-january-2016/" rel="alternate" type="text/html"/>
        <title>Webdev Beer and Tell: January 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Webdev Beer and Tell: January 2016" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/35/0f/350f246037ead3bab95fdbd4c2b77484.png" width="160"/>
            Once a month web developers across the Mozilla community get together (in person and virtually) to share what cool stuff we've been working on in...
        </p></div>
        </summary>
        <updated>2016-01-15T22:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/sumo/?p=3665</id>
        <link href="https://blog.mozilla.org/sumo/2016/01/15/whats-up-with-sumo-15th-january/" rel="alternate" type="text/html"/>
        <title>What’s up with SUMO – 15th January</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Hello, SUMO Nation! The second post of the year is here. Have you had a good time in 2016 so far? Let us know in the comments! Now, let’s get going with the updates and activity summaries. It will be … <a class="go" href="https://blog.mozilla.org/sumo/2016/01/15/whats-up-with-sumo-15th-january/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><strong>Hello, SUMO Nation!</strong></p>
            <p>The second post of the year is here. Have you had a good time in 2016 so far? Let us know in the comments!</p>
            <p>Now, let’s get going with the updates and activity summaries. It will be brief today, I promise.</p>
            <h3><strong class="author-name">Welcome, new contributors!<br/>
            </strong></h3>
            <ul>
                <li class="author">
                    <div class="author"><a class="username" href="https://support.mozilla.org/en-US/user/Andy.Yang">Andy.Yang</a></div>
                </li>
            </ul>
            <div class="author">After the massive influx over the last few weeks, we only had Andy introducing himself recently – the warmer the welcome for him!</div>
            <div class="author"/>
            <div class="author">If you just joined us, don’t hesitate – come over and <a href="https://support.mozilla.org/forums/buddies" target="_blank">say “hi” in the forums!</a></div>
            <div class="author"/>
            <div class="author">
                <h3><strong>Contributors of the week<br/>
                </strong></h3>
                <ul>
                    <li><a href="https://blog.mozilla.org/sumo/2016/01/08/whats-up-with-sumo-8th-january/" target="_blank">All the people who joined us in the winter season so far!</a></li>
                </ul>
                <div class="" id="magicdomid64">
                    <p><strong><span style="text-decoration: underline;">We salute you!</span></strong></p>
                </div>
                <div class="author">Don’t forget that if you are new to SUMO and someone helped you get started in a nice way you can <a href="https://support.mozilla.org/forums/buddies/711364?last=65670" target="_blank">nominate them for the Buddy of the Month!</a></div>
                <div class="author"/>
            </div>
            <h3><strong>Most recent SUMO Community meeting</strong></h3>
            <ul>
                <li><a href="https://public.etherpad-mozilla.org/p/sumo-2016-01-11" target="_blank">You can read the notes here</a> and see the video on our <a href="https://www.youtube.com/channel/UCaiposaIhA7HfMqH2NIciyA/videos" target="_blank">YouTube channel</a> and <a href="https://air.mozilla.org/search/?q=sumo" target="_blank">at AirMozilla</a>.<del> </del><del><br/>
                </del></li>
                <li><strong>IMPORTANT: We are considering changing the way the meetings work. Help us figure out what’s best for you – join the discussion on the forums in this thread: <a href="https://support.mozilla.org/en-US/forums/contributors/711752?last=67873">(Monday) Community Meetings in 2016</a>.</strong></li>
            </ul>
            <h3><strong>The next SUMO Community meeting… </strong></h3>
            <ul>
                <li style="text-align: left;">is happening on <a href="https://public.etherpad-mozilla.org/p/sumo-2016-01-18" target="_blank">Monday the 18th – join us</a>!</li>
                <li style="text-align: left;"><strong>Reminder: if you want to add a discussion topic to the upcoming meeting agenda:</strong>
                    <ul>
                        <li style="text-align: left;">Start a thread in the <a href="https://support.mozilla.org/forums/contributors" target="_blank">Community Forums</a>, so that everyone in the community can see what will be discussed and voice their opinion here before Monday (this will make it easier to have an efficient meeting).</li>
                        <li style="text-align: left;">Please do so as soon as you can before the meeting, so that people have time to read, think, and reply (and also add it to the agenda).</li>
                        <li style="text-align: left;">If you can, please attend the meeting in person (or via IRC), so we can follow up on your discussion topic during the meeting with your feedback.</li>
                    </ul>
                </li>
            </ul>
            <h3><strong class="author-g-ivsra51ph44x461i">Developers</strong></h3>
            <ul>
                <li>The new version of the Ask A Question page is here!</li>
                <li>The 2.0 version of the KPI dashboard is in the works.</li>
                <li><a href="http://edwin.mozilla.io/t/sumo" target="_blank">You can see the current state of the backlog our developers are working on here</a>.</li>
                <li><a href="https://public.etherpad-mozilla.org/p/sumo-p-2016-01-14" target="_blank">The latest SUMO Platform meeting notes can be found here</a>.</li>
                <li>Interested in learning how Kitsune (the engine behind SUMO) works? <a href="http://kitsune.readthedocs.org/" target="_blank">Read more about it here</a> and <a href="https://github.com/mozilla/kitsune/" target="_blank">fork it on GitHub</a>!</li>
            </ul>
            <h3><strong>Community</strong></h3>
            <ul>
                <li>Our awesome Bangladesh SUMO Warriors are on the road again! Follow their adventures on Twitter under this tag: <a href="https://twitter.com/search?q=%23sumotourctg" target="_blank">#sumotourctg</a></li>
                <li>
                    <div class="title"><a href="https://support.mozilla.org/forums/contributors/711729?last=67763">Reminder: take a look at our Work Week Summary for Mozlando. We need your feedback for a few things there.</a></div>
                </li>
                <li>
                    <div class="title">Ongoing reminder: if you think you can benefit from getting <a href="https://wiki.mozilla.org/Community_Hardware" target="_blank">a second-hand device</a> to help you with contributing to SUMO, you know where to find us.</div>
                </li>
            </ul>
            <h3><strong class="user-chip" title="adriel0415">Support Forum</strong></h3>
            <ul>
                <li>Say hello to the new people on the forums!
                    <ul>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/Tomi55" target="_blank">Tomi55</a> (Hungarian)</span></li>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/jdc20181" target="_blank">jdc20181</a> (English)</span></li>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/andexi" target="_blank">andexi</a> (Spanish)</span></li>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/Qantas94Heavy" target="_blank">Qantas94Heavy</a> (English)</span></li>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/samuelms79" target="_blank">samuelms79</a> (Brazilian-PT)</span></li>
                        <li><span class="author-a-z87zkz70z39yz83zw7ykz89z3gz82zt"><a href="https://support.mozilla.org/user/jorgecomun" target="_blank">jorgecomun</a> (Spanish)</span></li>
                    </ul>
                </li>
            </ul>
            <div class="">
                <h3><strong class="author-g-ivsra51ph44x461i">Knowledge Base</strong></h3>
                <div class="" id="magicdomid90">
                    <div class="" id="magicdomid82">
                        <ul class="list-bullet1">
                            <li><span class="author-a-z87zjz80zxwjz85z4z65zytdpz68zoz69z"><a href="https://support.mozilla.org/forums/knowledge-base-articles/711304#post-65289" target="_blank">Thanks to everyone who took part in the most recent KB Day!</a></span></li>
                            <li>Version 44 updates should be live now.</li>
                            <li><span class="author-a-w2dz70zaz70z7z89zqz78ziz69zz78zz85zz90zj"><a href="https://docs.google.com/spreadsheets/d/1lkpRPJp9P1P5MRU-c9dwbDC0w5bMmrMdu-BNMp1xe8w/edit#gid=6" target="_blank">Ongoing reminder: learn more about upcoming English article updates by clicking here</a></span>.</li>
                            <li><span style="text-decoration: underline;">Ongoing reminder #2:<a href="https://support.mozilla.org/forums/knowledge-base-articles/" target="_blank"> do you have ideas about improving the KB guidelines and training materials? Let us know in the forums</a>!</span></li>
                        </ul>
                    </div>
                    <div class="" id="magicdomid83">
                        <h3><strong class="author-g-ivsra51ph44x461i">Localization</strong></h3>
                    </div>
                </div>
            </div>
            <div class="" id="magicdomid95">
                <ul>
                    <li>Thanks to everyone writing in with problems, ideas, reports of bugs – all your feedback matters!</li>
                </ul>
            </div>
            <div class="" id="magicdomid75">
                <h3><strong>Firefox<br/>
                </strong></h3>
                <ul>
                    <li><strong>for Android</strong>
                        <ul>
                            <li><a href="https://support.mozilla.org/forums/contributors/711712?last=67653">Learn more about Firefox 43 for Android from the official thread with release notes / issues / discussions</a>.</li>
                            <li>
                                <div class="title"><a href="https://support.mozilla.org/forums/contributors/711718?last=67822">Reminder: Roland is sharing Firefox 44 for Android release notes / issues / discussions</a> with everyone in the forum.</div>
                            </li>
                        </ul>
                    </li>
                </ul>
                <ul>
                    <li><strong>for Desktop</strong>
                        <ul>
                            <li>The <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1238620" target="_blank">uploading issues reported by many users are being tracked here.</a></li>
                            <li><a href="https://support.mozilla.org/questions/firefox?tagged=bug1208145&amp;show=all" target="_blank">The “show passwords” button has been removed from the password manager for the Beta of Version 44</a>. The developers are looking into <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1208145" target="_blank">last minute fixes for that in this bug</a>.</li>
                            <li>Also in Version 44, the <span class="author-a-kz88zz80zhz89z6hlz81znytez70zz66zz68z"><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=606655" target="_blank">“ask me everytime” option for cookies will be removed from the privacy panel.</a></span></li>
                        </ul>
                    </li>
                </ul>
                <ul>
                    <li><strong>for iOS</strong>
                        <div class="" id="magicdomid85">
                            <ul class="list-bullet1">
                                <li><span class="author-a-107uz69zz81zhz78z0z78zz84zz66zz76zz82zz77zj"><a href="https://www.mozilla.org/en-US/firefox/ios/1.4/releasenotes/" target="_blank">Firefox for iOS 1.4 primarily with features for China is here</a>.<br/>
                                </span></li>
                            </ul>
                        </div>
                        <div class="" id="magicdomid86">
                            <ul class="list-bullet1">
                                <li><span class="author-a-107uz69zz81zhz78z0z78zz84zz66zz76zz82zz77zj">Firefox for iOS 2.0 is after 1.4 and hopefully sometime this quarter!</span></li>
                            </ul>
                        </div>
                    </li>
                </ul>
            </div>
            <p>Not that many updates this week, since we’re coming out of our winter slumber (even though winter will be here for a while, still) and plotting an awesome 2016 with you and for you. Take it easy, have a great weekend and see you around SUMO.</p></div>
        </content>
        <updated>2016-01-15T19:38:51Z</updated>
        <category term="General"/>
        <author>
            <name>Michał</name>
        </author>
        <source>
            <id>https://blog.mozilla.org/sumo</id>
            <link href="https://blog.mozilla.org/sumo/feed/" rel="self" type="application/rss+xml"/>
            <link href="https://blog.mozilla.org/sumo" rel="alternate" type="text/html"/>
            <subtitle>SUpport MOzilla's official blog - rocking the helpful web since 2008!</subtitle>
            <title>SUMO Blog</title>
            <updated>2016-01-25T09:31:47Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/paris-firefox-os-hackathon-presentations/</id>
        <link href="https://air.mozilla.org/paris-firefox-os-hackathon-presentations/" rel="alternate" type="text/html"/>
        <title>Paris Firefox OS Hackathon Presentations</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Paris Firefox OS Hackathon Presentations" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/35/83/358305bfa246fff07d707061082134aa.png" width="160"/>
            As an introduction to this weekend's Firefox OS Hackathon in Paris we'll have two presentations: - Guillaume Marty will talk about the current state of...
        </p></div>
        </summary>
        <updated>2016-01-15T18:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:49Z</updated>
        </source>
    </entry>

    <entry>
        <id>https://tacticalsecret.com/tag/mozilla/rss/db7fec0c-34d3-4633-9904-79b98aab34e7</id>
        <link href="https://tacticalsecret.com/renewing-lets-encrypt-certs-nginx/" rel="alternate" type="text/html"/>
        <title>Renewing Let's Encrypt Certs (Nginx)</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>All the first <a href="https://crt.sh/?id=10172479">Let's Encrypt certs for my websites</a> from the LE private beta began expiring last week, so it was time to work through the renewal tooling. I wanted a script that:</p>

            <ol>
                <li>Would be okay to run daily, so there'd be plenty of retries if something went wrong,  </li>
                <li>Wouldn't</li></ol></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>All the first <a href="https://crt.sh/?id=10172479">Let's Encrypt certs for my websites</a> from the LE private beta began expiring last week, so it was time to work through the renewal tooling. I wanted a script that:</p>

            <ol>
                <li>Would be okay to run daily, so there'd be plenty of retries if something went wrong,  </li>
                <li>Wouldn't require extra config for me to forget about if I add a new site,  </li>
                <li>Would only renew certificates expiring in the next few weeks.</li>
            </ol>

            <p>The official Let's Encrypt client team is hard at work producing a great renew tool to handle all this, but it's not released yet. Of course I could use <a href="https://caddyserver.com/">Caddy Server</a> that <a href="https://www.youtube.com/watch?v=nk4EWHvvZtI">just handles all this</a>, but I have a lot invested in Nginx here.</p>

            <p>So I wrote a short script and <a href="https://gist.github.com/jcjones/432eeaa6a2bf25e2c746">put it up in a Gist</a>. </p>

            <p>The script is designed to run daily, with a random start between 00:00 and 02:00 to protect against load spikes at Let's Encrypt's infrastructure. It doesn't do any real reporting, though, except to maintain <code>/var/log/letsencrypt/renew.log</code> as the most-recent failure if one fails.</p>

            <p>It's written to handle Nginx with Upstart's <code>service</code> command. It's pretty modular though; you could make this operate any webserver, or use the webroot method quite easily. Feel free to use the OpenSSL SubjectAlternativeName processing code for whatever purposes you have.</p>

            <p>Happy renewing!</p></div>
        </content>
        <updated>2016-01-15T16:01:19Z</updated>
        <category term="letsencrypt"/>
        <category term="mozilla"/>
        <author>
            <name>James 'J.C.' Jones</name>
        </author>
        <source>
            <id>https://tacticalsecret.com/</id>
            <link href="https://tacticalsecret.com/" rel="alternate" type="text/html"/>
            <link href="https://tacticalsecret.com/tag/mozilla/rss/" rel="self" type="application/rss+xml"/>
            <subtitle>On a mission to solve information security issues for the whole Internet. That, and whatever else comes up.</subtitle>
            <title>mozilla - The Internet of Secure Things</title>
            <updated>2016-01-21T17:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="es-ES">
        <id>http://firefoxmania.uci.cu/?p=15521</id>
        <link href="http://firefoxmania.uci.cu/conoce-los-complementos-destacados-para-enero-2016/" rel="alternate" type="text/html"/>
        <title>Conoce los complementos destacados para enero</title>
        <summary>Comenzó un nuevo año y con él, te traemos nuevos e interesantes complementos para tu navegador preferido que mejoran con creces tu experiencia de navegación. Durante los próximos 6 meses estará trabajando nuevos miembros en el Add-ons Board Team, en la próxima selección desde Firefoxmanía te avisaremos.</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p style="text-align: left;">Comenzó un nuevo año y con él, te traemos nuevos e interesantes complementos para tu navegador preferido que mejoran con creces tu experiencia de navegación. Durante los próximos 6 meses estará trabajando nuevos miembros en el Add-ons Board Team, en la próxima selección desde Firefoxmanía te avisaremos.</p>
            <h3 style="text-align: left;">Elección del mes: uMatrix</h3>
            <p>uMatrix es muy parecido a un <em>firewall</em> y desde una ventana fácilmente podrás controlar todos los lugares a donde tu navegador tiene permitido conectarse, qué tipo de datos pueden descargarse y cual puede ejecutar.</p>
            <blockquote><p>Esta puede ser la extensión perfecta para el control avanzado de los usuarios.</p></blockquote>
            <p><span id="more-15521"/></p>

            <a href="http://firefoxmania.uci.cu/conoce-los-complementos-destacados-para-enero-2016/umatrix/"><img alt="Interfaz principal de uMatrix" class="attachment-thumbnail size-thumbnail" height="160" src="http://firefoxmania.uci.cu/wp-content/uploads/2016/01/uMatrix-160x160.png" width="160"/></a>
            <a href="http://firefoxmania.uci.cu/conoce-los-complementos-destacados-para-enero-2016/umatrix2/"><img alt="Opciones de configuraci&#xF3;n de uMatrix" class="attachment-thumbnail size-thumbnail" height="160" src="http://firefoxmania.uci.cu/wp-content/uploads/2016/01/uMatrix2-160x160.png" width="160"/></a>

            <p><em><a href="http://addons.firefoxmania.uci.cu/umatrix/" target="_blank">Instalar uMatrix »</a></em></p>
            <h3>También te recomendamos</h3>
            <p style="text-align: left;"><a href="http://addons.firefoxmania.uci.cu/https-everywhere/" target="_blank">⇒ HTTPS Everywhere</a> por <a href="https://addons.mozilla.org/en-US/firefox/user/eff-technologists/" title="EFF Technologists">EFF Technologists</a></p>
            <p style="text-align: left;">Protege tus comunicaciones habilitando la encriptación HTTPS automáticamente en los sitios conocidos que la soportan, incluso cuando navegas mediante sitios que no incluyen el prefijo “https” en la URL.</p>
            <p style="text-align: left;"><a href="http://addons.firefoxmania.uci.cu/add-to-search-bar/" target="_blank">⇒ Add to Search Bar</a> por <a href="https://addons.mozilla.org/firefox/user/dr-evil/" target="_blank" title="AdblockLite">Dr. Evil</a></p>
            <p style="text-align: left;">Hace posible que cualquier página con un formulario de búsqueda disponible pueda ser añadido fácilmente a la barra de búsqueda de Firefox.</p>
            <div class="wp-caption aligncenter" id="attachment_15528" style="width: 262px;"><a href="http://firefoxmania.uci.cu/wp-content/uploads/2016/01/add_to_search_bar.png" rel="attachment wp-att-15528"><img alt="add_to_search_bar" class="wp-image-15528 size-medium" height="226" src="http://firefoxmania.uci.cu/wp-content/uploads/2016/01/add_to_search_bar-252x226.png" width="252"/></a><p class="wp-caption-text">Añadiendo la búsqueda de un sitio web a la barra de búsqueda</p></div>
            <p style="text-align: left;"><a href="http://addons.firefoxmania.uci.cu/duplicate-tabs-closer/" target="_blank">⇒ Duplicate Tabs Closer</a> por <a href="https://addons.mozilla.org/firefox/user/peuj/" target="_blank" title="The 1-Click YouTube Video Download Team">Peuj</a></p>
            <p style="text-align: left;">Detecta las pestañas duplicadas en tu navegador y automáticamente las cierra.</p>
            <h3 style="text-align: left;">Nomina tus complementos favoritos</h3>
            <p style="text-align: left;">A nosotros nos encantaría que <strong>fueras parte del proceso</strong> de seleccionar los mejores complementos para Firefox y nos gustaría escucharte. <em>¿No sabes cómo?</em> Sólo tienes que <em>enviar un correo electrónico</em> a la dirección <strong>amo-featured@mozilla.org</strong> con el nombre del complemento o el archivo de instalación y los miembros evaluarán tu recomendación.</p>
            <p style="text-align: left;"><strong>Fuente:</strong> <a href="https://blog.mozilla.org/addons/2016/01/01/january-2016-featured-add-ons/" target="_blank">Mozilla Add-ons Blog</a></p></div>
        </content>
        <updated>2016-01-15T15:10:26Z</updated>
        <category term="Addons"/>
        <category term="firefox"/>
        <category term="complementos"/>
        <author>
            <name>Yunier J</name>
        </author>
        <source>
            <id>http://firefoxmania.uci.cu</id>
            <link href="http://firefoxmania.uci.cu/author/sosa/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://firefoxmania.uci.cu" rel="alternate" type="text/html"/>
            <subtitle>Comunidad Mozilla Firefox de Cuba</subtitle>
            <title>Yunier J – Firefoxmanía</title>
            <updated>2016-01-23T12:16:22Z</updated>
        </source>
    </entry>

    <entry>
        <id>https://timtaubert.de/blog/2016/01/build-your-own-signal-desktop</id>
        <link href="https://timtaubert.de/blog/2016/01/build-your-own-signal-desktop/" rel="alternate" type="text/html"/>
        <title>Build Your Own Signal Desktop</title>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Signal Private Messenger is great. <strong>Use it.</strong> It’s probably the best secure
            messenger on the market. When recently a desktop app was announced people were
            eager to join the beta and even happier when an invite finally showed up in
            their inbox. So was I, it’s a great app and works surprisingly well for an early
            version.</p>

            <p>The only problem is that it’s a Chrome App. Apart from excluding folks with
                other browsers it’s also a shitty user experience. If you too want your
                messaging app not tied to a browser then let’s just build our own standalone
                variant of Signal Desktop.</p>

            <h3>NW.js beta with Chrome App support</h3>

            <p>Signal Desktop is a Chrome App, so the easiest way to turn it into a standalone
                app is to use <a href="http://nwjs.io/">NW.js</a>. Conveniently, their next release v0.13
                will ship with Chrome App support and is available for download as a beta
                version.</p>

            <p>First, make sure you have <code>git</code> and <code>npm</code> installed. Then open a terminal and
                prepare a temporary build directory to which we can download a few things and
                where we can build the app:</p>

            <figure class="code"><div class="highlight"><pre>$ mkdir signal-build
                $ cd signal-build
            </pre></div></figure>


            <h3>[OS X] Packaging Signal and NW.js</h3>

            <p>Download the latest beta of NW.js and <code>unzip</code> it. We’ll extract the application
                and use it as a template for our Signal clone. The NW.js project does
                unfortunately not seem to provide a secure source (or at least hashes)
                for their downloads.</p>

            <figure class="code"><div class="highlight"><pre>$ wget http://dl.nwjs.io/v0.13.0-beta3/nwjs-sdk-v0.13.0-beta3-osx-x64.zip
                $ unzip nwjs-sdk-v0.13.0-beta3-osx-x64.zip
                $ cp -r nwjs-sdk-v0.13.0-beta3-osx-x64/nwjs.app SignalPrivateMessenger.app
            </pre></div></figure>


            <p>Next, clone the Signal repository and use NPM to install the necessary modules.
                Run the <code>grunt</code> automation tool to build the application.</p>

            <figure class="code"><div class="highlight"><pre>$ git clone https://github.com/WhisperSystems/Signal-Desktop.git
                $ cd Signal-Desktop/
                $ npm install
                $ node_modules/grunt-cli/bin/grunt
            </pre></div></figure>


            <p>Finally, simply to copy the <code>dist</code> folder containing all the juicy Signal files
                into the application template we created a few moments ago.</p>

            <figure class="code"><div class="highlight"><pre>$ cp -r dist ../SignalPrivateMessenger.app/Contents/Resources/app.nw
                $ open ..
            </pre></div></figure>


            <p>The last command opens a Finder window. Move <code>SignalPrivateMessenger.app</code> to
                your Applications folder and launch it as usual. You should now see a welcome
                page!</p>

            <h3>[Linux] Packaging Signal and NW.js</h3>

            <p>The build instructions for Linux aren’t too different but I’ll write them down,
                if just for convenience. Start by cloning the Signal Desktop repository and
                build.</p>

            <figure class="code"><div class="highlight"><pre>$ git clone https://github.com/WhisperSystems/Signal-Desktop.git
                $ cd Signal-Desktop/
                $ npm install
                $ node_modules/grunt-cli/bin/grunt
            </pre></div></figure>


            <p>The <code>dist</code> folder contains the app, ready to be launched. <code>zip</code> it and place
                the resulting package somewhere handy.</p>

            <figure class="code"><div class="highlight"><pre>$ cd dist
                $ zip -r ../../package.nw *
            </pre></div></figure>


            <p>Back to the top. Download the NW.js binary, extract it, and change into the
                newly created directory. Move the <code>package.nw</code> file we created earlier next to
                the <code>nw</code> binary and we’re done. The <code>nwjs-sdk-v0.13.0-beta3-linux-x64</code> folder
                does now contain the standalone Signal app.</p>

            <figure class="code"><div class="highlight"><pre>$ cd ../..
                $ wget http://dl.nwjs.io/v0.13.0-beta3/nwjs-sdk-v0.13.0-beta3-linux-x64.tar.gz
                $ tar xfz nwjs-sdk-v0.13.0-beta3-linux-x64.tar.gz
                $ cd nwjs-sdk-v0.13.0-beta3-linux-x64
                $ mv ../package.nw .
            </pre></div></figure>


            <p>Finally, launch NW.js. You should see a welcome page!</p>

            <figure class="code"><div class="highlight"><pre>$ ./nw
            </pre></div></figure>


            <h3>If you see something, file something</h3>

            <p>Our standalone Signal clone mostly works, but it’s far from perfect. We’re
                pulling from master and that might bring breaking changes that weren’t
                sufficiently tested.</p>

            <p>We don’t have the right icons. The app crashes when you click a media message.
                It opens a blank popup when you click a link. It’s quite big because also NW.js
                has bugs and so we have to use the SDK build for now. In the future it would be
                great to have automatic updates, and maybe even signed builds.</p>

            <p>Remember, Signal Desktop is beta, and completely untested with NW.js. If you
                want to help file bugs, but only after checking that those affect the Chrome
                App too. If you want to fix a bug only occurring in the standalone version
                it’s probably best to file a pull request and cross fingers.</p>

            <h3>Is this secure?</h3>

            <p>Great question! I don’t know. I would love to get some more insights from people
                that know more about the NW.js security model and whether it comes with all the
                protections Chromium can offer. Another interesting question is whether bundling
                Signal Desktop with NW.js is in any way worse (from a security perspective) than
                installing it as a Chrome extension. If you happen to have an opinion about
                that, I would love to hear it.</p>

            <p>Another important thing to keep in mind is that when building Signal on your
                own you will possibly miss automatic and signed security updates from the
                Chrome Web Store. Keep an eye on the repository and rebuild your app from
                time to time to not fall behind too much.</p></div>
        </content>
        <updated>2016-01-15T14:00:00Z</updated>
        <source>
            <id>https://timtaubert.de/</id>
            <author>
                <name>Tim Taubert</name>
            </author>
            <link href="https://timtaubert.de/atom.xml" rel="self" type="application/atom+xml"/>
            <link href="https://timtaubert.de/" rel="alternate" type="text/html"/>
            <title>Tim Taubert</title>
            <updated>2016-01-15T15:04:09Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://glandium.org/blog/?p=3579</id>
        <link href="http://glandium.org/blog/?p=3579" rel="alternate" type="text/html"/>
        <title>Announcing git-cinnabar 0.3.0</title>
        <summary>Git-cinnabar is a git remote helper to interact with mercurial repositories. It allows to clone, pull and push from/to mercurial remote repositories, using git. Get it on github. These release notes are also available on the git-cinnabar wiki. Development had been stalled for a few months, with many improvements in the next branch without any […]</summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Git-cinnabar is a git remote helper to interact with mercurial repositories. It allows to clone, pull and push from/to mercurial remote repositories, using git.</p>
            <p><a href="https://github.com/glandium/git-cinnabar">Get it on github</a>.</p>
            <p>These release notes are also <a href="https://github.com/glandium/git-cinnabar/wiki/Release-Notes:-0.3.0">available on the git-cinnabar wiki</a>.</p>
            <p>Development had been stalled for a few months, with many improvements in the<br/>
                <code>next</code> branch without any new release. I used some time during the new year<br/>
                break and after in order to straighten things up in order to create a new<br/>
                release, delaying many of the originally planned changes to a future 0.4.0<br/>
                release.</p>
            <h3>What’s new since 0.2.2?</h3>
            <ul>
                <li>Speed and memory usage were improved when doing <code>git push</code>.</li>
                <li>Now works on Windows, at least to some extent. See <a href="http://glandium.org/blog/Windows-Support">details</a>.</li>
                <li>Support for pre-0.1.0 git-cinnabar repositories was removed. You must first<br/>
                    use a git-cinnabar version between 0.1.0 and 0.2.2 to upgrade its metadata.</li>
                <li>It is now possible to attach/graft git-cinnabar metadata to existing commits<br/>
                    matching mercurial changesets. This allows to migrate from some other<br/>
                    hg-to-git tool to git-cinnabar while preserving the existing git commits.<br/>
                    See <a href="http://glandium.org/blog/Mozilla%3A-Using-a-git-clone-of-gecko%E2%80%90dev-to-push-to-mercurial">an example of how this works with the git clone of the Gecko mercurial<br/>
                        repository</a>
                </li>
                <li>Avoid mercurial printing its progress bar, messing up with git-cinnabar’s<br/>
                    output.</li>
                <li>It is now possible to fetch from an incremental mercurial bundle (without<br/>
                    a root changeset).</li>
                <li>It is now possible to push to a new mercurial repository without <code>-f</code>.</li>
                <li>By default, reject pushing a new root to a mercurial repository.</li>
                <li>Make the connection to a mercurial repository through ssh respect the<br/>
                    <code>GIT_SSH</code> and <code>GIT_SSH_COMMAND</code> environment variables.</li>
                <li>
                    <code>git cinnabar</code> now has a proper argument parser for all its subcommands.</li>
                <li>
                </li>
                <li>A new <code>git cinnabar python</code> command allows to run python scripts or open a<br/>
                    python shell with the right sys.path to import the cinnabar module.</li>
                <li>All git-cinnabar metadata is now kept under a single ref (although for<br/>
                    convenience, other refs are created, but they can be derived if necessary).</li>
                <li>Consequently, a new <code>git cinnabar rollback</code> command allows to roll back to<br/>
                    previous metadata states.</li>
                <li>git-cinnabar metadata now tracks the manifests DAG.</li>
                <li>A new <code>git cinnabar bundle</code> command allows to create mercurial bundles,<br/>
                    mostly for debugging purposes, without requiring to hit a mercurial server.</li>
                <li>Updated git to 2.7.0 for the native helper.</li>
            </ul>
            <h3>Development process changes</h3>
            <p>Up to before this release closing in, the <code>master</code> branch was dedicated to<br/>
                releases, and development was happening on the <code>next</code> branch, until a new<br/>
                release happens.</p>
            <p>From now on, the <code>release</code> branch will take dot-release fixes and new<br/>
                releases, while the <code>master</code> branch will receive all changes that are<br/>
                validated through testing (currently semi-automatically tested with<br/>
                out-of-tree tests based on four real-life mercurial repositories, with<br/>
                some automated CI based on in-tree tests used in the future).</p>
            <p>The <code>next</code> branch will receive changes to be tested in CI when things<br/>
                will be hooked up, and may have rewritten history as a consequence of<br/>
                wanting passing tests on every commit on <code>master</code>.</p></div>
        </content>
        <updated>2016-01-15T08:56:40Z</updated>
        <category term="cinnabar"/>
        <category term="p.m.o"/>
        <category term="en"/>
        <author>
            <name>glandium</name>
        </author>
        <source>
            <id>http://glandium.org/blog</id>
            <link href="http://glandium.org/blog/?feed=rss2&amp;cat=25&amp;tag=en" rel="self" type="application/rss+xml"/>
            <link href="http://glandium.org/blog" rel="alternate" type="text/html"/>
            <subtitle>glandium.org</subtitle>
            <title>p.m.o – glandium.org</title>
            <updated>2016-01-16T11:30:44Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/web-qa-weekly-meeting-20160114/</id>
        <link href="https://air.mozilla.org/web-qa-weekly-meeting-20160114/" rel="alternate" type="text/html"/>
        <title>Web QA Weekly Meeting, 14 Jan 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Web QA Weekly Meeting" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/f5/13/f5137857516694df0458e837c2d3a4be.png" width="160"/>
            This is our weekly gathering of Mozilla'a Web QA team filled with discussion on our current and future projects, ideas, demos, and fun facts.
        </p></div>
        </summary>
        <updated>2016-01-14T17:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:49Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>https://air.mozilla.org/reps-weekly-20160114/</id>
        <link href="https://air.mozilla.org/reps-weekly-20160114/" rel="alternate" type="text/html"/>
        <title>Reps weekly, 14 Jan 2016</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
            <img alt="Reps weekly" class="wp-post-image" height="90" src="https://air.cdn.mozilla.net/media/cache/ea/95/ea959e7cca319261380787a7d8f66a94.png" width="160"/>
            This is a weekly call with some of the Reps to discuss all matters about/affecting Reps and invite Reps to share their work with everyone.
        </p></div>
        </summary>
        <updated>2016-01-14T16:00:00Z</updated>
        <author>
            <name>Air Mozilla</name>
        </author>
        <source>
            <id>https://air.mozilla.org/</id>
            <link href="https://air.mozilla.org/" rel="alternate" type="text/html"/>
            <link href="https://air.mozilla.org/" rel="self" type="application/rss+xml"/>
            <rights>Except where otherwise noted, content on this site is licensed under the Creative Commons Attribution Share-Alike License v3.0 or any later version.</rights>
            <subtitle>Air Mozilla is the Internet multimedia presence of Mozilla, with live and pre-recorded shows, interviews, news snippets, tutorial videos, and features about the Mozilla community.</subtitle>
            <title>Air Mozilla</title>
            <updated>2016-01-25T20:31:50Z</updated>
        </source>
    </entry>

    <entry xml:lang="en-US">
        <id>http://blog.mozilla.org/community/?p=2281</id>
        <link href="http://blog.mozilla.org/community/2016/01/13/32c3-report-chaos-time-zone/" rel="alternate" type="text/html"/>
        <title>32C3 Report – Chaos Time Zone</title>
        <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Written by Valentin Schmitt. Entering the CCH (Congress Center Hamburg) between Christmas and new year brings you somewhere else than Hamburg on Central European Time. Most people you’ll meet will say they are from Internet (or the Internets, if they … <a class="go" href="http://blog.mozilla.org/community/2016/01/13/32c3-report-chaos-time-zone/">Continue reading</a></div>
        </summary>
        <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Written by <a href="https://mozillians.org/en-US/u/Valentin/">Valentin Schmitt</a>.</p>
            <p>Entering the CCH (Congress Center Hamburg) between Christmas and new year brings you somewhere else than Hamburg on Central European Time.</p>
            <p>Most people you’ll meet will say they are from Internet (or the Internets, if they are funny), and for a few days you’ll live in -what a friend of mine called- Chaos Time Zone: a blurry mix of everyone’s time difference. Days are pretty shorts anyway and you’ll probably spend a lot of time under artificial light, so it won’t help your internal clock keeping on track. The organizers will gently remind you the 6,2,1 rule: 6 hours of sleep, 2 meals and 1 shower per day, that should keep you safe. You’ll probably meet a lot of great people, and will often have a hard time to decide which talk or workshop to go to.<br/>
                This is the <a href="https://events.ccc.de/congress/2015/wiki/Static:Main_Page">32nd Chaos Communication Congress</a>. Welcome, and have fun!</p>
            <div class="wp-caption aligncenter" id="attachment_2282" style="width: 610px;"><a href="https://www.flickr.com/photos/mariobehling/23398995803/"><img alt="32C3 Chaos Communication Congress" class="size-large wp-image-2282" height="400" src="https://blog.mozilla.org/community/files/2016/01/CCCPost1-600x400.jpg" width="600"/></a><p class="wp-caption-text">32C3 Chaos Communication Congress – Photo: Mario Behling</p></div>
            <h3>FxOS is not dead.</h3>
            <p>I looked for a screen printer, or anything to do myself a t-shirt with the message “Firefox OS is not dead!” on it, but very surprisingly regarding the variety of machines there, I couldn’t find any on site. I really wanted to do that, because most of the people I talked to about<br/>
                Firefox OS answered me “But isn’t Firefox OS dead?”. I bet it won’t come as a surprise for you, as there was a lot of feedback from the community regarding what some might call “a PR disaster”. It just made it very clear to me that we (still) have to communicate a lot on this topic, and very loudly, because the tech news websites will be less likely to spread the word this time.</p>
            <p>Once this detail (<b>*cough*</b>) was clarified, almost everybody I had the chance to talk to showed a lot of interested for the project, the only ones who didn’t were the hardcore Free Software enthusiasts, whom have been disappointed by Mozilla recent policy choices (like the tiles with<br/>
                advertisement, or the DRM support in Firefox desktop), or the people who care less about software freedom and prefer an iPhone to a free (as in freedom) mobile OS.</p>
            <div class="wp-caption aligncenter" id="attachment_2283" style="width: 610px;"><a href="https://www.flickr.com/photos/mariobehling/23943014701"><img alt="Mozilla and Firefox at 32C3 with friends" class="size-large wp-image-2283" height="400" src="https://blog.mozilla.org/community/files/2016/01/CCCPost2-600x400.jpg" width="600"/></a><p class="wp-caption-text">Mozilla and Firefox at 32C3 with friends – Photo: Mario Behling</p></div>
            <h3>“Well, it’s Mozilla.”</h3>
            <p>Mozilla has a pretty good image in the Free Software community, and the main reason why people never tried a Firefox OS device is only because they never had the chance to do so (not many devices marketed in Europe or the US, not many ports on mainstream phones). Fortunately enough, I had some foxfooding devices to hand out. The <a href="https://firefoxos.mozilla.community/foxfooding-faq/">foxfooding program</a> had a very positive reception, most people were happy to have the chance to try the OS, participate in sending data to Mozilla, file bugs, some were eager to develop apps, and try port the OS on their favorite phone or device (the RasPi got a bunch of them very excited).</p>
            <p>More importantly, they really asked me how to flash a device, where to find the documentation to get started, how to file a bug. The people I handed a device to planned to show it to their colleagues, friends and fellow hacktivists, and were very excited to have phone with a hardware good enough to provide a responsive experience.</p>
            <h3>Questions?</h3>
            <p>“Is there a Signal app or any secure messaging app?”<br/>
                “Can I use Tor?”<br/>
                “Can I keep OSM maps in cache?”<br/>
                “Is there an app for WhatsApp?”<br/>
                These were the questions I was asked the most. It’s pretty expected that the hackers community is looking for reliable privacy tools, but I was a bit surprised by the last question that still came up several times. <img alt=":)" class="wp-smiley" src="http://blog.mozilla.org/community/wp-includes/images/smilies/simple-smile.png" style="height: 1em;"/></p>
            <h3>Mozillians, assemble!</h3>
            <p>An <a href="https://events.ccc.de/congress/2015/wiki/Static:Assemblies">assembly</a> is the name the Chaos Communication Congress gives to the physical place (typically a bunch of tables with a power outlet) within the CCH where people can gather to hack, share ideas and have self organized-sessions on a particular topic, or around a particular project, there were 277 registered this year.</p>
            <div class="wp-caption aligncenter" id="attachment_2284" style="width: 610px;"><a href="https://www.flickr.com/photos/fossasia/23742587859"><img alt="Assembling Under The Lights" class="size-large wp-image-2284" height="450" src="https://blog.mozilla.org/community/files/2016/01/CCCPost3-600x450.jpg" width="600"/></a><p class="wp-caption-text">Assembling Under The Lights – Photo: Hong Phuc FOSSASIA</p></div>
            <p>With the Mozilla Assembly, we had several sessions (directly at the Assembly or in dedicated rooms) over these 4 days:</p>
            <ul>
                <li>Several Nightly Firefox OS workshops, combining more than 50 participants;</li>
                <li>The Mozilla community meetup that gathered 20 participants;</li>
                <li>a Thunderbird session with 42 participants;</li>
                <li>an IoT and Firefox OS workshop, in a dedicated room that was <a href="https://www.flickr.com/photos/fossasia/23485427703/">packed with 90 participants</a>;</li>
            </ul>
            <p>On average, there were around 15 Mozillians at the Assembly and a continuous flow of people from different community.</p>
            <p>Other projects where Mozilla is involved were represented, <a href="https://media.ccc.de/v/32c3-7528-let_s_encrypt_--_what_launching_a_free_ca_looks_like">like Let’s Encrypt</a>, with a talk so successful that the conference room was full, and New Palmyra, for which Mozillians organized a session for 25 participants.</p>
            <p>The hackers and makers communities have a real ethical and practical interest in a mobile or embedded OS that’s trustworthy and hackable, we bear similar values and Firefox OS is a great opportunity to strengthen the ties between us.</p></div>
        </content>
        <updated>2016-01-13T22:55:23Z</updated>
        <category term="Events"/>
        <category term="Participation"/>
        <category term="Privacy"/>
        <category term="32c3"/>
        <category term="CCC"/>
        <category term="contributor"/>
        <category term="firefox os"/>
        <category term="Moz32c3"/>
        <category term="MozParticipation"/>
        <category term="Participation Team"/>
        <category term="privacy"/>
        <author>
            <name>Brian King</name>
        </author>
        <source>
            <id>http://blog.mozilla.org/community</id>
            <link href="http://blog.mozilla.org/community/feed/" rel="self" type="application/rss+xml"/>
            <link href="http://blog.mozilla.org/community" rel="alternate" type="text/html"/>
            <subtitle>News and notes from and for the Mozilla community.</subtitle>
            <title>about:community</title>
            <updated>2016-01-25T16:31:43Z</updated>
        </source>
    </entry>
</feed>
