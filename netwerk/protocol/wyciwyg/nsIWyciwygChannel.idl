/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsIChannel.idl"

/**
 * A channel to  manage all cache-related interactions for layout
 * when it is dealing with dynamic pages created through 
 * document.write(). This interface provides methods that will
 * help layout save dynamic pages in cache for future retrievals.
 */

[scriptable, uuid (8b8f3341-46da-40f5-a16f-41a91f5d25dd)]
interface nsIWyciwygChannel : nsIChannel
{
  /**
   * Append data to the cache entry; opens the cache entry if necessary.
   */
  void writeToCacheEntry(in AString aData);

  /**
   * Close the cache entry; subsequent writes have undefined behavior.
   */
  void closeCacheEntry(in nsresult reason);

  /**
   * Set the wyciwyg channels security info
   */
  void setSecurityInfo(in nsISupports aSecurityInfo);

  /**
   * Store and read a charset and charset source on the wyciwyg channel.  These
   * are opaque values to the channel; consumers who set them should know what
   * they mean.
   */
  void setCharsetAndSource(in long aSource, in ACString aCharset);
  /**
   * The return value is the charset.  Throws if either the charset or the
   * source cannot be retrieved.  This is guaranteed to return a nonzero source
   * and a nonempty charset if it does not throw.
   */
  ACString getCharsetAndSource(out long aSource);
};
