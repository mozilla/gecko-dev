# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

EXPORTS += [
    'nsFileStreams.h',
    'nsMIMEInputStream.h',
    'nsTemporaryFileInputStream.h',
    'nsURLHelper.h',
]

EXPORTS.mozilla.net += [
    'ChannelDiverterChild.h',
    'ChannelDiverterParent.h',
    'Dashboard.h',
    'DashboardTypes.h',
]

UNIFIED_SOURCES += [
    'ArrayBufferInputStream.cpp',
    'BackgroundFileSaver.cpp',
    'ChannelDiverterChild.cpp',
    'ChannelDiverterParent.cpp',
    'Dashboard.cpp',
    'EventTokenBucket.cpp',
    'LoadContextInfo.cpp',
    'NetworkActivityMonitor.cpp',
    'nsAsyncStreamCopier.cpp',
    'nsAuthInformationHolder.cpp',
    'nsBase64Encoder.cpp',
    'nsBaseChannel.cpp',
    'nsBaseContentStream.cpp',
    'nsBufferedStreams.cpp',
    'nsChannelClassifier.cpp',
    'nsDirectoryIndexStream.cpp',
    'nsDNSPrefetch.cpp',
    'nsDownloader.cpp',
    'nsFileStreams.cpp',
    'nsIncrementalDownload.cpp',
    'nsInputStreamChannel.cpp',
    'nsInputStreamPump.cpp',
    'nsIOService.cpp',
    'nsLoadGroup.cpp',
    'nsMediaFragmentURIParser.cpp',
    'nsMIMEInputStream.cpp',
    'nsNetAddr.cpp',
    'nsNetStrings.cpp',
    'nsPACMan.cpp',
    'nsPreloadedStream.cpp',
    'nsProtocolProxyService.cpp',
    'nsProxyInfo.cpp',
    'nsRequestObserverProxy.cpp',
    'nsSerializationHelper.cpp',
    'nsServerSocket.cpp',
    'nsSimpleNestedURI.cpp',
    'nsSimpleStreamListener.cpp',
    'nsSimpleURI.cpp',
    'nsStandardURL.cpp',
    'nsStreamListenerTee.cpp',
    'nsStreamListenerWrapper.cpp',
    'nsStreamLoader.cpp',
    'nsStreamTransportService.cpp',
    'nsSyncStreamListener.cpp',
    'nsTemporaryFileInputStream.cpp',
    'nsTransportUtils.cpp',
    'nsUDPSocket.cpp',
    'nsUnicharStreamLoader.cpp',
    'nsURIChecker.cpp',
    'nsURLHelper.cpp',
    'nsURLParsers.cpp',
    'Predictor.cpp',
    'ProxyAutoConfig.cpp',
    'RedirectChannelRegistrar.cpp',
    'StreamingProtocolService.cpp',
    'Tickler.cpp',
]

# These files cannot be built in unified mode because they force NSPR logging.
SOURCES += [
    'nsAsyncRedirectVerifyHelper.cpp',
    'nsSocketTransport2.cpp',
    'nsSocketTransportService2.cpp',
]

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    SOURCES += [
        'nsAutodialWin.cpp',
        'nsNativeConnectionHelper.cpp',
        'nsURLHelperWin.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    SOURCES += [
        'nsURLHelperOSX.cpp',
    ]
else:
    SOURCES += [
        'nsURLHelperUnix.cpp',
    ]

if CONFIG['MOZ_ENABLE_QTNETWORK']:
    SOURCES += [
        'nsAutodialQt.cpp',
    ]

EXTRA_JS_MODULES += [
    'NetUtil.jsm',
]

FAIL_ON_WARNINGS = True

MSVC_ENABLE_PGO = True

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'necko'
LOCAL_INCLUDES += [
    '/dom/base',
    '/netwerk/protocol/http'
]

if 'rtsp' in CONFIG['NECKO_PROTOCOLS']:
    LOCAL_INCLUDES += [
        '/netwerk/protocol/rtsp/controller',
        '/netwerk/protocol/rtsp/rtsp',
    ]

if CONFIG['MOZ_ENABLE_QTNETWORK']:
    LOCAL_INCLUDES += [
        '/netwerk/system/qt',
    ]

if CONFIG['ENABLE_TESTS']:
    DEFINES['PREDICTOR_TESTS'] = True
