/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

/**
 * Buffer type - for storing 8-bit octet values.
 */
[ptr] native buffer(unsigned char);

[scriptable, uuid(0EC80360-075C-11d4-9FD4-00C04F1B83D8)]
interface nsISecretDecoderRing: nsISupports {

  /**
   * Encrypt a buffer - callable only from C++.
   *
   * @return The length of the data in the output buffer.
   */
  [noscript] long encrypt(in buffer data, in long dataLen, out buffer result);

  /**
   * Decrypt a buffer - callable only from C++.
   *
   * @return The length of the data in the output buffer.
   */
  [noscript] long decrypt(in buffer data, in long dataLen, out buffer result);

  /**
   * Encrypt nul-terminated string to BASE64 output.
   */
  string encryptString(in string text);

  /**
   * Decrypt BASE64 input to nul-terminated string output.  There is
   * no check for embedded nul values in the decrypted output.
   */
  string decryptString(in string crypt);

  /**
   * Prompt the user to change the password on the SDR key.
   */
  void changePassword();

  /**
   * Logout of the security device that protects the SDR key.
   */
  void logout();

  /**
   * Logout of the security device that protects the SDR key and tear
   * down authenticated objects.
   */
  void logoutAndTeardown();
};

/**
 * Configuration interface for the Secret Decoder Ring
 *  - this interface allows setting the window that will be
 *    used as parent for dialog windows (such as password prompts)
 */
[scriptable, uuid(01D8C0F0-0CCC-11d4-9FDD-000064657374)]
interface nsISecretDecoderRingConfig: nsISupports {
  void setWindow(in nsISupports w);
};
